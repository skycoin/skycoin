{"version":3,"file":"metadata_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  AttributeMetadata,\n  ReflectiveDependency,\n  OptionalMetadata,\n  ComponentMetadata,\n  SelfMetadata,\n  HostMetadata,\n  SkipSelfMetadata,\n  Provider,\n  PLATFORM_DIRECTIVES,\n  PLATFORM_PIPES,\n  reflector,\n  Injectable,\n  Inject,\n  Optional,\n  ViewMetadata,\n  NoAnnotationError,\n  QueryMetadata,\n  resolveForwardRef,\n  InjectMetadata,\n  ViewQueryMetadata\n} from '@angular/core';\nimport {constructDependencies, LIFECYCLE_HOOKS_VALUES, ReflectorReader} from '../core_private';\nimport {\n  Type,\n  isBlank,\n  isPresent,\n  isArray,\n  stringify,\n  isString,\n  isStringMap\n} from '../src/facade/lang';\nimport {StringMapWrapper} from '../src/facade/collection';\nimport {BaseException} from '../src/facade/exceptions';\nimport * as cpl from './compile_metadata';\nimport {DirectiveResolver} from './directive_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ViewResolver} from './view_resolver';\nimport {hasLifecycleHook} from './directive_lifecycle_reflector';\nimport {MODULE_SUFFIX, sanitizeIdentifier, ValueTransformer, visitValue} from './util';\nimport {assertArrayOfStrings} from './assertions';\nimport {getUrlScheme} from './url_resolver';\nimport {createProvider, isProviderLiteral} from \"../core_private\";\nexport class CompileMetadataResolver {\n  private _directiveCache = new Map<Type, cpl.CompileDirectiveMetadata>();\n  private _pipeCache = new Map<Type, cpl.CompilePipeMetadata>();\n  private _anonymousTypes = new Map<Object, number>();\n  private _anonymousTypeIndex = 0;\n  private _reflector: ReflectorReader;\n\n  constructor(private _directiveResolver: DirectiveResolver, private _pipeResolver: PipeResolver,\n              private _viewResolver: ViewResolver, private _platformDirectives: Type[], private _platformPipes: Type[],\n              _reflector?: ReflectorReader) {\n    if (isPresent(_reflector)) {\n      this._reflector = _reflector;\n    } else {\n      this._reflector = reflector;\n    }\n  }\n\n  private sanitizeTokenName(token: any): string {\n    let identifier = stringify(token);\n    if (identifier.indexOf('(') >= 0) {\n      // case: anonymous functions!\n      let found = this._anonymousTypes.get(token);\n      if (isBlank(found)) {\n        this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n        found = this._anonymousTypes.get(token);\n      }\n      identifier = `anonymous_token_${found}_`;\n    }\n    return sanitizeIdentifier(identifier);\n  }\n\n  getDirectiveMetadata(directiveType: Type): cpl.CompileDirectiveMetadata {\n    var meta = this._directiveCache.get(directiveType);\n    if (isBlank(meta)) {\n      var dirMeta = this._directiveResolver.resolve(directiveType);\n      var templateMeta = null;\n      var changeDetectionStrategy = null;\n      var viewProviders = [];\n      var moduleUrl = staticTypeModuleUrl(directiveType);\n      if (dirMeta instanceof ComponentMetadata) {\n        assertArrayOfStrings('styles', dirMeta.styles);\n        var cmpMeta = <ComponentMetadata>dirMeta;\n        var viewMeta = this._viewResolver.resolve(directiveType);\n        assertArrayOfStrings('styles', viewMeta.styles);\n        templateMeta = new cpl.CompileTemplateMetadata({\n          encapsulation: viewMeta.encapsulation,\n          template: viewMeta.template,\n          templateUrl: viewMeta.templateUrl,\n          styles: viewMeta.styles,\n          styleUrls: viewMeta.styleUrls\n        });\n        changeDetectionStrategy = cmpMeta.changeDetection;\n        if (isPresent(dirMeta.viewProviders)) {\n          viewProviders = this.getProvidersMetadata(dirMeta.viewProviders);\n        }\n        moduleUrl = componentModuleUrl(this._reflector, directiveType, cmpMeta);\n      }\n\n      var providers = [];\n      if (isPresent(dirMeta.providers)) {\n        providers = this.getProvidersMetadata(dirMeta.providers);\n      }\n      var queries = [];\n      var viewQueries = [];\n      if (isPresent(dirMeta.queries)) {\n        queries = this.getQueriesMetadata(dirMeta.queries, false);\n        viewQueries = this.getQueriesMetadata(dirMeta.queries, true);\n      }\n      meta = cpl.CompileDirectiveMetadata.create({\n        selector: dirMeta.selector,\n        exportAs: dirMeta.exportAs,\n        isComponent: isPresent(templateMeta),\n        type: this.getTypeMetadata(directiveType, moduleUrl),\n        template: templateMeta,\n        changeDetection: changeDetectionStrategy,\n        inputs: dirMeta.inputs,\n        outputs: dirMeta.outputs,\n        host: dirMeta.host,\n        lifecycleHooks:\n            LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, directiveType)),\n        providers: providers,\n        viewProviders: viewProviders,\n        queries: queries,\n        viewQueries: viewQueries\n      });\n      this._directiveCache.set(directiveType, meta);\n    }\n    return meta;\n  }\n\n  /**\n   * @param someType a symbol which may or may not be a directive type\n   * @returns {cpl.CompileDirectiveMetadata} if possible, otherwise null.\n   */\n  maybeGetDirectiveMetadata(someType: Type): cpl.CompileDirectiveMetadata {\n    try {\n      return this.getDirectiveMetadata(someType);\n    } catch (e) {\n      if (e.message.indexOf('No Directive annotation') !== -1) {\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  getTypeMetadata(type: Type, moduleUrl: string): cpl.CompileTypeMetadata {\n    return new cpl.CompileTypeMetadata({\n      name: this.sanitizeTokenName(type),\n      moduleUrl: moduleUrl,\n      runtime: type,\n      diDeps: this.getDependenciesMetadata(type, null)\n    });\n  }\n\n  getFactoryMetadata(factory: Function, moduleUrl: string): cpl.CompileFactoryMetadata {\n    return new cpl.CompileFactoryMetadata({\n      name: this.sanitizeTokenName(factory),\n      moduleUrl: moduleUrl,\n      runtime: factory,\n      diDeps: this.getDependenciesMetadata(factory, null)\n    });\n  }\n\n  getPipeMetadata(pipeType: Type): cpl.CompilePipeMetadata {\n    var meta = this._pipeCache.get(pipeType);\n    if (isBlank(meta)) {\n      var pipeMeta = this._pipeResolver.resolve(pipeType);\n      meta = new cpl.CompilePipeMetadata({\n        type: this.getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n        name: pipeMeta.name,\n        pure: pipeMeta.pure,\n        lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, pipeType)),\n      });\n      this._pipeCache.set(pipeType, meta);\n    }\n    return meta;\n  }\n\n  getViewDirectivesMetadata(component: Type): cpl.CompileDirectiveMetadata[] {\n    var view = this._viewResolver.resolve(component);\n    var directives = flattenDirectives(view, this._platformDirectives);\n    for (var i = 0; i < directives.length; i++) {\n      if (!isValidType(directives[i])) {\n        throw new BaseException(\n            `Unexpected directive value '${stringify(directives[i])}' on the View of component '${stringify(component)}'`);\n      }\n    }\n    return directives.map(type => this.getDirectiveMetadata(type));\n  }\n\n  getViewPipesMetadata(component: Type): cpl.CompilePipeMetadata[] {\n    var view = this._viewResolver.resolve(component);\n    var pipes = flattenPipes(view, this._platformPipes);\n    for (var i = 0; i < pipes.length; i++) {\n      if (!isValidType(pipes[i])) {\n        throw new BaseException(\n            `Unexpected piped value '${stringify(pipes[i])}' on the View of component '${stringify(component)}'`);\n      }\n    }\n    return pipes.map(type => this.getPipeMetadata(type));\n  }\n\n  getDependenciesMetadata(typeOrFunc: Type | Function,\n                          dependencies: any[]): cpl.CompileDiDependencyMetadata[] {\n    let params = isPresent(dependencies) ? dependencies : this._reflector.parameters(typeOrFunc);\n    if (isBlank(params)) {\n      params = [];\n    }\n    return params.map((param) => {\n      if (isBlank(param)) {\n        return null;\n      }\n      let isAttribute = false;\n      let isHost = false;\n      let isSelf = false;\n      let isSkipSelf = false;\n      let isOptional = false;\n      let query: QueryMetadata = null;\n      let viewQuery: ViewQueryMetadata = null;\n      var token = null;\n      if (isArray(param)) {\n        (<any[]>param)\n            .forEach((paramEntry) => {\n              if (paramEntry instanceof HostMetadata) {\n                isHost = true;\n              } else if (paramEntry instanceof SelfMetadata) {\n                isSelf = true;\n              } else if (paramEntry instanceof SkipSelfMetadata) {\n                isSkipSelf = true;\n              } else if (paramEntry instanceof OptionalMetadata) {\n                isOptional = true;\n              } else if (paramEntry instanceof AttributeMetadata) {\n                isAttribute = true;\n                token = paramEntry.attributeName;\n              } else if (paramEntry instanceof QueryMetadata) {\n                if (paramEntry.isViewQuery) {\n                  viewQuery = paramEntry;\n                } else {\n                  query = paramEntry;\n                }\n              } else if (paramEntry instanceof InjectMetadata) {\n                token = paramEntry.token;\n              } else if (isValidType(paramEntry) && isBlank(token)) {\n                token = paramEntry;\n              }\n            });\n      } else {\n        token = param;\n      }\n      if (isBlank(token)) {\n        return null;\n      }\n      return new cpl.CompileDiDependencyMetadata({\n        isAttribute: isAttribute,\n        isHost: isHost,\n        isSelf: isSelf,\n        isSkipSelf: isSkipSelf,\n        isOptional: isOptional,\n        query: isPresent(query) ? this.getQueryMetadata(query, null) : null,\n        viewQuery: isPresent(viewQuery) ? this.getQueryMetadata(viewQuery, null) : null,\n        token: this.getTokenMetadata(token)\n      });\n\n    });\n  }\n\n  getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    var compileToken;\n    if (isString(token)) {\n      compileToken = new cpl.CompileTokenMetadata({value: token});\n    } else {\n      compileToken = new cpl.CompileTokenMetadata({\n        identifier: new cpl.CompileIdentifierMetadata({\n          runtime: token,\n          name: this.sanitizeTokenName(token),\n          moduleUrl: staticTypeModuleUrl(token)\n        })\n      });\n    }\n    return compileToken;\n  }\n\n  getProvidersMetadata(providers: any[]):\n      Array<cpl.CompileProviderMetadata | cpl.CompileTypeMetadata | any[]> {\n    return providers.map((provider) => {\n      provider = resolveForwardRef(provider);\n      if (isArray(provider)) {\n        return this.getProvidersMetadata(provider);\n      } else if (provider instanceof Provider) {\n        return this.getProviderMetadata(provider);\n      } else if (isProviderLiteral(provider)) {\n        return this.getProviderMetadata(createProvider(provider));\n      } else {\n        return this.getTypeMetadata(provider, staticTypeModuleUrl(provider));\n      }\n    });\n  }\n\n  getProviderMetadata(provider: Provider): cpl.CompileProviderMetadata {\n    var compileDeps;\n    if (isPresent(provider.useClass)) {\n      compileDeps = this.getDependenciesMetadata(provider.useClass, provider.dependencies);\n    } else if (isPresent(provider.useFactory)) {\n      compileDeps = this.getDependenciesMetadata(provider.useFactory, provider.dependencies);\n    }\n    return new cpl.CompileProviderMetadata({\n      token: this.getTokenMetadata(provider.token),\n      useClass:\n          isPresent(provider.useClass) ?\n              this.getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass)) :\n              null,\n      useValue: convertToCompileValue(provider.useValue),\n      useFactory: isPresent(provider.useFactory) ?\n                      this.getFactoryMetadata(provider.useFactory,\n                                              staticTypeModuleUrl(provider.useFactory)) :\n                      null,\n      useExisting: isPresent(provider.useExisting) ? this.getTokenMetadata(provider.useExisting) :\n                                                     null,\n      deps: compileDeps,\n      multi: provider.multi\n    });\n  }\n\n  getQueriesMetadata(queries: {[key: string]: QueryMetadata},\n                     isViewQuery: boolean): cpl.CompileQueryMetadata[] {\n    var compileQueries = [];\n    StringMapWrapper.forEach(queries, (query, propertyName) => {\n      if (query.isViewQuery === isViewQuery) {\n        compileQueries.push(this.getQueryMetadata(query, propertyName));\n      }\n    });\n    return compileQueries;\n  }\n\n  getQueryMetadata(q: QueryMetadata, propertyName: string): cpl.CompileQueryMetadata {\n    var selectors;\n    if (q.isVarBindingQuery) {\n      selectors = q.varBindings.map(varName => this.getTokenMetadata(varName));\n    } else {\n      selectors = [this.getTokenMetadata(q.selector)];\n    }\n    return new cpl.CompileQueryMetadata({\n      selectors: selectors,\n      first: q.first,\n      descendants: q.descendants,\n      propertyName: propertyName,\n      read: isPresent(q.read) ? this.getTokenMetadata(q.read) : null\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: ViewResolver, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_DIRECTIVES, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_PIPES, ] }, ]},\n{type: ReflectorReader, },\n];\n}\n\nfunction flattenDirectives(view: ViewMetadata, platformDirectives: any[]): Type[] {\n  let directives = [];\n  if (isPresent(platformDirectives)) {\n    flattenArray(platformDirectives, directives);\n  }\n  if (isPresent(view.directives)) {\n    flattenArray(view.directives, directives);\n  }\n  return directives;\n}\n\nfunction flattenPipes(view: ViewMetadata, platformPipes: any[]): Type[] {\n  let pipes = [];\n  if (isPresent(platformPipes)) {\n    flattenArray(platformPipes, pipes);\n  }\n  if (isPresent(view.pipes)) {\n    flattenArray(view.pipes, pipes);\n  }\n  return pipes;\n}\n\nfunction flattenArray(tree: any[], out: Array<Type | any[]>): void {\n  for (var i = 0; i < tree.length; i++) {\n    var item = resolveForwardRef(tree[i]);\n    if (isArray(item)) {\n      flattenArray(item, out);\n    } else {\n      out.push(item);\n    }\n  }\n}\n\nfunction isStaticType(value: any): boolean {\n  return isStringMap(value) && isPresent(value['name']) && isPresent(value['filePath']);\n}\n\nfunction isValidType(value: any): boolean {\n  return isStaticType(value) || (value instanceof Type);\n}\n\nfunction staticTypeModuleUrl(value: any): string {\n  return isStaticType(value) ? value['filePath'] : null;\n}\n\nfunction componentModuleUrl(reflector: ReflectorReader, type: any,\n                            cmpMetadata: ComponentMetadata): string {\n  if (isStaticType(type)) {\n    return staticTypeModuleUrl(type);\n  }\n\n  if (isPresent(cmpMetadata.moduleId)) {\n    var moduleId = cmpMetadata.moduleId;\n    var scheme = getUrlScheme(moduleId);\n    return isPresent(scheme) && scheme.length > 0 ? moduleId :\n                                                    `package:${moduleId}${MODULE_SUFFIX}`;\n  }\n\n  return reflector.importUri(type);\n}\n\n// Only fill CompileIdentifierMetadata.runtime if needed...\nfunction convertToCompileValue(value: any): any {\n  return visitValue(value, new _CompileValueConverter(), null);\n}\n\nclass _CompileValueConverter extends ValueTransformer {\n  visitOther(value: any, context: any): any {\n    if (isStaticType(value)) {\n      return new cpl.CompileIdentifierMetadata(\n          {name: value['name'], moduleUrl: staticTypeModuleUrl(value)});\n    } else {\n      return new cpl.CompileIdentifierMetadata({runtime: value});\n    }\n  }\n}\n"]}