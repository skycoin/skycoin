{"version":3,"file":"title.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/browser/title.ts"],"names":[],"mappings":";AAIE,4BAAqB,oBAAoB,CAAC,CAAA;AAC5C;;;;;;;GAOG;AACH;IAAA;IAYA,CAAC;IAXC;;;OAGG;IACH,wBAAQ,GAAR,cAAqB,MAAM,CAAC,oBAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAElD;;;OAGG;IACH,wBAAQ,GAAR,UAAS,QAAgB,IAAI,oBAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7D,YAAC;AAAD,CAAC,AAZD,IAYC;AAZY,aAAK,QAYjB,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {getDOM} from '../dom/dom_adapter';\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n */\nexport class Title {\n  /**\n   * Get the title of the current HTML document.\n   * @returns {string}\n   */\n  getTitle(): string { return getDOM().getTitle(); }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) { getDOM().setTitle(newTitle); }\n}\n"]}