{"version":3,"sources":["app/services/wallet.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAII,uBAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;gBAC/B,CAAC;gBAEO,kCAAU,GAAlB;oBACI,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;oBAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;oBACpE,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC;gBACD,oCAAY,GAAZ,UAAa,UAAU;oBACnB,IAAI,aAAa,GAAG,QAAQ,GAAC,UAAU,CAAC,OAAO,GAAC,MAAM,GAAC,UAAU,CAAC,QAAQ,CAAC;oBAC3E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,aAAa,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;yBAChF,GAAG,CAAC,UAAC,GAAY,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACjC,KAAK,CAAC,UAAC,KAAS,IAAK,OAAA,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;gBACtF,CAAC;gBAED,uCAAe,GAAf;oBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC;yBAC3C,GAAG,CAAC,UAAC,GAAY,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACjC,KAAK,CAAC,UAAC,KAAS,IAAK,OAAA,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;gBAClF,CAAC;gBAxBL;oBAAC,iBAAU,EAAE;;iCAAA;gBAyBb,oBAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBD,yCAwBC,CAAA","file":"wallet.service.js","sourcesContent":["/**\r\n * Created by nakul.pandey@gmail.com on 01/01/17.\r\n */\r\nimport {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport {Wallet} from '../model/wallet.pojo';\r\ndeclare var toastr: any;\r\n\r\n@Injectable()\r\nexport class WalletService {\r\n\r\n    wallets:Wallet[];\r\n\r\n    constructor(private _http: Http) {\r\n    }\r\n\r\n    private getHeaders() {\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        return headers;\r\n    }\r\n    updateWallet(walletData): Observable<any> {\r\n        var stringConvert = 'label='+walletData.newText+'&id='+walletData.walletId;\r\n        return this._http.post('/wallet/update', stringConvert, {headers: this.getHeaders()})\r\n            .map((res:Response) => res.json())\r\n            .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n\r\n    getWalletFolder(): Observable<any> {\r\n        return this._http.get('/wallets/folderName')\r\n        .map((res:Response) => res.json())\r\n        .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/src"}