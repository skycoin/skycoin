{"version":3,"file":"event_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/event_binder.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isBlank, isPresent, StringWrapper} from '../../src/facade/lang';\nimport {ListWrapper, StringMapWrapper} from '../../src/facade/collection';\n\nimport {EventHandlerVars, ViewProperties} from './constants';\n\nimport * as o from '../output/output_ast';\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\n\nimport {BoundEventAst, DirectiveAst} from '../template_ast';\nimport {CompileDirectiveMetadata} from '../compile_metadata';\n\nimport {convertCdStatementToIr} from './expression_converter';\nimport {CompileBinding} from './compile_binding';\n\nexport class CompileEventListener {\n  private _method: CompileMethod;\n  private _hasComponentHostListener: boolean = false;\n  private _methodName: string;\n  private _eventParam: o.FnParam;\n  private _actionResultExprs: o.Expression[] = [];\n\n  static getOrCreate(compileElement: CompileElement, eventTarget: string, eventName: string,\n                     targetEventListeners: CompileEventListener[]): CompileEventListener {\n    var listener = targetEventListeners.find(listener => listener.eventTarget == eventTarget &&\n                                                         listener.eventName == eventName);\n    if (isBlank(listener)) {\n      listener = new CompileEventListener(compileElement, eventTarget, eventName,\n                                          targetEventListeners.length);\n      targetEventListeners.push(listener);\n    }\n    return listener;\n  }\n\n  constructor(public compileElement: CompileElement, public eventTarget: string,\n              public eventName: string, listenerIndex: number) {\n    this._method = new CompileMethod(compileElement.view);\n    this._methodName =\n        `_handle_${santitizeEventName(eventName)}_${compileElement.nodeIndex}_${listenerIndex}`;\n    this._eventParam =\n        new o.FnParam(EventHandlerVars.event.name,\n                      o.importType(this.compileElement.view.genConfig.renderTypes.renderEvent));\n  }\n\n  addAction(hostEvent: BoundEventAst, directive: CompileDirectiveMetadata,\n            directiveInstance: o.Expression) {\n    if (isPresent(directive) && directive.isComponent) {\n      this._hasComponentHostListener = true;\n    }\n    this._method.resetDebugInfo(this.compileElement.nodeIndex, hostEvent);\n    var context = isPresent(directiveInstance) ? directiveInstance :\n                                                 this.compileElement.view.componentContext;\n    var actionStmts = convertCdStatementToIr(this.compileElement.view, context, hostEvent.handler);\n    var lastIndex = actionStmts.length - 1;\n    if (lastIndex >= 0) {\n      var lastStatement = actionStmts[lastIndex];\n      var returnExpr = convertStmtIntoExpression(lastStatement);\n      var preventDefaultVar = o.variable(`pd_${this._actionResultExprs.length}`);\n      this._actionResultExprs.push(preventDefaultVar);\n      if (isPresent(returnExpr)) {\n        // Note: We need to cast the result of the method call to dynamic,\n        // as it might be a void method!\n        actionStmts[lastIndex] =\n            preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                .toDeclStmt(null, [o.StmtModifier.Final]);\n      }\n    }\n    this._method.addStmts(actionStmts);\n  }\n\n  finishMethod() {\n    var markPathToRootStart = this._hasComponentHostListener ?\n                                  this.compileElement.appElement.prop('componentView') :\n                                  o.THIS_EXPR;\n    var resultExpr: o.Expression = o.literal(true);\n    this._actionResultExprs.forEach((expr) => { resultExpr = resultExpr.and(expr); });\n    var stmts =\n        (<o.Statement[]>[markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt()])\n            .concat(this._method.finish())\n            .concat([new o.ReturnStatement(resultExpr)]);\n    // private is fine here as no child view will reference the event handler...\n    this.compileElement.view.eventHandlerMethods.push(new o.ClassMethod(\n        this._methodName, [this._eventParam], stmts, o.BOOL_TYPE, [o.StmtModifier.Private]));\n  }\n\n  listenToRenderer() {\n    var listenExpr;\n    var eventListener = o.THIS_EXPR.callMethod(\n        'eventHandler',\n        [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.bind, [o.THIS_EXPR])]);\n    if (isPresent(this.eventTarget)) {\n      listenExpr = ViewProperties.renderer.callMethod(\n          'listenGlobal', [o.literal(this.eventTarget), o.literal(this.eventName), eventListener]);\n    } else {\n      listenExpr = ViewProperties.renderer.callMethod(\n          'listen', [this.compileElement.renderNode, o.literal(this.eventName), eventListener]);\n    }\n    var disposable = o.variable(`disposable_${this.compileElement.view.disposables.length}`);\n    this.compileElement.view.disposables.push(disposable);\n    // private is fine here as no child view will reference the event handler...\n    this.compileElement.view.createMethod.addStmt(\n        disposable.set(listenExpr).toDeclStmt(o.FUNCTION_TYPE, [o.StmtModifier.Private]));\n  }\n\n  listenToDirective(directiveInstance: o.Expression, observablePropName: string) {\n    var subscription = o.variable(`subscription_${this.compileElement.view.subscriptions.length}`);\n    this.compileElement.view.subscriptions.push(subscription);\n    var eventListener = o.THIS_EXPR.callMethod(\n        'eventHandler',\n        [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.bind, [o.THIS_EXPR])]);\n    this.compileElement.view.createMethod.addStmt(\n        subscription.set(directiveInstance.prop(observablePropName)\n                             .callMethod(o.BuiltinMethod.SubscribeObservable, [eventListener]))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n}\n\nexport function collectEventListeners(hostEvents: BoundEventAst[], dirs: DirectiveAst[],\n                                      compileElement: CompileElement): CompileEventListener[] {\n  var eventListeners: CompileEventListener[] = [];\n  hostEvents.forEach((hostEvent) => {\n    compileElement.view.bindings.push(new CompileBinding(compileElement, hostEvent));\n    var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target,\n                                                    hostEvent.name, eventListeners);\n    listener.addAction(hostEvent, null, null);\n  });\n  ListWrapper.forEachWithIndex(dirs, (directiveAst, i) => {\n    var directiveInstance = compileElement.directiveInstances[i];\n    directiveAst.hostEvents.forEach((hostEvent) => {\n      compileElement.view.bindings.push(new CompileBinding(compileElement, hostEvent));\n      var listener = CompileEventListener.getOrCreate(compileElement, hostEvent.target,\n                                                      hostEvent.name, eventListeners);\n      listener.addAction(hostEvent, directiveAst.directive, directiveInstance);\n    });\n  });\n  eventListeners.forEach((listener) => listener.finishMethod());\n  return eventListeners;\n}\n\nexport function bindDirectiveOutputs(directiveAst: DirectiveAst, directiveInstance: o.Expression,\n                                     eventListeners: CompileEventListener[]) {\n  StringMapWrapper.forEach(directiveAst.directive.outputs, (eventName, observablePropName) => {\n    eventListeners.filter(listener => listener.eventName == eventName)\n        .forEach(\n            (listener) => { listener.listenToDirective(directiveInstance, observablePropName); });\n  });\n}\n\nexport function bindRenderOutputs(eventListeners: CompileEventListener[]) {\n  eventListeners.forEach(listener => listener.listenToRenderer());\n}\n\nfunction convertStmtIntoExpression(stmt: o.Statement): o.Expression {\n  if (stmt instanceof o.ExpressionStatement) {\n    return stmt.expr;\n  } else if (stmt instanceof o.ReturnStatement) {\n    return stmt.value;\n  }\n  return null;\n}\n\nfunction santitizeEventName(name: string): string {\n  return StringWrapper.replaceAll(name, /[^a-zA-Z_]/g, '_');\n}\n"]}