{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/util.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isPresent, isBlank} from '../../src/facade/lang';\nimport {BaseException} from '../../src/facade/exceptions';\n\nimport * as o from '../output/output_ast';\nimport {\n  CompileTokenMetadata,\n  CompileDirectiveMetadata,\n} from '../compile_metadata';\nimport {CompileView} from './compile_view';\nimport {Identifiers} from '../identifiers';\n\nexport function getPropertyInView(property: o.Expression, callingView: CompileView,\n                                  definedView: CompileView): o.Expression {\n  if (callingView === definedView) {\n    return property;\n  } else {\n    var viewProp: o.Expression = o.THIS_EXPR;\n    var currView: CompileView = callingView;\n    while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      viewProp = viewProp.prop('parent');\n    }\n    if (currView !== definedView) {\n      throw new BaseException(\n          `Internal error: Could not calculate a property in a parent view: ${property}`);\n    }\n    if (property instanceof o.ReadPropExpr) {\n      let readPropExpr: o.ReadPropExpr = property;\n      // Note: Don't cast for members of the AppView base class...\n      if (definedView.fields.some((field) => field.name == readPropExpr.name) ||\n          definedView.getters.some((field) => field.name == readPropExpr.name)) {\n        viewProp = viewProp.cast(definedView.classType);\n      }\n    }\n    return o.replaceVarInExpression(o.THIS_EXPR.name, viewProp, property);\n  }\n}\n\nexport function injectFromViewParentInjector(token: CompileTokenMetadata,\n                                             optional: boolean): o.Expression {\n  var args = [createDiTokenExpression(token)];\n  if (optional) {\n    args.push(o.NULL_EXPR);\n  }\n  return o.THIS_EXPR.prop('parentInjector').callMethod('get', args);\n}\n\nexport function getViewFactoryName(component: CompileDirectiveMetadata,\n                                   embeddedTemplateIndex: number): string {\n  return `viewFactory_${component.type.name}${embeddedTemplateIndex}`;\n}\n\n\nexport function createDiTokenExpression(token: CompileTokenMetadata): o.Expression {\n  if (isPresent(token.value)) {\n    return o.literal(token.value);\n  } else if (token.identifierIsInstance) {\n    return o.importExpr(token.identifier)\n        .instantiate([], o.importType(token.identifier, [], [o.TypeModifier.Const]));\n  } else {\n    return o.importExpr(token.identifier);\n  }\n}\n\nexport function createFlatArray(expressions: o.Expression[]): o.Expression {\n  var lastNonArrayExpressions = [];\n  var result: o.Expression = o.literalArr([]);\n  for (var i = 0; i < expressions.length; i++) {\n    var expr = expressions[i];\n    if (expr.type instanceof o.ArrayType) {\n      if (lastNonArrayExpressions.length > 0) {\n        result =\n            result.callMethod(o.BuiltinMethod.ConcatArray, [o.literalArr(lastNonArrayExpressions)]);\n        lastNonArrayExpressions = [];\n      }\n      result = result.callMethod(o.BuiltinMethod.ConcatArray, [expr]);\n    } else {\n      lastNonArrayExpressions.push(expr);\n    }\n  }\n  if (lastNonArrayExpressions.length > 0) {\n    result =\n        result.callMethod(o.BuiltinMethod.ConcatArray, [o.literalArr(lastNonArrayExpressions)]);\n  }\n  return result;\n}\n\nexport function createPureProxy(fn: o.Expression, argCount: number, pureProxyProp: o.ReadPropExpr,\n                                view: CompileView) {\n  view.fields.push(new o.ClassField(pureProxyProp.name, null));\n  var pureProxyId =\n      argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n  if (isBlank(pureProxyId)) {\n    throw new BaseException(`Unsupported number of argument for pure functions: ${argCount}`);\n  }\n  view.createMethod.addStmt(\n      o.THIS_EXPR.prop(pureProxyProp.name).set(o.importExpr(pureProxyId).callFn([fn])).toStmt());\n}\n"]}