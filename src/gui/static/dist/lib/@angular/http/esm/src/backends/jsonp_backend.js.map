{"version":3,"file":"jsonp_backend.js","sourceRoot":"","sources":["../../../../../../modules/@angular/http/src/backends/jsonp_backend.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {ConnectionBackend, Connection} from '../interfaces';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\nimport {ResponseOptions, BaseResponseOptions} from '../base_response_options';\nimport {Injectable} from '@angular/core';\nimport {BrowserJsonp} from './browser_jsonp';\nimport {makeTypeError} from '../../src/facade/exceptions';\nimport {StringWrapper, isPresent} from '../../src/facade/lang';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n\n/**\n * Abstract base class for an in-flight JSONP request.\n */\nexport abstract class JSONPConnection implements Connection {\n  /**\n   * The {@link ReadyState} of this request.\n   */\n  readyState: ReadyState;\n\n  /**\n   * The outgoing HTTP request.\n   */\n  request: Request;\n\n  /**\n   * An observable that completes with the response, when the request is finished.\n   */\n  response: Observable<Response>;\n\n  /**\n   * Callback called when the JSONP request completes, to notify the application\n   * of the new data.\n   */\n  abstract finished(data?: any): void;\n}\n\nexport class JSONPConnection_ extends JSONPConnection {\n  private _id: string;\n  private _script: Element;\n  private _responseData: any;\n  private _finished: boolean = false;\n\n  constructor(req: Request, private _dom: BrowserJsonp,\n              private baseResponseOptions?: ResponseOptions) {\n    super();\n    if (req.method !== RequestMethod.Get) {\n      throw makeTypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      let id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      let callback = _dom.requestCallback(this._id);\n      let url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = StringWrapper.replace(url, '=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      let script = this._script = _dom.build(url);\n\n      let onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (isPresent(baseResponseOptions)) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (isPresent(this.baseResponseOptions)) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      let onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (isPresent(baseResponseOptions)) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        if (isPresent(script)) {\n          this._dom.cleanup(script);\n        }\n\n      };\n    });\n  }\n\n  finished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n */\nexport abstract class JSONPBackend extends ConnectionBackend {}\nexport class JSONPBackend_ extends JSONPBackend {\n  constructor(private _browserJSONP: BrowserJsonp, private _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n\n  createConnection(request: Request): JSONPConnection {\n    return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: BrowserJsonp, },\n{type: ResponseOptions, },\n];\n}\n"]}