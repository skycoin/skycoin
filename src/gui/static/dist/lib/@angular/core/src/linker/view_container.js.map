{"version":3,"file":"view_container.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/view_container.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {isPresent} from '../facade/lang';\n\nimport {ElementRef} from './element_ref';\nimport {QueryList} from './query_list';\nimport {AppView} from './view';\nimport {ViewContainerRef_} from './view_container_ref';\nimport {ViewType} from './view_type';\n\n\n/**\n * A ViewContainer is created for elements that have a ViewContainerRef\n * to keep track of the nested views.\n */\nexport class ViewContainer {\n  public nestedViews: AppView<any>[];\n  // views that have been declared at the place of this view container,\n  // but inserted into another view container\n  public projectedViews: AppView<any>[];\n\n  constructor(\n      public index: number, public parentIndex: number, public parentView: AppView<any>,\n      public nativeElement: any) {}\n\n  get elementRef(): ElementRef { return new ElementRef(this.nativeElement); }\n\n  get vcRef(): ViewContainerRef_ { return new ViewContainerRef_(this); }\n\n  get parentInjector(): Injector { return this.parentView.injector(this.parentIndex); }\n  get injector(): Injector { return this.parentView.injector(this.index); }\n\n  detectChangesInNestedViews(throwOnChange: boolean): void {\n    if (this.nestedViews) {\n      for (let i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].detectChanges(throwOnChange);\n      }\n    }\n  }\n\n  destroyNestedViews(): void {\n    if (this.nestedViews) {\n      for (let i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].destroy();\n      }\n    }\n  }\n\n  visitNestedViewRootNodes<C>(cb: (node: any, ctx: C) => void, c: C): void {\n    if (this.nestedViews) {\n      for (let i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].visitRootNodesInternal(cb, c);\n      }\n    }\n  }\n\n  mapNestedViews(nestedViewClass: any, callback: Function): any[] {\n    const result: any[] = [];\n    if (this.nestedViews) {\n      for (let i = 0; i < this.nestedViews.length; i++) {\n        const nestedView = this.nestedViews[i];\n        if (nestedView.clazz === nestedViewClass) {\n          result.push(callback(nestedView));\n        }\n      }\n    }\n    if (this.projectedViews) {\n      for (let i = 0; i < this.projectedViews.length; i++) {\n        const projectedView = this.projectedViews[i];\n        if (projectedView.clazz === nestedViewClass) {\n          result.push(callback(projectedView));\n        }\n      }\n    }\n    return result;\n  }\n\n  moveView(view: AppView<any>, currentIndex: number) {\n    const previousIndex = this.nestedViews.indexOf(view);\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    let nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    nestedViews.splice(previousIndex, 1);\n    nestedViews.splice(currentIndex, 0, view);\n    const prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n    view.moveAfter(this, prevView);\n  }\n\n  attachView(view: AppView<any>, viewIndex: number) {\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    let nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    // perf: array.push is faster than array.splice!\n    if (viewIndex >= nestedViews.length) {\n      nestedViews.push(view);\n    } else {\n      nestedViews.splice(viewIndex, 0, view);\n    }\n    const prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n    view.attachAfter(this, prevView);\n  }\n\n  detachView(viewIndex: number): AppView<any> {\n    const view = this.nestedViews[viewIndex];\n    // perf: array.pop is faster than array.splice!\n    if (viewIndex >= this.nestedViews.length - 1) {\n      this.nestedViews.pop();\n    } else {\n      this.nestedViews.splice(viewIndex, 1);\n    }\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    view.detach();\n    return view;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}