{"version":3,"file":"di.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/di.ts"],"names":[],"mappings":";;;;AAIE;;;;EAIC;AAEH,yBAQO,eAAe,CAAC;AAPrB,mDAAc;AACd,uDAAgB;AAChB,2DAAkB;AAClB,+CAAY;AACZ,+CAAY;AACZ,uDAAgB;AAChB,2DACqB;AAEvB,+EAA+E;AAC/E,iBAAc,iBAAiB,CAAC,EAAA;AAEhC,4BAA0D,kBAAkB,CAAC;AAArE,8CAAU;AAAE,4DAAyD;AAE7E,yBAAuB,eAAe,CAAC;AAA/B,uCAA+B;AACvC,oCAAiC,0BAA0B,CAAC;AAApD,sEAAoD;AAC5D,yBAOO,eAAe,CAAC;AANrB,qCAAO;AACP,qDAAe;AACf,+BAAI;AAEJ,uCAAQ;AACR,qCACqB;AACvB,oCAMO,0BAA0B,CAAC;AAJhC,oFAAyB;AACzB,0EAGgC;AAClC,+BAA4B,qBAAqB,CAAC;AAA1C,uDAA0C;AAClD,sCAQO,4BAA4B,CAAC;AAPlC,kEAAe;AACf,8EAAqB;AACrB,8EAAqB;AACrB,wEAAkB;AAClB,4EAAoB;AACpB,sEAAiB;AACjB,oEACkC;AACpC,6BAA0B,mBAAmB,CAAC;AAAtC,iDAAsC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  /**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {\n  InjectMetadata,\n  OptionalMetadata,\n  InjectableMetadata,\n  SelfMetadata,\n  HostMetadata,\n  SkipSelfMetadata,\n  DependencyMetadata\n} from './di/metadata';\n\n// we have to reexport * because Dart and TS export two different sets of types\nexport * from './di/decorators';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {\n  Binding,\n  ProviderBuilder,\n  bind,\n\n  Provider,\n  provide\n} from './di/provider';\nexport {\n  ResolvedReflectiveBinding,\n  ResolvedReflectiveFactory,\n  ReflectiveDependency,\n\n  ResolvedReflectiveProvider\n} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {\n  NoProviderError,\n  AbstractProviderError,\n  CyclicDependencyError,\n  InstantiationError,\n  InvalidProviderError,\n  NoAnnotationError,\n  OutOfBoundsError\n} from './di/reflective_exceptions';\nexport {OpaqueToken} from './di/opaque_token';\n"]}