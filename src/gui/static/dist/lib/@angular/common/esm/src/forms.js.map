{"version":3,"file":"forms.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/forms.ts"],"names":[],"mappings":"AAIE;;;;;;;;;;;EAWC;AACH,SAAQ,eAAe,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,QAAO,eAAe,CAAC;AAEnF,SAAQ,wBAAwB,QAAO,+CAA+C,CAAC;AAEvF,SAAQ,gBAAgB,QAAO,sCAAsC,CAAC;AACtE,SAAQ,aAAa,QAAO,oCAAoC,CAAC;AACjE,SAAQ,aAAa,QAAO,oCAAoC,CAAC;AACjE,SAAQ,OAAO,QAAO,6BAA6B,CAAC;AACpD,SAAQ,SAAS,QAAO,+BAA+B,CAAC;AACxD,SAAQ,cAAc,QAAO,qCAAqC,CAAC;AACnE,SAAQ,WAAW,QAAO,kCAAkC,CAAC;AAC7D,SAAQ,MAAM,QAAO,4BAA4B,CAAC;AAClD,SAA8B,iBAAiB,QAAO,2CAA2C,CAAC;AAClG,SAAQ,oBAAoB,QAAO,2CAA2C,CAAC;AAC/E,SAAQ,eAAe,QAAO,sCAAsC,CAAC;AACrE,SAAQ,4BAA4B,QAAO,4CAA4C,CAAC;AACxF,SACE,cAAc,EACd,0BAA0B,QACrB,kDAAkD,CAAC;AAC1D,SAAQ,eAAe,EAAE,gBAAgB,QAAO,oBAAoB,CAAC;AACrE,SAAQ,aAAa,EAAE,mBAAmB,EAAE,UAAU,QAAO,oBAAoB,CAAC;AAClF,SACE,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,gBAAgB,QAEX,+BAA+B,CAAC;AACvC,SAAQ,WAAW,QAAO,sBAAsB,CAAC;OAC1C,EAAC,WAAW,EAAC,MAAM,sBAAsB;OACzC,EAAC,oBAAoB,EAAC,MAAM,iDAAiD;AAGpF;;;;;;;;GAQG;AACH,OAAO,MAAM,cAAc,GAA6B,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;AAE5F;;;;GAIG;AACH,OAAO,MAAM,aAAa,GAAsB,cAAc,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  /**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link ControlGroup} that\n * consists of\n * {@link Control} objects, and mapping them onto the DOM. {@link Control} objects can then be used\n * to read information\n * from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\nexport {AbstractControl, Control, ControlGroup, ControlArray} from './forms/model';\n\nexport {AbstractControlDirective} from './forms/directives/abstract_control_directive';\nexport {Form} from './forms/directives/form_interface';\nexport {ControlContainer} from './forms/directives/control_container';\nexport {NgControlName} from './forms/directives/ng_control_name';\nexport {NgFormControl} from './forms/directives/ng_form_control';\nexport {NgModel} from './forms/directives/ng_model';\nexport {NgControl} from './forms/directives/ng_control';\nexport {NgControlGroup} from './forms/directives/ng_control_group';\nexport {NgFormModel} from './forms/directives/ng_form_model';\nexport {NgForm} from './forms/directives/ng_form';\nexport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './forms/directives/control_value_accessor';\nexport {DefaultValueAccessor} from './forms/directives/default_value_accessor';\nexport {NgControlStatus} from './forms/directives/ng_control_status';\nexport {CheckboxControlValueAccessor} from './forms/directives/checkbox_value_accessor';\nexport {\n  NgSelectOption,\n  SelectControlValueAccessor\n} from './forms/directives/select_control_value_accessor';\nexport {FORM_DIRECTIVES, RadioButtonState} from './forms/directives';\nexport {NG_VALIDATORS, NG_ASYNC_VALIDATORS, Validators} from './forms/validators';\nexport {\n  RequiredValidator,\n  MinLengthValidator,\n  MaxLengthValidator,\n  PatternValidator,\n  Validator\n} from './forms/directives/validators';\nexport {FormBuilder} from './forms/form_builder';\nimport {FormBuilder} from './forms/form_builder';\nimport {RadioControlRegistry} from './forms/directives/radio_control_value_accessor';\nimport {Type} from '@angular/core';\n\n/**\n * Shorthand set of providers used for building Angular forms.\n *\n * ### Example\n *\n * ```typescript\n * bootstrap(MyApp, [FORM_PROVIDERS]);\n * ```\n */\nexport const FORM_PROVIDERS: Type[] = /*@ts2dart_const*/[FormBuilder, RadioControlRegistry];\n\n/**\n * See {@link FORM_PROVIDERS} instead.\n *\n * @deprecated\n */\nexport const FORM_BINDINGS = /*@ts2dart_const*/ FORM_PROVIDERS;\n"]}