{"version":3,"file":"platform_browser.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/platform_browser.ts"],"names":[],"mappings":"OAIS,EACP,kBAAkB,EAElB,WAAW,EACX,cAAc,EACd,cAAc,EACf,MAAM,eAAe;OACf,EAAC,OAAO,EAAC,MAAM,eAAe;OAC9B,EAAC,iBAAiB,EAAE,uBAAuB,EAAC,MAAM,kBAAkB;AAC3E,SAAQ,eAAe,QAAO,yBAAyB,CAAC;AAExD,SAAQ,YAAY,EAAE,qBAAqB,QAAO,4BAA4B,CAAC;AAC/E,SAAQ,uBAAuB,QAAO,sBAAsB,CAAC;AAC7D,SACE,4BAA4B,EAC5B,8BAA8B,EAC9B,iBAAiB,EACjB,EAAE,EACF,KAAK,EACL,gBAAgB,EAChB,iBAAiB,EACjB,qBAAqB,EACrB,mBAAmB,QACd,kBAAkB,CAAC;AAE1B,cAAc,mBAAmB,CAAC;AAClC,SAAQ,QAAQ,QAAO,kBAAkB,CAAC;AAE1C,SAAQ,sBAAsB,EAAE,eAAe,QAAO,qCAAqC,CAAC;AAE5F,SACE,eAAe,EACf,qBAAqB,EACrB,4BAA4B,EAC5B,uBAAuB,QAClB,2BAA2B,CAAC;AAInC;IACE,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;AACjD,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ReflectiveInjector,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform\n} from '@angular/core';\nimport {isBlank} from './facade/lang';\nimport {BROWSER_PROVIDERS, BROWSER_PLATFORM_MARKER} from './browser_common';\nexport {DomEventsPlugin} from './dom/events/dom_events';\n\nexport {EventManager, EVENT_MANAGER_PLUGINS} from './dom/events/event_manager';\nexport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {\n  BROWSER_APP_COMMON_PROVIDERS,\n  BROWSER_SANITIZATION_PROVIDERS,\n  BROWSER_PROVIDERS,\n  By,\n  Title,\n  enableDebugTools,\n  disableDebugTools,\n  HAMMER_GESTURE_CONFIG,\n  HammerGestureConfig\n} from './browser_common';\n\nexport * from '../private_export';\nexport {DOCUMENT} from './dom/dom_tokens';\n\nexport {DomSanitizationService, SecurityContext} from './security/dom_sanitization_service';\n\nexport {\n  bootstrapStatic,\n  browserStaticPlatform,\n  BROWSER_APP_STATIC_PROVIDERS,\n  BrowserPlatformLocation\n} from './platform_browser_static';\n\n\n\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n"]}