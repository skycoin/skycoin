{"version":3,"file":"output_jit.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/output/output_jit.ts"],"names":[],"mappings":"OAIS,EACP,SAAS,EACT,cAAc,EACf,MAAM,uBAAuB;OAEvB,EAAC,qBAAqB,EAAC,MAAM,oBAAoB;OACjD,EAAC,wBAAwB,EAAC,MAAM,uBAAuB;OACvD,EAAC,kBAAkB,EAAC,MAAM,SAAS;AAE1C,8BAA8B,SAAiB,EAAE,UAAyB,EAC5C,SAAiB;IAC7C,IAAI,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC;IACxC,IAAI,GAAG,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,SAAS,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC9C,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACnF,CAAC;AAED,gCAAgC,wBAAwB;IAAxD;QAAgC,eAAwB;QAC9C,kBAAa,GAAa,EAAE,CAAC;QAC7B,mBAAc,GAAU,EAAE,CAAC;IAsBrC,CAAC;IApBC,OAAO;QACL,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,iBAAiB,CAAC,GAAmB,EAAE,GAA0B;QAC/D,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9B,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAClF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAClE,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  isPresent,\n  evalExpression,\n} from '../../src/facade/lang';\nimport * as o from './output_ast';\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport {sanitizeIdentifier} from '../util';\n\nexport function jitStatements(sourceUrl: string, statements: o.Statement[],\n                              resultVar: string): any {\n  var converter = new JitEmitterVisitor();\n  var ctx = EmitterVisitorContext.createRoot([resultVar]);\n  converter.visitAllStatements(statements, ctx);\n  return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n}\n\nclass JitEmitterVisitor extends AbstractJsEmitterVisitor {\n  private _evalArgNames: string[] = [];\n  private _evalArgValues: any[] = [];\n\n  getArgs(): {[key: string]: any} {\n    var result = {};\n    for (var i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    var value = ast.value.runtime;\n    var id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      var name = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n      this._evalArgNames.push(sanitizeIdentifier(`jit_${name}${id}`));\n    }\n    ctx.print(this._evalArgNames[id]);\n    return null;\n  }\n}\n"]}