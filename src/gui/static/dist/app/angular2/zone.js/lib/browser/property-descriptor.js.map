{"version":3,"sources":["app/angular2/zone.js/lib/browser/property-descriptor.ts"],"names":[],"mappings":"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","file":"property-descriptor.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isBrowser, isNode, patchClass, patchOnProperties, zoneSymbol} from '../common/utils';\n\nimport * as webSocketPatch from './websocket';\n\nconst eventNames =\n    'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'\n        .split(' ');\n\nexport function propertyDescriptorPatch(_global) {\n  if (isNode) {\n    return;\n  }\n\n  const supportsWebSocket = typeof WebSocket !== 'undefined';\n  if (canPatchViaPropertyDescriptor()) {\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n      patchOnProperties(HTMLElement.prototype, eventNames);\n    }\n    patchOnProperties(XMLHttpRequest.prototype, null);\n    if (typeof IDBIndex !== 'undefined') {\n      patchOnProperties(IDBIndex.prototype, null);\n      patchOnProperties(IDBRequest.prototype, null);\n      patchOnProperties(IDBOpenDBRequest.prototype, null);\n      patchOnProperties(IDBDatabase.prototype, null);\n      patchOnProperties(IDBTransaction.prototype, null);\n      patchOnProperties(IDBCursor.prototype, null);\n    }\n    if (supportsWebSocket) {\n      patchOnProperties(WebSocket.prototype, null);\n    }\n  } else {\n    // Safari, Android browsers (Jelly Bean)\n    patchViaCapturingAllTheEvents();\n    patchClass('XMLHttpRequest');\n    if (supportsWebSocket) {\n      webSocketPatch.apply(_global);\n    }\n  }\n}\n\nfunction canPatchViaPropertyDescriptor() {\n  if (isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n      typeof Element !== 'undefined') {\n    // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n    // IDL interface attributes are not configurable\n    const desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');\n    if (desc && !desc.configurable) return false;\n  }\n\n  Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {\n    get: function() {\n      return true;\n    }\n  });\n  const req = new XMLHttpRequest();\n  const result = !!req.onreadystatechange;\n  Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {});\n  return result;\n};\n\nconst unboundKey = zoneSymbol('unbound');\n\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n  for (let i = 0; i < eventNames.length; i++) {\n    const property = eventNames[i];\n    const onproperty = 'on' + property;\n    self.addEventListener(property, function(event) {\n      let elt = <Node>event.target, bound, source;\n      if (elt) {\n        source = elt.constructor['name'] + '.' + onproperty;\n      } else {\n        source = 'unknown.' + onproperty;\n      }\n      while (elt) {\n        if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n          bound = Zone.current.wrap(elt[onproperty], source);\n          bound[unboundKey] = elt[onproperty];\n          elt[onproperty] = bound;\n        }\n        elt = elt.parentElement;\n      }\n    }, true);\n  };\n};\n"]}