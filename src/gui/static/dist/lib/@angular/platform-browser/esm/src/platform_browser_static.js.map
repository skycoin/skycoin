{"version":3,"file":"platform_browser_static.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/platform_browser_static.ts"],"names":[],"mappings":"OAIS,EAEP,oBAAoB,EACpB,kBAAkB,EAElB,WAAW,EACX,cAAc,EACd,cAAc,EACf,MAAM,eAAe;OAEf,EAAO,SAAS,EAAE,OAAO,EAAC,MAAM,eAAe;OAC/C,EACL,4BAA4B,EAC5B,iBAAiB,EACjB,uBAAuB,EACxB,MAAM,kBAAkB;AACzB,SAAQ,uBAAuB,QAAO,sBAAsB,CAAC;AAC7D,SAAQ,uBAAuB,QAAO,8CAA8C,CAAC;AACrF,SACE,iBAAiB,EACjB,EAAE,EACF,KAAK,EACL,gBAAgB,EAChB,iBAAiB,QACZ,kBAAkB,CAAC;AAE1B;;;;GAIG;AACH,OAAO,MAAM,4BAA4B;AACrC,kBAAkB,CAAC,4BAA4B,CAAC;AAEpD;IACE,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;AACjD,CAAC;AAED;;GAEG;AACH,gCAAgC,gBAAsB,EACtB,eAAwD,EACxD,aAAwB;IACtD,EAAE,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7B,aAAa,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,YAAY,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,eAAe,CAAC;QAC/C,4BAA4B,CAAC;IAC7E,IAAI,WAAW,GACX,kBAAkB,CAAC,gBAAgB,CAAC,YAAY,EAAE,qBAAqB,EAAE,CAAC,QAAQ,CAAC,CAAC;IACxF,MAAM,CAAC,oBAAoB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ComponentRef,\n  coreLoadAndBootstrap,\n  ReflectiveInjector,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform\n} from '@angular/core';\n\nimport {Type, isPresent, isBlank} from './facade/lang';\nimport {\n  BROWSER_APP_COMMON_PROVIDERS,\n  BROWSER_PROVIDERS,\n  BROWSER_PLATFORM_MARKER\n} from './browser_common';\nexport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nexport {\n  BROWSER_PROVIDERS,\n  By,\n  Title,\n  enableDebugTools,\n  disableDebugTools,\n} from './browser_common';\n\n/**\n * An array of providers that should be passed into `application()` when bootstrapping a component\n * when all templates\n * have been precompiled offline.\n */\nexport const BROWSER_APP_STATIC_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/ BROWSER_APP_COMMON_PROVIDERS;\n\nexport function browserStaticPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\n/**\n * See {@link bootstrap} for more information.\n */\nexport function bootstrapStatic(appComponentType: Type,\n                                customProviders?: Array<any /*Type | Provider | any[]*/>,\n                                initReflector?: Function): Promise<ComponentRef<any>> {\n  if (isPresent(initReflector)) {\n    initReflector();\n  }\n\n  let appProviders = isPresent(customProviders) ? [BROWSER_APP_STATIC_PROVIDERS, customProviders] :\n                                                  BROWSER_APP_STATIC_PROVIDERS;\n  var appInjector =\n      ReflectiveInjector.resolveAndCreate(appProviders, browserStaticPlatform().injector);\n  return coreLoadAndBootstrap(appInjector, appComponentType);\n}\n"]}