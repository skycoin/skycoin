{"version":3,"file":"animation_style_util.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/animation/animation_style_util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StringMapWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\n\nimport {FILL_STYLE_FLAG} from './animation_constants';\nimport {AUTO_STYLE} from './metadata';\n\nexport function prepareFinalAnimationStyles(\n    previousStyles: {[key: string]: string | number}, newStyles: {[key: string]: string | number},\n    nullValue: string = null): {[key: string]: string} {\n  const finalStyles: {[key: string]: string} = {};\n\n  Object.keys(newStyles).forEach(prop => {\n    const value = newStyles[prop];\n    finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n  });\n\n  Object.keys(previousStyles).forEach(prop => {\n    if (!isPresent(finalStyles[prop])) {\n      finalStyles[prop] = nullValue;\n    }\n  });\n\n  return finalStyles;\n}\n\nexport function balanceAnimationKeyframes(\n    collectedStyles: {[key: string]: string | number},\n    finalStateStyles: {[key: string]: string | number}, keyframes: any[]): any[] {\n  const limit = keyframes.length - 1;\n  const firstKeyframe = keyframes[0];\n\n  // phase 1: copy all the styles from the first keyframe into the lookup map\n  const flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\n  const extraFirstKeyframeStyles: {[key: string]: string} = {};\n  let hasExtraFirstStyles = false;\n  Object.keys(collectedStyles).forEach(prop => {\n    const value = collectedStyles[prop] as string;\n    // if the style is already defined in the first keyframe then\n    // we do not replace it.\n    if (!flatenedFirstKeyframeStyles[prop]) {\n      flatenedFirstKeyframeStyles[prop] = value;\n      extraFirstKeyframeStyles[prop] = value;\n      hasExtraFirstStyles = true;\n    }\n  });\n\n  const keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\n  // phase 2: normalize the final keyframe\n  const finalKeyframe = keyframes[limit];\n  finalKeyframe.styles.styles.unshift(finalStateStyles);\n\n  const flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n  const extraFinalKeyframeStyles: {[key: string]: string} = {};\n  let hasExtraFinalStyles = false;\n  Object.keys(keyframeCollectedStyles).forEach(prop => {\n    if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n      extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n      hasExtraFinalStyles = true;\n    }\n  });\n\n  if (hasExtraFinalStyles) {\n    finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n  }\n\n  Object.keys(flatenedFinalKeyframeStyles).forEach(prop => {\n    if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n      extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n      hasExtraFirstStyles = true;\n    }\n  });\n\n  if (hasExtraFirstStyles) {\n    firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n  }\n\n  collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n\n  return keyframes;\n}\n\nexport function clearStyles(styles: {[key: string]: string | number}): {[key: string]: string} {\n  const finalStyles: {[key: string]: string} = {};\n  Object.keys(styles).forEach(key => { finalStyles[key] = null; });\n  return finalStyles;\n}\n\nexport function collectAndResolveStyles(\n    collection: {[key: string]: string | number}, styles: {[key: string]: string | number}[]) {\n  return styles.map(entry => {\n    const stylesObj: {[key: string]: string | number} = {};\n    Object.keys(entry).forEach(prop => {\n      let value = entry[prop];\n      if (value == FILL_STYLE_FLAG) {\n        value = collection[prop];\n        if (!isPresent(value)) {\n          value = AUTO_STYLE;\n        }\n      }\n      collection[prop] = value;\n      stylesObj[prop] = value;\n    });\n    return stylesObj;\n  });\n}\n\nexport function renderStyles(\n    element: any, renderer: any, styles: {[key: string]: string | number}): void {\n  Object.keys(styles).forEach(prop => { renderer.setElementStyle(element, prop, styles[prop]); });\n}\n\nexport function flattenStyles(styles: {[key: string]: string | number}[]): {[key: string]: string} {\n  const finalStyles: {[key: string]: string} = {};\n  styles.forEach(entry => {\n    Object.keys(entry).forEach(prop => { finalStyles[prop] = entry[prop] as string; });\n  });\n  return finalStyles;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}