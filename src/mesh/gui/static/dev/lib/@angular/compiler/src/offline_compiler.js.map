{"version":3,"file":"offline_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/offline_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {ComponentFactory} from '@angular/core';\n\nimport {\n  CompileDirectiveMetadata,\n  CompileIdentifierMetadata,\n  CompilePipeMetadata,\n  createHostComponentMeta\n} from './compile_metadata';\n\nimport {BaseException} from '../src/facade/exceptions';\nimport {ListWrapper} from '../src/facade/collection';\nimport {StyleCompiler, StylesCompileResult} from './style_compiler';\nimport {ViewCompiler, ViewCompileResult} from './view_compiler/view_compiler';\nimport {TemplateParser} from './template_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {OutputEmitter} from './output/abstract_emitter';\nimport * as o from './output/output_ast';\nimport {XHR} from './xhr';\n\nimport {\n  MODULE_SUFFIX,\n  assetUrl,\n} from './util';\n\nvar _COMPONENT_FACTORY_IDENTIFIER = new CompileIdentifierMetadata({\n  name: 'ComponentFactory',\n  runtime: ComponentFactory,\n  moduleUrl: assetUrl('core', 'linker/component_factory')\n});\n\nexport class SourceModule {\n  constructor(public moduleUrl: string, public source: string) {}\n}\n\nexport class StyleSheetSourceWithImports {\n  constructor(public source: SourceModule, public importedUrls: string[]) {}\n}\n\nexport class NormalizedComponentWithViewDirectives {\n  constructor(public component: CompileDirectiveMetadata,\n              public directives: CompileDirectiveMetadata[], public pipes: CompilePipeMetadata[]) {}\n}\n\nexport class OfflineCompiler {\n  constructor(private _directiveNormalizer: DirectiveNormalizer,\n              private _templateParser: TemplateParser, private _styleCompiler: StyleCompiler,\n              private _viewCompiler: ViewCompiler, private _outputEmitter: OutputEmitter,\n              private _xhr: XHR) {}\n\n  normalizeDirectiveMetadata(directive: CompileDirectiveMetadata):\n      Promise<CompileDirectiveMetadata> {\n    return this._directiveNormalizer.normalizeDirective(directive);\n  }\n\n  compileTemplates(components: NormalizedComponentWithViewDirectives[]): SourceModule {\n    if (components.length === 0) {\n      throw new BaseException('No components given');\n    }\n    var statements = [];\n    var exportedVars = [];\n    var moduleUrl = _templateModuleUrl(components[0].component);\n    components.forEach(componentWithDirs => {\n      var compMeta = <CompileDirectiveMetadata>componentWithDirs.component;\n      _assertComponent(compMeta);\n      var compViewFactoryVar = this._compileComponent(compMeta, componentWithDirs.directives,\n                                                      componentWithDirs.pipes, statements);\n      exportedVars.push(compViewFactoryVar);\n\n      var hostMeta = createHostComponentMeta(compMeta.type, compMeta.selector);\n      var hostViewFactoryVar = this._compileComponent(hostMeta, [compMeta], [], statements);\n      var compFactoryVar = `${compMeta.type.name}NgFactory`;\n      statements.push(\n          o.variable(compFactoryVar)\n              .set(o.importExpr(_COMPONENT_FACTORY_IDENTIFIER, [o.importType(compMeta.type)])\n                       .instantiate(\n                           [\n                             o.literal(compMeta.selector),\n                             o.variable(hostViewFactoryVar),\n                             o.importExpr(compMeta.type)\n                           ],\n                           o.importType(_COMPONENT_FACTORY_IDENTIFIER,\n                                        [o.importType(compMeta.type)], [o.TypeModifier.Const])))\n              .toDeclStmt(null, [o.StmtModifier.Final]));\n      exportedVars.push(compFactoryVar);\n    });\n    return this._codegenSourceModule(moduleUrl, statements, exportedVars);\n  }\n\n  loadAndCompileStylesheet(stylesheetUrl: string, shim: boolean,\n                           suffix: string): Promise<StyleSheetSourceWithImports> {\n    return this._xhr.get(stylesheetUrl)\n        .then((cssText) => {\n          var compileResult = this._styleCompiler.compileStylesheet(stylesheetUrl, cssText, shim);\n          var importedUrls = [];\n          compileResult.dependencies.forEach((dep) => {\n            importedUrls.push(dep.moduleUrl);\n            dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, suffix);\n          });\n          return new StyleSheetSourceWithImports(\n              this._codgenStyles(stylesheetUrl, shim, suffix, compileResult), importedUrls);\n        });\n  }\n\n  private _compileComponent(compMeta: CompileDirectiveMetadata,\n                            directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\n                            targetStatements: o.Statement[]): string {\n    var styleResult = this._styleCompiler.compileComponent(compMeta);\n    var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template,\n                                                    directives, pipes, compMeta.type.name);\n    var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate,\n                                                         o.variable(styleResult.stylesVar), pipes);\n    ListWrapper.addAll(targetStatements,\n                       _resolveStyleStatements(compMeta.type.moduleUrl, styleResult));\n    ListWrapper.addAll(targetStatements, _resolveViewStatements(viewResult));\n    return viewResult.viewFactoryVar;\n  }\n\n  private _codgenStyles(inputUrl: string, shim: boolean, suffix: string,\n                        stylesCompileResult: StylesCompileResult): SourceModule {\n    return this._codegenSourceModule(_stylesModuleUrl(inputUrl, shim, suffix),\n                                     stylesCompileResult.statements,\n                                     [stylesCompileResult.stylesVar]);\n  }\n\n  private _codegenSourceModule(moduleUrl: string, statements: o.Statement[],\n                               exportedVars: string[]): SourceModule {\n    return new SourceModule(\n        moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n  }\n}\n\nfunction _resolveViewStatements(compileResult: ViewCompileResult): o.Statement[] {\n  compileResult.dependencies.forEach(\n      (dep) => { dep.factoryPlaceholder.moduleUrl = _templateModuleUrl(dep.comp); });\n  return compileResult.statements;\n}\n\n\nfunction _resolveStyleStatements(containingModuleUrl: string,\n                                 compileResult: StylesCompileResult): o.Statement[] {\n  var containingSuffix = _splitSuffix(containingModuleUrl)[1];\n  compileResult.dependencies.forEach((dep) => {\n    dep.valuePlaceholder.moduleUrl =\n        _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, containingSuffix);\n  });\n  return compileResult.statements;\n}\n\nfunction _templateModuleUrl(comp: CompileDirectiveMetadata): string {\n  var urlWithSuffix = _splitSuffix(comp.type.moduleUrl);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return shim ? `${stylesheetUrl}.shim${suffix}` : `${stylesheetUrl}${suffix}`;\n}\n\nfunction _assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\nfunction _splitSuffix(path: string): string[] {\n  let lastDot = path.lastIndexOf('.');\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  } else {\n    return [path, ''];\n  }\n}"]}