{"version":3,"file":"view_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_binder.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ListWrapper,\n} from '../../src/facade/collection';\nimport {\n  TemplateAst,\n  TemplateAstVisitor,\n  NgContentAst,\n  EmbeddedTemplateAst,\n  ElementAst,\n  ReferenceAst,\n  VariableAst,\n  BoundEventAst,\n  BoundElementPropertyAst,\n  AttrAst,\n  BoundTextAst,\n  TextAst,\n  DirectiveAst,\n  BoundDirectivePropertyAst,\n  templateVisitAll,\n} from '../template_ast';\nimport {\n  bindRenderText,\n  bindRenderInputs,\n  bindDirectiveInputs,\n  bindDirectiveHostProps\n} from './property_binder';\nimport {bindRenderOutputs, collectEventListeners, bindDirectiveOutputs} from './event_binder';\nimport {\n  bindDirectiveAfterContentLifecycleCallbacks,\n  bindDirectiveAfterViewLifecycleCallbacks,\n  bindDirectiveDestroyLifecycleCallbacks,\n  bindPipeDestroyLifecycleCallbacks,\n  bindDirectiveDetectChangesLifecycleCallbacks\n} from './lifecycle_binder';\nimport {CompileView} from './compile_view';\nimport {CompileElement, CompileNode} from './compile_element';\n\nexport function bindView(view: CompileView, parsedTemplate: TemplateAst[]): void {\n  var visitor = new ViewBinderVisitor(view);\n  templateVisitAll(visitor, parsedTemplate);\n  view.pipes.forEach(\n      (pipe) => { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n}\n\nclass ViewBinderVisitor implements TemplateAstVisitor {\n  private _nodeIndex: number = 0;\n\n  constructor(public view: CompileView) {}\n\n  visitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    var node = this.view.nodes[this._nodeIndex++];\n    bindRenderText(ast, node, this.view);\n    return null;\n  }\n  visitText(ast: TextAst, parent: CompileElement): any {\n    this._nodeIndex++;\n    return null;\n  }\n\n  visitNgContent(ast: NgContentAst, parent: CompileElement): any { return null; }\n\n  visitElement(ast: ElementAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n    bindRenderInputs(ast.inputs, compileElement);\n    bindRenderOutputs(eventListeners);\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n\n      bindDirectiveHostProps(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n    });\n    templateVisitAll(this, ast.children, compileElement);\n    // afterContent and afterView lifecycles need to be called bottom up\n    // so that children are notified before parents\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                                  compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                               compileElement);\n      bindDirectiveDestroyLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                             compileElement);\n    });\n    return null;\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n      bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                                  compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                               compileElement);\n      bindDirectiveDestroyLifecycleCallbacks(directiveAst.directive, directiveInstance,\n                                             compileElement);\n    });\n    bindView(compileElement.embeddedView, ast.children);\n    return null;\n  }\n\n  visitAttr(ast: AttrAst, ctx: any): any { return null; }\n  visitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n  visitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n\n  visitReference(ast: ReferenceAst, ctx: any): any { return null; }\n  visitVariable(ast: VariableAst, ctx: any): any { return null; }\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n"]}