{"version":3,"file":"forms.js","sourceRoot":"","sources":["../../../../modules/@angular/common/src/forms.ts"],"names":[],"mappings":";AAIE;;;;;;;;;;;EAWC;AACH,sBAAmE,eAAe,CAAC;AAA3E,kDAAe;AAAE,kCAAO;AAAE,4CAAY;AAAE,4CAAmC;AAEnF,2CAAuC,+CAA+C,CAAC;AAA/E,yFAA+E;AAEvF,kCAA+B,sCAAsC,CAAC;AAA9D,gEAA8D;AACtE,gCAA4B,oCAAoC,CAAC;AAAzD,wDAAyD;AACjE,gCAA4B,oCAAoC,CAAC;AAAzD,wDAAyD;AACjE,yBAAsB,6BAA6B,CAAC;AAA5C,qCAA4C;AACpD,2BAAwB,+BAA+B,CAAC;AAAhD,2CAAgD;AACxD,iCAA6B,qCAAqC,CAAC;AAA3D,2DAA2D;AACnE,8BAA0B,kCAAkC,CAAC;AAArD,kDAAqD;AAC7D,wBAAqB,4BAA4B,CAAC;AAA1C,kCAA0C;AAClD,uCAAsD,2CAA2C,CAAC;AAApE,uEAAoE;AAClG,uCAAmC,2CAA2C,CAAC;AAAvE,6EAAuE;AAC/E,kCAA8B,sCAAsC,CAAC;AAA7D,8DAA6D;AACrE,wCAA2C,4CAA4C,CAAC;AAAhF,8FAAgF;AACxF,8CAGO,kDAAkD,CAAC;AAFxD,wEAAc;AACd,gGACwD;AAC1D,2BAAgD,oBAAoB,CAAC;AAA7D,uDAAe;AAAE,yDAA4C;AACrE,2BAA6D,oBAAoB,CAAC;AAA1E,mDAAa;AAAE,+DAAmB;AAAE,6CAAsC;AAClF,2BAMO,+BAA+B,CAAC;AALrC,2DAAiB;AACjB,6DAAkB;AAClB,6DAAkB;AAClB,yDAEqC;AACvC,6BAA0B,sBAAsB,CAAC;AAAzC,iDAAyC;AACjD,6BAA0B,sBAAsB,CAAC,CAAA;AACjD,6CAAmC,iDAAiD,CAAC,CAAA;AAGrF;;;;;;;;GAQG;AACU,sBAAc,GAA6B,CAAC,0BAAW,EAAE,mDAAoB,CAAC,CAAC;AAE5F;;;;GAIG;AACU,qBAAa,GAAsB,sBAAc,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  /**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link ControlGroup} that\n * consists of\n * {@link Control} objects, and mapping them onto the DOM. {@link Control} objects can then be used\n * to read information\n * from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\nexport {AbstractControl, Control, ControlGroup, ControlArray} from './forms/model';\n\nexport {AbstractControlDirective} from './forms/directives/abstract_control_directive';\nexport {Form} from './forms/directives/form_interface';\nexport {ControlContainer} from './forms/directives/control_container';\nexport {NgControlName} from './forms/directives/ng_control_name';\nexport {NgFormControl} from './forms/directives/ng_form_control';\nexport {NgModel} from './forms/directives/ng_model';\nexport {NgControl} from './forms/directives/ng_control';\nexport {NgControlGroup} from './forms/directives/ng_control_group';\nexport {NgFormModel} from './forms/directives/ng_form_model';\nexport {NgForm} from './forms/directives/ng_form';\nexport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './forms/directives/control_value_accessor';\nexport {DefaultValueAccessor} from './forms/directives/default_value_accessor';\nexport {NgControlStatus} from './forms/directives/ng_control_status';\nexport {CheckboxControlValueAccessor} from './forms/directives/checkbox_value_accessor';\nexport {\n  NgSelectOption,\n  SelectControlValueAccessor\n} from './forms/directives/select_control_value_accessor';\nexport {FORM_DIRECTIVES, RadioButtonState} from './forms/directives';\nexport {NG_VALIDATORS, NG_ASYNC_VALIDATORS, Validators} from './forms/validators';\nexport {\n  RequiredValidator,\n  MinLengthValidator,\n  MaxLengthValidator,\n  PatternValidator,\n  Validator\n} from './forms/directives/validators';\nexport {FormBuilder} from './forms/form_builder';\nimport {FormBuilder} from './forms/form_builder';\nimport {RadioControlRegistry} from './forms/directives/radio_control_value_accessor';\nimport {Type} from '@angular/core';\n\n/**\n * Shorthand set of providers used for building Angular forms.\n *\n * ### Example\n *\n * ```typescript\n * bootstrap(MyApp, [FORM_PROVIDERS]);\n * ```\n */\nexport const FORM_PROVIDERS: Type[] = /*@ts2dart_const*/[FormBuilder, RadioControlRegistry];\n\n/**\n * See {@link FORM_PROVIDERS} instead.\n *\n * @deprecated\n */\nexport const FORM_BINDINGS = /*@ts2dart_const*/ FORM_PROVIDERS;\n"]}