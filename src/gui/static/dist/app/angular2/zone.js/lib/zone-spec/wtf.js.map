{"version":3,"sources":["app/angular2/zone.js/lib/zone-spec/wtf.ts"],"names":[],"mappings":"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","file":"wtf.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n(function(global) {\n  interface Wtf {\n    trace: WtfTrace;\n  }\n  interface WtfScope {}\n  ;\n  interface WtfRange {}\n  ;\n  interface WtfTrace {\n    events: WtfEvents;\n    leaveScope(scope: WtfScope, returnValue?: any): void;\n    beginTimeRange(rangeType: string, action: string): WtfRange;\n    endTimeRange(range: WtfRange): void;\n  }\n  interface WtfEvents {\n    createScope(signature: string, flags?: any): WtfScopeFn;\n    createInstance(signature: string, flags?: any): WtfEventFn;\n  }\n\n  type WtfScopeFn = (...args: any[]) => WtfScope;\n  type WtfEventFn = (...args: any[]) => any;\n\n  // Detect and setup WTF.\n  let wtfTrace: WtfTrace = null;\n  let wtfEvents: WtfEvents = null;\n  const wtfEnabled: boolean = (function(): boolean {\n    const wtf: Wtf = global['wtf'];\n    if (wtf) {\n      wtfTrace = wtf.trace;\n      if (wtfTrace) {\n        wtfEvents = wtfTrace.events;\n        return true;\n      }\n    }\n    return false;\n  })();\n\n  class WtfZoneSpec implements ZoneSpec {\n    name: string = 'WTF';\n\n    static forkInstance =\n        wtfEnabled && wtfEvents.createInstance('Zone:fork(ascii zone, ascii newZone)');\n    static scheduleInstance: {[key: string]: WtfEventFn} = {};\n    static cancelInstance: {[key: string]: WtfEventFn} = {};\n    static invokeScope: {[key: string]: WtfEventFn} = {};\n    static invokeTaskScope: {[key: string]: WtfEventFn} = {};\n\n    onFork(\n        parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone,\n        zoneSpec: ZoneSpec): Zone {\n      const retValue = parentZoneDelegate.fork(targetZone, zoneSpec);\n      WtfZoneSpec.forkInstance(zonePathName(targetZone), retValue.name);\n      return retValue;\n    }\n\n    onInvoke(\n        parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, delegate: Function,\n        applyThis: any, applyArgs: any[], source: string): any {\n      let scope = WtfZoneSpec.invokeScope[source];\n      if (!scope) {\n        scope = WtfZoneSpec.invokeScope[source] =\n            wtfEvents.createScope(`Zone:invoke:${source}(ascii zone)`);\n      }\n      return wtfTrace.leaveScope(\n          scope(zonePathName(targetZone)),\n          parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source));\n    }\n\n\n    onHandleError(\n        parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone,\n        error: any): boolean {\n      return parentZoneDelegate.handleError(targetZone, error);\n    }\n\n    onScheduleTask(\n        parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, task: Task): any {\n      const key = task.type + ':' + task.source;\n      let instance = WtfZoneSpec.scheduleInstance[key];\n      if (!instance) {\n        instance = WtfZoneSpec.scheduleInstance[key] =\n            wtfEvents.createInstance(`Zone:schedule:${key}(ascii zone, any data)`);\n      }\n      const retValue = parentZoneDelegate.scheduleTask(targetZone, task);\n      instance(zonePathName(targetZone), shallowObj(task.data, 2));\n      return retValue;\n    }\n\n\n    onInvokeTask(\n        parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, task: Task,\n        applyThis: any, applyArgs: any[]): any {\n      const source = task.source;\n      let scope = WtfZoneSpec.invokeTaskScope[source];\n      if (!scope) {\n        scope = WtfZoneSpec.invokeTaskScope[source] =\n            wtfEvents.createScope(`Zone:invokeTask:${source}(ascii zone)`);\n      }\n      return wtfTrace.leaveScope(\n          scope(zonePathName(targetZone)),\n          parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs));\n    }\n\n    onCancelTask(parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, task: Task):\n        any {\n      const key = task.source;\n      let instance = WtfZoneSpec.cancelInstance[key];\n      if (!instance) {\n        instance = WtfZoneSpec.cancelInstance[key] =\n            wtfEvents.createInstance(`Zone:cancel:${key}(ascii zone, any options)`);\n      }\n      const retValue = parentZoneDelegate.cancelTask(targetZone, task);\n      instance(zonePathName(targetZone), shallowObj(task.data, 2));\n      return retValue;\n    };\n  }\n\n  function shallowObj(obj: any, depth: number): any {\n    if (!depth) return null;\n    const out = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        switch (typeof value) {\n          case 'object':\n            const name = value && value.constructor && (<any>value.constructor).name;\n            value = name == (<any>Object).name ? shallowObj(value, depth - 1) : name;\n            break;\n          case 'function':\n            value = value.name || undefined;\n            break;\n        }\n        out[key] = value;\n      }\n    }\n    return out;\n  }\n\n  function zonePathName(zone: Zone) {\n    let name: string = zone.name;\n    zone = zone.parent;\n    while (zone != null) {\n      name = zone.name + '::' + name;\n      zone = zone.parent;\n    }\n    return name;\n  }\n\n  Zone['wtfZoneSpec'] = !wtfEnabled ? null : new WtfZoneSpec();\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n"]}