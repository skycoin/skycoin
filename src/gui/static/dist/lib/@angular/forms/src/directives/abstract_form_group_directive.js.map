{"version":3,"file":"abstract_form_group_directive.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/abstract_form_group_directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAMI,EAAC,gBAAgB,EAAC,MAAM,qBAAqB;OAE7C,EAAC,sBAAsB,EAAE,iBAAiB,EAAE,WAAW,EAAC,MAAM,UAAU;AAK/E;;;;GAIG;AACH;IAAgD,8CAAgB;IAAhE;QAAgD,8BAAgB;IA0ChE,CAAC;IAhCC,6CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,gDAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAKD,sBAAI,+CAAO;QAHX;;WAEG;aACH,cAA2B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAK1E,sBAAI,4CAAI;QAHR;;WAEG;aACH,cAAuB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAKrE,sBAAI,qDAAa;QAHjB;;WAEG;aACH,cAA4B,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAEtF,sBAAI,iDAAS;aAAb,cAA+B,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAE5E,sBAAI,sDAAc;aAAlB,cAAyC,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAEhG,gBAAgB;IAChB,qDAAgB,GAAhB,cAA0B,CAAC;IAC7B,iCAAC;AAAD,CAAC,AA1CD,CAAgD,gBAAgB,GA0C/D","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\n\n\n/**\n * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n *\n * @stable\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[];\n\n  ngOnInit(): void {\n    this._checkParentType();\n    this.formDirective.addFormGroup(this);\n  }\n\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n\n  /**\n   * Get the {@link FormGroup} backing this binding.\n   */\n  get control(): FormGroup { return this.formDirective.getFormGroup(this); }\n\n  /**\n   * Get the path to this control group.\n   */\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  /**\n   * Get the {@link Form} to which this group belongs.\n   */\n  get formDirective(): Form { return this._parent ? this._parent.formDirective : null; }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n\n  /** @internal */\n  _checkParentType(): void {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}