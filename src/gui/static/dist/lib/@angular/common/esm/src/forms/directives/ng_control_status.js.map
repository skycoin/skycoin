{"version":3,"file":"ng_control_status.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/ng_control_status.ts"],"names":[],"mappings":"OAIS,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,eAAe;OACxC,EAAC,SAAS,EAAC,MAAM,cAAc;OAC/B,EAAC,SAAS,EAAC,MAAM,0BAA0B;AAClD;IAGE,YAAa,EAAa;QAAI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAAC,CAAC;IAE9C,IAAI,gBAAgB;QAClB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;IAC1E,CAAC;IACD,IAAI,cAAc;QAChB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;IACxE,CAAC;IACD,IAAI,eAAe;QACjB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;IACzE,CAAC;IACD,IAAI,YAAY;QACd,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACtE,CAAC;IACD,IAAI,YAAY;QACd,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACtE,CAAC;IACD,IAAI,cAAc;QAChB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACvE,CAAC;AAiBH,CAAC;AAhBM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,uCAAuC;gBACjD,IAAI,EAAE;oBACJ,sBAAsB,EAAE,kBAAkB;oBAC1C,oBAAoB,EAAE,gBAAgB;oBACtC,qBAAqB,EAAE,iBAAiB;oBACxC,kBAAkB,EAAE,cAAc;oBAClC,kBAAkB,EAAE,cAAc;oBAClC,oBAAoB,EAAE,gBAAgB;iBACvC;aACF,EAAG,EAAE;CACL,CAAC;AACK,8BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;CAChD,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Directive, Self} from '@angular/core';\nimport {NgControl} from './ng_control';\nimport {isPresent} from '../../../src/facade/lang';\nexport class NgControlStatus {\n  private _cd: NgControl;\n\n  constructor( cd: NgControl) { this._cd = cd; }\n\n  get ngClassUntouched(): boolean {\n    return isPresent(this._cd.control) ? this._cd.control.untouched : false;\n  }\n  get ngClassTouched(): boolean {\n    return isPresent(this._cd.control) ? this._cd.control.touched : false;\n  }\n  get ngClassPristine(): boolean {\n    return isPresent(this._cd.control) ? this._cd.control.pristine : false;\n  }\n  get ngClassDirty(): boolean {\n    return isPresent(this._cd.control) ? this._cd.control.dirty : false;\n  }\n  get ngClassValid(): boolean {\n    return isPresent(this._cd.control) ? this._cd.control.valid : false;\n  }\n  get ngClassInvalid(): boolean {\n    return isPresent(this._cd.control) ? !this._cd.control.valid : false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngControl],[ngModel],[ngFormControl]',\n  host: {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid'\n  }\n}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgControl, decorators: [{ type: Self }, ]},\n];\n}\n"]}