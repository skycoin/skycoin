{"version":3,"file":"downgrade_injectable.js","sourceRoot":"","sources":["../../../../../modules/@angular/upgrade/src/aot/downgrade_injectable.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,EAAC,YAAY,EAAC,MAAM,aAAa;AACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCG;AACH,oCAAoC,KAAU;IAC5C,MAAM,CAAC,CAAC,YAAY,EAAE,UAAC,CAAW,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAZ,CAAY,CAAC,CAAC;AACvD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n/**\n *  *\n  * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n  * library for hybrid upgrade apps that support AoT compilation*\n  * *\n  * Allow an Angular 2+ service to be accessible from Angular 1.\n  * *\n  * *\n  * First ensure that the service to be downgraded is provided in an {@link NgModule}\n  * that will be part of the upgrade application. For example, let's assume we have\n  * defined `HeroesService`\n  * *\n  * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n  * *\n  * and that we have included this in our upgrade app {@link NgModule}\n  * *\n  * {@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n  * *\n  * Now we can register the `downgradeInjectable` factory function for the service\n  * on an Angular 1 module.\n  * *\n  * {@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n  * *\n  * Inside an Angular 1 component's controller we can get hold of the\n  * downgraded service via the name we gave when downgrading.\n  * *\n  * {@example upgrade/static/ts/module.ts region=\"example-app\"}\n  * *\n  * *\n  * Takes a `token` that identifies a service provided from Angular 2+.\n  * *\n  * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n  * used to register the service on an Angular 1 module.\n  * *\n  * The factory function provides access to the Angular 2+ service that\n  * is identified by the `token` parameter.\n  * *\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token: any) {\n  return [INJECTOR_KEY, (i: Injector) => i.get(token)];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}