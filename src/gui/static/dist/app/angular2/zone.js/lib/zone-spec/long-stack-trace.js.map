{"version":3,"sources":["app/angular2/zone.js/lib/zone-spec/long-stack-trace.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,OAAO,GAAG,IAAI,CAAC;AACrB,MAAM,GAAG,GAAG,mBAAmB,CAAC;AAChC,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,aAAa,GAAG,mBAAmB,CAAC;AAE1C;IAAA;QACE,UAAK,GAAU,aAAa,EAAE,CAAC;QAC/B,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;IAC/B,CAAC;AAAD,CAAC;AAED;IACE,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC1C,CAAC;AAED;IACE,IAAI,CAAC;QACH,MAAM,8BAA8B,EAAE,CAAC;IACzC,CAAE;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;AACH,CAAC;AAED,yFAAyF;AACzF,yEAAyE;AACzE,MAAM,KAAK,GAAG,8BAA8B,EAAE,CAAC;AAC/C,MAAM,WAAW,GAAG,4BAA4B,EAAE,CAAC;AACnD,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK;IAC7B,8BAA8B;IAC9B,CAAC,WAAW,CAAC,KAAK,GAAG,4BAA4B,GAAG,8BAA8B,CAAC,CAAC;AAExF,mBAAmB,KAAY;IAC7B,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AACvD,CAAC;AAED,uBAAuB,KAAe,EAAE,KAAY;IAClD,IAAI,KAAK,GAAa,SAAS,CAAC,KAAK,CAAC,CAAC;IACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACvB,2DAA2D;QAC3D,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;AACH,CAAC;AAED,8BAA8B,MAAwB,EAAE,KAAa;IACnE,MAAM,SAAS,GAAa,CAAC,KAAK,CAAC,CAAC;IAEpC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,WAAW,GAAmB,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC;YACvC,SAAS,CAAC,IAAI,CACV,GAAG,GAAG,aAAa,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,YAAY,QAAQ,IAAI,GAAG,EAAE,CAAC,CAAC;YACpF,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAE5C,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjC,CAAC;AAED,IAAI,CAAC,wBAAwB,CAAC,GAAa;IACzC,IAAI,EAAE,kBAAkB;IACxB,mBAAmB,EAAE,EAAE;IAEvB,cAAc,EAAE,UACZ,kBAAgC,EAAE,WAAiB,EAAE,UAAgB,EAAE,IAAU;QACnF,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QACrF,KAAK,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC1C,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QACjC,MAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,EAAE,UACX,kBAAgC,EAAE,WAAiB,EAAE,UAAgB,EAAE,KAAU;QACnF,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC;QAClD,EAAE,CAAC,CAAC,KAAK,YAAY,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;YACzC,IAAI,gBAAgB,GAAmB,IAAI,CAAC;YAC5C,IAAI,CAAC;gBACH,IAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gBACjE,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;oBAC1C,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC;oBACnC,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;oBAC/B,UAAU,GAAG;wBACX,GAAG,EAAE;4BACH,MAAM,CAAC,oBAAoB,CACvB,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EACjD,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;wBACrD,CAAC;qBACF,CAAC;oBACF,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;oBAClD,gBAAgB,GAAG,IAAI,CAAC;gBAC1B,CAAC;YACH,CAAE;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC;YACD,IAAI,SAAS,GAAW,gBAAgB;gBACpC,IAAI;gBACJ,oBAAoB,CAAC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YACzF,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC;oBACH,gBAAgB,GAAG,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;gBAC7C,CAAE;gBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC;YACH,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC;oBACH,gBAAgB,GAAI,KAAa,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC1D,CAAE;gBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;CACF,CAAC;AAEF,4BAA4B,WAAuB,EAAE,KAAa;IAChE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACd,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1D,kBAAkB,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;AACH,CAAC;AAED;IACE,MAAM,MAAM,GAAe,EAAE,CAAC;IAC9B,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC9B,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;YACtB,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC;QACR,CAAC;IACH,CAAC;AACH,CAAC;AACD,mBAAmB,EAAE,CAAC","file":"long-stack-trace.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst NEWLINE = '\\n';\nconst SEP = '  -------------  ';\nconst IGNORE_FRAMES = [];\nconst creationTrace = '__creationTrace__';\n\nclass LongStackTrace {\n  error: Error = getStacktrace();\n  timestamp: Date = new Date();\n}\n\nfunction getStacktraceWithUncaughtError(): Error {\n  return new Error('STACKTRACE TRACKING');\n}\n\nfunction getStacktraceWithCaughtError(): Error {\n  try {\n    throw getStacktraceWithUncaughtError();\n  } catch (e) {\n    return e;\n  }\n}\n\n// Some implementations of exception handling don't create a stack trace if the exception\n// isn't thrown, however it's faster not to actually throw the exception.\nconst error = getStacktraceWithUncaughtError();\nconst coughtError = getStacktraceWithCaughtError();\nconst getStacktrace = error.stack ?\n    getStacktraceWithUncaughtError :\n    (coughtError.stack ? getStacktraceWithCaughtError : getStacktraceWithUncaughtError);\n\nfunction getFrames(error: Error): string[] {\n  return error.stack ? error.stack.split(NEWLINE) : [];\n}\n\nfunction addErrorStack(lines: string[], error: Error): void {\n  let trace: string[] = getFrames(error);\n  for (let i = 0; i < trace.length; i++) {\n    const frame = trace[i];\n    // Filter out the Frames which are part of stack capturing.\n    if (!(i < IGNORE_FRAMES.length && IGNORE_FRAMES[i] === frame)) {\n      lines.push(trace[i]);\n    }\n  }\n}\n\nfunction renderLongStackTrace(frames: LongStackTrace[], stack: string): string {\n  const longTrace: string[] = [stack];\n\n  if (frames) {\n    let timestamp = new Date().getTime();\n    for (let i = 0; i < frames.length; i++) {\n      const traceFrames: LongStackTrace = frames[i];\n      const lastTime = traceFrames.timestamp;\n      longTrace.push(\n          `${SEP} Elapsed: ${timestamp - lastTime.getTime()} ms; At: ${lastTime} ${SEP}`);\n      addErrorStack(longTrace, traceFrames.error);\n\n      timestamp = lastTime.getTime();\n    }\n  }\n\n  return longTrace.join(NEWLINE);\n}\n\nZone['longStackTraceZoneSpec'] = <ZoneSpec>{\n  name: 'long-stack-trace',\n  longStackTraceLimit: 10,  // Max number of task to keep the stack trace for.\n\n  onScheduleTask: function(\n      parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, task: Task): any {\n    const currentTask = Zone.currentTask;\n    let trace = currentTask && currentTask.data && currentTask.data[creationTrace] || [];\n    trace = [new LongStackTrace()].concat(trace);\n    if (trace.length > this.longStackTraceLimit) {\n      trace.length = this.longStackTraceLimit;\n    }\n    if (!task.data) task.data = {};\n    task.data[creationTrace] = trace;\n    return parentZoneDelegate.scheduleTask(targetZone, task);\n  },\n\n  onHandleError: function(\n      parentZoneDelegate: ZoneDelegate, currentZone: Zone, targetZone: Zone, error: any): any {\n    const parentTask = Zone.currentTask || error.task;\n    if (error instanceof Error && parentTask) {\n      var stackSetSucceded: string|boolean = null;\n      try {\n        let descriptor = Object.getOwnPropertyDescriptor(error, 'stack');\n        if (descriptor && descriptor.configurable) {\n          const delegateGet = descriptor.get;\n          const value = descriptor.value;\n          descriptor = {\n            get: function() {\n              return renderLongStackTrace(\n                  parentTask.data && parentTask.data[creationTrace],\n                  delegateGet ? delegateGet.apply(this) : value);\n            }\n          };\n          Object.defineProperty(error, 'stack', descriptor);\n          stackSetSucceded = true;\n        }\n      } catch (e) {\n      }\n      var longStack: string = stackSetSucceded ?\n          null :\n          renderLongStackTrace(parentTask.data && parentTask.data[creationTrace], error.stack);\n      if (!stackSetSucceded) {\n        try {\n          stackSetSucceded = error.stack = longStack;\n        } catch (e) {\n        }\n      }\n      if (!stackSetSucceded) {\n        try {\n          stackSetSucceded = (error as any).longStack = longStack;\n        } catch (e) {\n        }\n      }\n    }\n    return parentZoneDelegate.handleError(targetZone, error);\n  }\n};\n\nfunction captureStackTraces(stackTraces: string[][], count: number): void {\n  if (count > 0) {\n    stackTraces.push(getFrames((new LongStackTrace()).error));\n    captureStackTraces(stackTraces, count - 1);\n  }\n}\n\nfunction computeIgnoreFrames() {\n  const frames: string[][] = [];\n  captureStackTraces(frames, 2);\n  const frames1 = frames[0];\n  const frames2 = frames[1];\n  for (let i = 0; i < frames1.length; i++) {\n    const frame1 = frames1[i];\n    const frame2 = frames2[i];\n    if (frame1 === frame2) {\n      IGNORE_FRAMES.push(frame1);\n    } else {\n      break;\n    }\n  }\n}\ncomputeIgnoreFrames();\n"]}