{"version":3,"file":"ng_plural.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/directives/ng_plural.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  Directive,\n  ViewContainerRef,\n  TemplateRef,\n  ContentChildren,\n  QueryList,\n  Attribute,\n  AfterContentInit,\n  Input\n} from '@angular/core';\nimport {isPresent, NumberWrapper} from '../../src/facade/lang';\nimport {Map} from '../../src/facade/collection';\n\nimport {SwitchView} from './ng_switch';\n\nconst _CATEGORY_DEFAULT = 'other';\n\nexport abstract class NgLocalization { abstract getPluralCategory(value: any): string; }\nexport class NgPluralCase {\n  /** @internal */\n  _view: SwitchView;\n  constructor( public value: string, template: TemplateRef<Object>,\n              viewContainer: ViewContainerRef) {\n    this._view = new SwitchView(viewContainer, template);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\nexport class NgPlural implements AfterContentInit {\n  private _switchValue: number;\n  private _activeView: SwitchView;\n  private _caseViews = new Map<any, SwitchView>(); cases: QueryList<NgPluralCase> = null;\n\n  constructor(private _localization: NgLocalization) {}\n  set ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n\n  ngAfterContentInit() {\n    this.cases.forEach((pluralCase: NgPluralCase): void => {\n      this._caseViews.set(this._formatValue(pluralCase), pluralCase._view);\n    });\n    this._updateView();\n  }\n\n  /** @internal */\n  _updateView(): void {\n    this._clearViews();\n\n    var view: SwitchView = this._caseViews.get(this._switchValue);\n    if (!isPresent(view)) view = this._getCategoryView(this._switchValue);\n\n    this._activateView(view);\n  }\n\n  /** @internal */\n  _clearViews() {\n    if (isPresent(this._activeView)) this._activeView.destroy();\n  }\n\n  /** @internal */\n  _activateView(view: SwitchView) {\n    if (!isPresent(view)) return;\n    this._activeView = view;\n    this._activeView.create();\n  }\n\n  /** @internal */\n  _getCategoryView(value: number): SwitchView {\n    var category: string = this._localization.getPluralCategory(value);\n    var categoryView: SwitchView = this._caseViews.get(category);\n    return isPresent(categoryView) ? categoryView : this._caseViews.get(_CATEGORY_DEFAULT);\n  }\n\n  /** @internal */\n  _isValueView(pluralCase: NgPluralCase): boolean { return pluralCase.value[0] === \"=\"; }\n\n  /** @internal */\n  _formatValue(pluralCase: NgPluralCase): any {\n    return this._isValueView(pluralCase) ? this._stripValue(pluralCase.value) : pluralCase.value;\n  }\n\n  /** @internal */\n  _stripValue(value: string): number { return NumberWrapper.parseInt(value.substring(1), 10); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cases': [{ type: ContentChildren, args: [NgPluralCase, ] },],\n'ngPlural': [{ type: Input },],\n};\n}\n"]}