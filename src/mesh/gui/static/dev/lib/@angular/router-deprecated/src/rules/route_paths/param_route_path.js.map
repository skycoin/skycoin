{"version":3,"file":"param_route_path.js","sourceRoot":"","sources":["../../../../../../modules/@angular/router-deprecated/src/rules/route_paths/param_route_path.ts"],"names":[],"mappings":"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","sourcesContent":["import {RegExpWrapper, StringWrapper, isPresent, isBlank} from '../../../src/facade/lang';\nimport {BaseException} from '../../../src/facade/exceptions';\nimport {StringMapWrapper} from '../../../src/facade/collection';\nimport {TouchMap, normalizeString} from '../../utils';\nimport {Url, RootUrl, convertUrlParamsToArray} from '../../url_parser';\nimport {RoutePath, GeneratedUrl, MatchedUrl} from './route_path';\n\n\n/**\n * `ParamRoutePath`s are made up of `PathSegment`s, each of which can\n * match a segment of a URL. Different kind of `PathSegment`s match\n * URL segments in different ways...\n */\ninterface PathSegment {\n  name: string;\n  generate(params: TouchMap): string;\n  match(path: string): boolean;\n  specificity: string;\n  hash: string;\n}\n\n/**\n * Identified by a `...` URL segment. This indicates that the\n * Route will continue to be matched by child `Router`s.\n */\nclass ContinuationPathSegment implements PathSegment {\n  name: string = '';\n  specificity = '';\n  hash = '...';\n  generate(params: TouchMap): string { return ''; }\n  match(path: string): boolean { return true; }\n}\n\n/**\n * Identified by a string not starting with a `:` or `*`.\n * Only matches the URL segments that equal the segment path\n */\nclass StaticPathSegment implements PathSegment {\n  name: string = '';\n  specificity = '2';\n  hash: string;\n  constructor(public path: string) { this.hash = path; }\n  match(path: string): boolean { return path == this.path; }\n  generate(params: TouchMap): string { return this.path; }\n}\n\n/**\n * Identified by a string starting with `:`. Indicates a segment\n * that can contain a value that will be extracted and provided to\n * a matching `Instruction`.\n */\nclass DynamicPathSegment implements PathSegment {\n  static paramMatcher = /^:([^\\/]+)$/g;\n  specificity = '1';\n  hash = ':';\n  constructor(public name: string) {}\n  match(path: string): boolean { return path.length > 0; }\n  generate(params: TouchMap): string {\n    if (!StringMapWrapper.contains(params.map, this.name)) {\n      throw new BaseException(\n          `Route generator for '${this.name}' was not included in parameters passed.`);\n    }\n    return encodeDynamicSegment(normalizeString(params.get(this.name)));\n  }\n}\n\n/**\n * Identified by a string starting with `*` Indicates that all the following\n * segments match this route and that the value of these segments should\n * be provided to a matching `Instruction`.\n */\nclass StarPathSegment implements PathSegment {\n  static wildcardMatcher = /^\\*([^\\/]+)$/g;\n  specificity = '0';\n  hash = '*';\n  constructor(public name: string) {}\n  match(path: string): boolean { return true; }\n  generate(params: TouchMap): string { return normalizeString(params.get(this.name)); }\n}\n\n/**\n * Parses a URL string using a given matcher DSL, and generates URLs from param maps\n */\nexport class ParamRoutePath implements RoutePath {\n  specificity: string;\n  terminal: boolean = true;\n  hash: string;\n\n  private _segments: PathSegment[];\n\n  /**\n   * Takes a string representing the matcher DSL\n   */\n  constructor(public routePath: string) {\n    this._assertValidPath(routePath);\n\n    this._parsePathString(routePath);\n    this.specificity = this._calculateSpecificity();\n    this.hash = this._calculateHash();\n\n    var lastSegment = this._segments[this._segments.length - 1];\n    this.terminal = !(lastSegment instanceof ContinuationPathSegment);\n  }\n\n  matchUrl(url: Url): MatchedUrl {\n    var nextUrlSegment = url;\n    var currentUrlSegment: Url;\n    var positionalParams = {};\n    var captured: string[] = [];\n\n    for (var i = 0; i < this._segments.length; i += 1) {\n      var pathSegment = this._segments[i];\n\n      currentUrlSegment = nextUrlSegment;\n      if (pathSegment instanceof ContinuationPathSegment) {\n        break;\n      }\n\n      if (isPresent(currentUrlSegment)) {\n        // the star segment consumes all of the remaining URL, including matrix params\n        if (pathSegment instanceof StarPathSegment) {\n          positionalParams[pathSegment.name] = currentUrlSegment.toString();\n          captured.push(currentUrlSegment.toString());\n          nextUrlSegment = null;\n          break;\n        }\n\n        captured.push(currentUrlSegment.path);\n\n        if (pathSegment instanceof DynamicPathSegment) {\n          positionalParams[pathSegment.name] = decodeDynamicSegment(currentUrlSegment.path);\n        } else if (!pathSegment.match(currentUrlSegment.path)) {\n          return null;\n        }\n\n        nextUrlSegment = currentUrlSegment.child;\n      } else if (!pathSegment.match('')) {\n        return null;\n      }\n    }\n\n    if (this.terminal && isPresent(nextUrlSegment)) {\n      return null;\n    }\n\n    var urlPath = captured.join('/');\n\n    var auxiliary = [];\n    var urlParams = [];\n    var allParams = positionalParams;\n    if (isPresent(currentUrlSegment)) {\n      // If this is the root component, read query params. Otherwise, read matrix params.\n      var paramsSegment = url instanceof RootUrl ? url : currentUrlSegment;\n\n      if (isPresent(paramsSegment.params)) {\n        allParams = StringMapWrapper.merge(paramsSegment.params, positionalParams);\n        urlParams = convertUrlParamsToArray(paramsSegment.params);\n      } else {\n        allParams = positionalParams;\n      }\n      auxiliary = currentUrlSegment.auxiliary;\n    }\n\n    return new MatchedUrl(urlPath, urlParams, allParams, auxiliary, nextUrlSegment);\n  }\n\n\n  generateUrl(params: {[key: string]: any}): GeneratedUrl {\n    var paramTokens = new TouchMap(params);\n\n    var path = [];\n\n    for (var i = 0; i < this._segments.length; i++) {\n      let segment = this._segments[i];\n      if (!(segment instanceof ContinuationPathSegment)) {\n        path.push(segment.generate(paramTokens));\n      }\n    }\n    var urlPath = path.join('/');\n\n    var nonPositionalParams = paramTokens.getUnused();\n    var urlParams = nonPositionalParams;\n\n    return new GeneratedUrl(urlPath, urlParams);\n  }\n\n\n  toString(): string { return this.routePath; }\n\n  private _parsePathString(routePath: string) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (routePath.startsWith(\"/\")) {\n      routePath = routePath.substring(1);\n    }\n\n    var segmentStrings = routePath.split('/');\n    this._segments = [];\n\n    var limit = segmentStrings.length - 1;\n    for (var i = 0; i <= limit; i++) {\n      var segment = segmentStrings[i], match;\n\n      if (isPresent(match = RegExpWrapper.firstMatch(DynamicPathSegment.paramMatcher, segment))) {\n        this._segments.push(new DynamicPathSegment(match[1]));\n      } else if (isPresent(\n                     match = RegExpWrapper.firstMatch(StarPathSegment.wildcardMatcher, segment))) {\n        this._segments.push(new StarPathSegment(match[1]));\n      } else if (segment == '...') {\n        if (i < limit) {\n          throw new BaseException(\n              `Unexpected \"...\" before the end of the path for \"${routePath}\".`);\n        }\n        this._segments.push(new ContinuationPathSegment());\n      } else {\n        this._segments.push(new StaticPathSegment(segment));\n      }\n    }\n  }\n\n  private _calculateSpecificity(): string {\n    // The \"specificity\" of a path is used to determine which route is used when multiple routes\n    // match\n    // a URL. Static segments (like \"/foo\") are the most specific, followed by dynamic segments\n    // (like\n    // \"/:id\"). Star segments add no specificity. Segments at the start of the path are more\n    // specific\n    // than proceeding ones.\n    //\n    // The code below uses place values to combine the different types of segments into a single\n    // string that we can sort later. Each static segment is marked as a specificity of \"2,\" each\n    // dynamic segment is worth \"1\" specificity, and stars are worth \"0\" specificity.\n    var i, length = this._segments.length, specificity;\n    if (length == 0) {\n      // a single slash (or \"empty segment\" is as specific as a static segment\n      specificity += '2';\n    } else {\n      specificity = '';\n      for (i = 0; i < length; i++) {\n        specificity += this._segments[i].specificity;\n      }\n    }\n    return specificity;\n  }\n\n  private _calculateHash(): string {\n    // this function is used to determine whether a route config path like `/foo/:id` collides with\n    // `/foo/:name`\n    var i, length = this._segments.length;\n    var hashParts = [];\n    for (i = 0; i < length; i++) {\n      hashParts.push(this._segments[i].hash);\n    }\n    return hashParts.join('/');\n  }\n\n  private _assertValidPath(path: string) {\n    if (StringWrapper.contains(path, '#')) {\n      throw new BaseException(\n          `Path \"${path}\" should not include \"#\". Use \"HashLocationStrategy\" instead.`);\n    }\n    var illegalCharacter = RegExpWrapper.firstMatch(ParamRoutePath.RESERVED_CHARS, path);\n    if (isPresent(illegalCharacter)) {\n      throw new BaseException(\n          `Path \"${path}\" contains \"${illegalCharacter[0]}\" which is not allowed in a route config.`);\n    }\n  }\n  static RESERVED_CHARS = RegExpWrapper.create('//|\\\\(|\\\\)|;|\\\\?|=');\n}\n\nlet REGEXP_PERCENT = /%/g;\nlet REGEXP_SLASH = /\\//g;\nlet REGEXP_OPEN_PARENT = /\\(/g;\nlet REGEXP_CLOSE_PARENT = /\\)/g;\nlet REGEXP_SEMICOLON = /;/g;\n\nfunction encodeDynamicSegment(value: string): string {\n  if (isBlank(value)) {\n    return null;\n  }\n\n  value = StringWrapper.replaceAll(value, REGEXP_PERCENT, '%25');\n  value = StringWrapper.replaceAll(value, REGEXP_SLASH, '%2F');\n  value = StringWrapper.replaceAll(value, REGEXP_OPEN_PARENT, '%28');\n  value = StringWrapper.replaceAll(value, REGEXP_CLOSE_PARENT, '%29');\n  value = StringWrapper.replaceAll(value, REGEXP_SEMICOLON, '%3B');\n\n  return value;\n}\n\nlet REGEXP_ENC_SEMICOLON = /%3B/ig;\nlet REGEXP_ENC_CLOSE_PARENT = /%29/ig;\nlet REGEXP_ENC_OPEN_PARENT = /%28/ig;\nlet REGEXP_ENC_SLASH = /%2F/ig;\nlet REGEXP_ENC_PERCENT = /%25/ig;\n\nfunction decodeDynamicSegment(value: string): string {\n  if (isBlank(value)) {\n    return null;\n  }\n\n  value = StringWrapper.replaceAll(value, REGEXP_ENC_SEMICOLON, ';');\n  value = StringWrapper.replaceAll(value, REGEXP_ENC_CLOSE_PARENT, ')');\n  value = StringWrapper.replaceAll(value, REGEXP_ENC_OPEN_PARENT, '(');\n  value = StringWrapper.replaceAll(value, REGEXP_ENC_SLASH, '/');\n  value = StringWrapper.replaceAll(value, REGEXP_ENC_PERCENT, '%');\n\n  return value;\n}\n"]}