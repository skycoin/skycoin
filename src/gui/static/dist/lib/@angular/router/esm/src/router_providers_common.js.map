{"version":3,"file":"router_providers_common.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/router_providers_common.ts"],"names":[],"mappings":"OAIS,EAAc,iBAAiB,EAAC,MAAM,eAAe;OACvD,EAAC,gBAAgB,EAAE,oBAAoB,EAAE,QAAQ,EAAC,MAAM,iBAAiB;OACzE,EAAC,MAAM,EAAE,eAAe,EAAC,MAAM,UAAU;OACzC,EAAC,mBAAmB,EAAE,0BAA0B,EAAC,MAAM,yBAAyB;OAChF,EAAC,cAAc,EAAC,MAAM,eAAe;OACrC,EAAC,aAAa,EAAC,MAAM,eAAe;AAE3C;;GAEG;AACH,OAAO,MAAM,uBAAuB,GAA4B;IAC9D,eAAe;IACf,qBAAqB,CAAC,EAAC,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,0BAA0B,EAAC;IAC1F,qBAAqB,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,oBAAoB,EAAC,EAAE,QAAQ;IAC3F,qBAAqB,CAAC;QACpB,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,aAAa;QACzB,IAAI,EAAE,kBAAkB,CACpB,CAAC,cAAc,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,eAAe,EAAE,QAAQ,CAAC;KACxF;CACF,CAAC;AAEF,uBAAuB,GAAmB,EAAE,iBAAoC,EACzD,aAAkC,EAAE,eAAgC,EACpE,QAAkB;IACvC,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,IAAI,aAAa,CAAC,2DAA2D,CAAC,CAAC;IACvF,CAAC;IACD,wCAAwC;IACxC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,iBAAiB,EAAE,aAAa,EAC7D,eAAe,EAAE,QAAQ,CAAC,CAAC;IACnD,GAAG,CAAC,uBAAuB,CAAC,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;IACpD,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {OpaqueToken, ComponentResolver} from '@angular/core';\nimport {LocationStrategy, PathLocationStrategy, Location} from '@angular/common';\nimport {Router, RouterOutletMap} from './router';\nimport {RouterUrlSerializer, DefaultRouterUrlSerializer} from './router_url_serializer';\nimport {ApplicationRef} from '@angular/core';\nimport {BaseException} from '@angular/core';\n\n/**\n * The Platform agnostic ROUTER PROVIDERS\n */\nexport const ROUTER_PROVIDERS_COMMON: any[] = /*@ts2dart_const*/[\n  RouterOutletMap,\n  /*@ts2dart_Provider*/ {provide: RouterUrlSerializer, useClass: DefaultRouterUrlSerializer},\n  /*@ts2dart_Provider*/ {provide: LocationStrategy, useClass: PathLocationStrategy}, Location,\n  /*@ts2dart_Provider*/ {\n    provide: Router,\n    useFactory: routerFactory,\n    deps: /*@ts2dart_const*/\n        [ApplicationRef, ComponentResolver, RouterUrlSerializer, RouterOutletMap, Location],\n  },\n];\n\nfunction routerFactory(app: ApplicationRef, componentResolver: ComponentResolver,\n                       urlSerializer: RouterUrlSerializer, routerOutletMap: RouterOutletMap,\n                       location: Location): Router {\n  if (app.componentTypes.length == 0) {\n    throw new BaseException(\"Bootstrap at least one component before injecting Router.\");\n  }\n  // TODO: vsavkin this should not be null\n  let router = new Router(null, app.componentTypes[0], componentResolver, urlSerializer,\n                          routerOutletMap, location);\n  app.registerDisposeListener(() => router.dispose());\n  return router;\n}\n"]}