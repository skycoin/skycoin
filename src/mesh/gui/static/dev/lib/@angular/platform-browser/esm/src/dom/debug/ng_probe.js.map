{"version":3,"file":"ng_probe.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":"OAIS,EAEP,YAAY,EAEZ,YAAY,EACZ,MAAM,EACN,cAAc,EACf,MAAM,eAAe;OACf,EAAC,oBAAoB,EAAC,MAAM,uBAAuB;OACnD,EAAC,iBAAiB,EAAC,MAAM,mBAAmB;OAC5C,EAAC,MAAM,EAAC,MAAM,gBAAgB;OAC9B,EAAC,eAAe,EAAC,MAAM,iBAAiB;AAG/C,MAAM,WAAW,GAAsB,EAAC,gBAAgB,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;AAE5F,MAAM,mBAAmB,GAAG,UAAU,CAAC;AACvC,MAAM,uBAAuB,GAAG,eAAe,CAAC;AAEhD;;;;GAIG;AACH,qCAAqC,OAAO;IAC1C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC;AAED,wCAAwC,YAAY;IAClD,EAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC;AAED,6BAA6B,YAAY;IACvC,MAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IACjE,MAAM,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;IAC5D,MAAM,CAAC,IAAI,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC;AAED;;GAEG;AACH,OAAO,MAAM,uBAAuB,GAA4B;IAC9D,qBAAqB,CAAC;QACpB,OAAO,EAAE,YAAY;QACrB,UAAU,EAAE,8BAA8B;QAC1C,IAAI,EAAE,CAAC,eAAe,CAAC;KACxB;CACF,CAAC;AAEF,OAAO,MAAM,iCAAiC,GAA4B;IACxE,qBAAqB,CAAC;QACpB,OAAO,EAAE,YAAY;QACrB,UAAU,EAAE,mBAAmB;QAC/B,IAAI,EAAE,CAAC,eAAe,CAAC;KACxB;CACF,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  DebugNode,\n  getDebugNode,\n  Provider,\n  RootRenderer,\n  NgZone,\n  ApplicationRef\n} from '@angular/core';\nimport {DebugDomRootRenderer} from '../../../core_private';\nimport {assertionsEnabled} from '../../facade/lang';\nimport {getDOM} from '../dom_adapter';\nimport {DomRootRenderer} from '../dom_renderer';\n\n\nconst CORE_TOKENS = /*@ts2dart_const*/ {'ApplicationRef': ApplicationRef, 'NgZone': NgZone};\n\nconst INSPECT_GLOBAL_NAME = 'ng.probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element): DebugNode {\n  return getDebugNode(element);\n}\n\nfunction _createConditionalRootRenderer(rootRenderer) {\n  if (assertionsEnabled()) {\n    return _createRootRenderer(rootRenderer);\n  }\n  return rootRenderer;\n}\n\nfunction _createRootRenderer(rootRenderer) {\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, CORE_TOKENS);\n  return new DebugDomRootRenderer(rootRenderer);\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: any[] = /*@ts2dart_const*/[\n  /*@ts2dart_Provider*/ {\n    provide: RootRenderer,\n    useFactory: _createConditionalRootRenderer,\n    deps: [DomRootRenderer]\n  }\n];\n\nexport const ELEMENT_PROBE_PROVIDERS_PROD_MODE: any[] = /*@ts2dart_const*/[\n  /*@ts2dart_Provider*/ {\n    provide: RootRenderer,\n    useFactory: _createRootRenderer,\n    deps: [DomRootRenderer]\n  }\n];\n"]}