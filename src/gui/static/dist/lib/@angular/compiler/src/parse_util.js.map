{"version":3,"file":"parse_util.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/parse_util.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  export class ParseLocation {\n  constructor(public file: ParseSourceFile, public offset: number, public line: number,\n              public col: number) {}\n\n  toString(): string { return `${this.file.url}@${this.line}:${this.col}`; }\n}\n\nexport class ParseSourceFile {\n  constructor(public content: string, public url: string) {}\n}\n\nexport class ParseSourceSpan {\n  constructor(public start: ParseLocation, public end: ParseLocation) {}\n\n  toString(): string {\n    return this.start.file.content.substring(this.start.offset, this.end.offset);\n  }\n}\n\nexport enum ParseErrorLevel {\n  WARNING,\n  FATAL\n}\n\nexport abstract class ParseError {\n  constructor(public span: ParseSourceSpan, public msg: string,\n              public level: ParseErrorLevel = ParseErrorLevel.FATAL) {}\n\n  toString(): string {\n    var source = this.span.start.file.content;\n    var ctxStart = this.span.start.offset;\n    if (ctxStart > source.length - 1) {\n      ctxStart = source.length - 1;\n    }\n    var ctxEnd = ctxStart;\n    var ctxLen = 0;\n    var ctxLines = 0;\n\n    while (ctxLen < 100 && ctxStart > 0) {\n      ctxStart--;\n      ctxLen++;\n      if (source[ctxStart] == \"\\n\") {\n        if (++ctxLines == 3) {\n          break;\n        }\n      }\n    }\n\n    ctxLen = 0;\n    ctxLines = 0;\n    while (ctxLen < 100 && ctxEnd < source.length - 1) {\n      ctxEnd++;\n      ctxLen++;\n      if (source[ctxEnd] == \"\\n\") {\n        if (++ctxLines == 3) {\n          break;\n        }\n      }\n    }\n\n    let context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n                  source.substring(this.span.start.offset, ctxEnd + 1);\n\n    return `${this.msg} (\"${context}\"): ${this.span.start}`;\n  }\n}\n"]}