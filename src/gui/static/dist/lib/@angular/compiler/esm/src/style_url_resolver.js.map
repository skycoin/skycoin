{"version":3,"file":"style_url_resolver.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/style_url_resolver.ts"],"names":[],"mappings":"OAOO,EAAC,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAC,MAAM,oBAAoB;AAGnF;IACE,YAAmB,KAAa,EAAS,SAAmB;QAAzC,UAAK,GAAL,KAAK,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;AAClE,CAAC;AAED,qCAAqC,GAAW;IAC9C,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IACpE,IAAI,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IAClE,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;AAC1F,CAAC;AAED;;;GAGG;AACH,iCAAiC,QAAqB,EAAE,OAAe,EACtC,OAAe;IAC9C,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,eAAe,GAAG,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;QAC5E,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,sEAAsE;YACtE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC;QACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,gBAAgB,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;AAC1D,CAAC;AAED,IAAI,YAAY,GAAG,iEAAiE,CAAC;AACrF,0DAA0D;AAC1D,uDAAuD;AACvD,IAAI,gBAAgB,GAAG,sBAAsB,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  // Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {RegExpWrapper, StringWrapper, isPresent, isBlank} from '../src/facade/lang';\nimport {UrlResolver} from './url_resolver';\n\nexport class StyleWithImports {\n  constructor(public style: string, public styleUrls: string[]) {}\n}\n\nexport function isStyleUrlResolvable(url: string): boolean {\n  if (isBlank(url) || url.length === 0 || url[0] == '/') return false;\n  var schemeMatch = RegExpWrapper.firstMatch(_urlWithSchemaRe, url);\n  return isBlank(schemeMatch) || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n\n/**\n * Rewrites stylesheets by resolving and removing the @import urls that\n * are either relative or don't have a `package:` scheme\n */\nexport function extractStyleUrls(resolver: UrlResolver, baseUrl: string,\n                                 cssText: string): StyleWithImports {\n  var foundUrls = [];\n  var modifiedCssText = StringWrapper.replaceAllMapped(cssText, _cssImportRe, (m) => {\n    var url = isPresent(m[1]) ? m[1] : m[2];\n    if (!isStyleUrlResolvable(url)) {\n      // Do not attempt to resolve non-package absolute URLs with URI scheme\n      return m[0];\n    }\n    foundUrls.push(resolver.resolve(baseUrl, url));\n    return '';\n  });\n  return new StyleWithImports(modifiedCssText, foundUrls);\n}\n\nvar _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n// TODO: can't use /^[^:/?#.]+:/g due to clang-format bug:\n//       https://github.com/angular/angular/issues/4596\nvar _urlWithSchemaRe = /^([a-zA-Z\\-\\+\\.]+):/g;\n"]}