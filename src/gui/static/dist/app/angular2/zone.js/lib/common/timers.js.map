{"version":3,"sources":["app/angular2/zone.js/lib/common/timers.ts"],"names":[],"mappings":"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","file":"timers.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {patchMethod} from './utils';\n\ninterface TimerOptions extends TaskData {\n  handleId: number;\n  args: any[];\n}\n\nexport function patchTimer(window: any, setName: string, cancelName: string, nameSuffix: string) {\n  var setNative = null;\n  var clearNative = null;\n  setName += nameSuffix;\n  cancelName += nameSuffix;\n\n  const tasksByHandleId: {[id: number]: Task} = {};\n\n  function scheduleTask(task: Task) {\n    const data = <TimerOptions>task.data;\n    data.args[0] = function() {\n      task.invoke.apply(this, arguments);\n      delete tasksByHandleId[data.handleId];\n    };\n    data.handleId = setNative.apply(window, data.args);\n    tasksByHandleId[data.handleId] = task;\n    return task;\n  }\n\n  function clearTask(task: Task) {\n    delete tasksByHandleId[(<TimerOptions>task.data).handleId];\n    return clearNative((<TimerOptions>task.data).handleId);\n  }\n\n  setNative =\n      patchMethod(window, setName, (delegate: Function) => function(self: any, args: any[]) {\n        if (typeof args[0] === 'function') {\n          var zone = Zone.current;\n          var options: TimerOptions = {\n            handleId: null,\n            isPeriodic: nameSuffix === 'Interval',\n            delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n            args: args\n          };\n          var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n          if (!task) {\n            return task;\n          }\n          // Node.js must additionally support the ref and unref functions.\n          var handle = (<TimerOptions>task.data).handleId;\n          if ((<any>handle).ref && (<any>handle).unref) {\n            (<any>task).ref = (<any>handle).ref.bind(handle);\n            (<any>task).unref = (<any>handle).unref.bind(handle);\n          }\n          return task;\n        } else {\n          // cause an error by calling it directly.\n          return delegate.apply(window, args);\n        }\n      });\n\n  clearNative =\n      patchMethod(window, cancelName, (delegate: Function) => function(self: any, args: any[]) {\n        var task: Task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n        if (task && typeof task.type === 'string') {\n          if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\n            // Do not cancel already canceled functions\n            task.zone.cancelTask(task);\n          }\n        } else {\n          // cause an error by calling it directly.\n          delegate.apply(window, args);\n        }\n      });\n}\n"]}