{"version":3,"file":"base_wrapped_exception.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/facade/base_wrapped_exception.ts"],"names":[],"mappings":";;;;;;AAIE;;;;EAIC;AACH;IAA0C,wCAAK;IAC7C,8BAAY,OAAe;QAAI,kBAAM,OAAO,CAAC,CAAC;IAAC,CAAC;IAEhD,sBAAI,gDAAc;aAAlB,cAA+B,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAC3C,sBAAI,8CAAY;aAAhB,cAA0B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IACxC,sBAAI,mDAAiB;aAArB,cAA+B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAC7C,sBAAI,+CAAa;aAAjB,cAA2B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IACzC,sBAAI,yCAAO;aAAX,cAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IACnC,sBAAI,yCAAO;aAAX,cAAwB,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACtC,2BAAC;AAAD,CAAC,AATD,CAA0C,KAAK,GAS9C;AATY,4BAAoB,uBAShC,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  /**\n * A base class for the WrappedException that can be used to identify\n * a WrappedException from ExceptionHandler without adding circular\n * dependency.\n */\nexport class BaseWrappedException extends Error {\n  constructor(message: string) { super(message); }\n\n  get wrapperMessage(): string { return ''; }\n  get wrapperStack(): any { return null; }\n  get originalException(): any { return null; }\n  get originalStack(): any { return null; }\n  get context(): any { return null; }\n  get message(): string { return ''; }\n}\n"]}