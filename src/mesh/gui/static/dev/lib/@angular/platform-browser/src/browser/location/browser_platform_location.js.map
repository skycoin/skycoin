{"version":3,"file":"browser_platform_location.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/browser/location/browser_platform_location.ts"],"names":[],"mappings":";;;;;;AAIE,qBAAyB,eAAe,CAAC,CAAA;AAE3C,uBAAkD,iBAAiB,CAAC,CAAA;AACpE,4BAAqB,uBAAuB,CAAC,CAAA;AAC7C;IAA6C,2CAAgB;IAI3D;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0FAA0F;IAC1F,gBAAgB;IAChB,uCAAK,GAAL;QACE,IAAI,CAAC,SAAS,GAAG,oBAAM,EAAE,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,oBAAM,EAAE,CAAC,UAAU,EAAE,CAAC;IACxC,CAAC;IAGD,sBAAI,6CAAQ;QADZ,gBAAgB;aAChB,cAA2B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAEnD,oDAAkB,GAAlB,cAA+B,MAAM,CAAC,oBAAM,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAE/D,4CAAU,GAAV,UAAW,EAAqB;QAC9B,oBAAM,EAAE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,8CAAY,GAAZ,UAAa,EAAqB;QAChC,oBAAM,EAAE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IAED,sBAAI,6CAAQ;aAAZ,cAAyB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;aAG1D,UAAa,OAAe,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC;;;OAHV;IAC1D,sBAAI,2CAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IACtD,sBAAI,yCAAI;aAAR,cAAqB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAGlD,2CAAS,GAAT,UAAU,KAAU,EAAE,KAAa,EAAE,GAAW;QAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,8CAAY,GAAZ,UAAa,KAAU,EAAE,KAAa,EAAE,GAAW;QACjD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,yCAAO,GAAP,cAAkB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAE5C,sCAAI,GAAJ,cAAe,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACjC,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACK,sCAAc,GAA2D,EAC/E,CAAC;IACF,8BAAC;AAAD,CAAC,AAlDD,CAA6C,yBAAgB,GAkD5D;AAlDY,+BAAuB,0BAkDnC,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable} from '@angular/core';\nimport {History, Location} from '../../../src/facade/browser';\nimport {UrlChangeListener, PlatformLocation} from '@angular/common';\nimport {getDOM} from '../../dom/dom_adapter';\nexport class BrowserPlatformLocation extends PlatformLocation {\n  private _location: Location;\n  private _history: History;\n\n  constructor() {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    this._location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  /** @internal */\n  get location(): Location { return this._location; }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(); }\n\n  onPopState(fn: UrlChangeListener): void {\n    getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: UrlChangeListener): void {\n    getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n  }\n\n  get pathname(): string { return this._location.pathname; }\n  get search(): string { return this._location.search; }\n  get hash(): string { return this._location.hash; }\n  set pathname(newPath: string) { this._location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    this._history.pushState(state, title, url);\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    this._history.replaceState(state, title, url);\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n];\n}\n"]}