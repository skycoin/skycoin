{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../modules/@angular/http/src/interfaces.ts"],"names":[],"mappings":";AASA;;;;;GAKG;AACH;IAAA;IAA+F,CAAC;IAAD,wBAAC;AAAD,CAAC,AAAhG,IAAgG;AAA1E,yBAAiB,oBAAyD,CAAA;AAEhG;;GAEG;AACH;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC,AAJD,IAIC;AAJqB,kBAAU,aAI/B,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {ReadyState, RequestMethod, ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {Request} from './static_request';\nimport {URLSearchParams} from './url_search_params';\n\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n */\nexport abstract class ConnectionBackend { abstract createConnection(request: any): Connection; }\n\n/**\n * Abstract class from which real connections are derived.\n */\nexport abstract class Connection {\n  readyState: ReadyState;\n  request: Request;\n  response: any;  // TODO: generic of <Response>;\n}\n\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n */\nexport interface RequestOptionsArgs {\n  url?: string;\n  method?: string | RequestMethod;\n  search?: string | URLSearchParams;\n  headers?: Headers;\n  // TODO: Support Blob, ArrayBuffer, JSON, URLSearchParams, FormData\n  body?: string;\n}\n\n/**\n * Required structure when constructing new Request();\n */\nexport interface RequestArgs extends RequestOptionsArgs { url: string; }\n\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n */\nexport type ResponseOptionsArgs = {\n  // TODO: Support Blob, ArrayBuffer, JSON\n  body?: string | Object | FormData;\n  status?: number;\n  statusText?: string;\n  headers?: Headers;\n  type?: ResponseType;\n  url?: string;\n}\n"]}