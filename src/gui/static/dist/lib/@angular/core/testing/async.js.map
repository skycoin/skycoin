{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/async.ts"],"names":[],"mappings":";AAIE;;;;;;;;;;;;;;EAcC;AACH,eAAsB,EAAY;IAChC,MAAM,CAAC;QACL,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,cAAc,EAAE,YAAY;YACpD,IAAI,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAClD,IAAI,YAAY,GAAG,IAAI,iBAAiB,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;YAC/E,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAA;AACH,CAAC;AATe,aAAK,QASpB,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  /**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n */\nexport function async(fn: Function): Function {\n  return () => {\n    return new Promise<void>((finishCallback, failCallback) => {\n      var AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n      var testZoneSpec = new AsyncTestZoneSpec(finishCallback, failCallback, 'test');\n      var testZone = Zone.current.fork(testZoneSpec);\n      return testZone.run(fn);\n    });\n  }\n}\n"]}