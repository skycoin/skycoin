{"version":3,"file":"view.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/view.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ListWrapper,\n  StringMapWrapper,\n} from '../../src/facade/collection';\n\nimport {AppElement} from './element';\nimport {\n  assertionsEnabled,\n  isPresent,\n  isBlank,\n  Type,\n  isArray,\n  isNumber,\n  stringify,\n  isPrimitive,\n  isString\n} from '../../src/facade/lang';\n\nimport {ObservableWrapper} from '../../src/facade/async';\nimport {Renderer, RootRenderer, RenderComponentType, RenderDebugInfo} from '../render/api';\nimport {ViewRef_} from './view_ref';\n\nimport {ViewType} from './view_type';\nimport {\n  ViewUtils,\n  flattenNestedViewRenderNodes,\n  ensureSlotCount,\n  arrayLooseIdentical,\n  mapLooseIdentical\n} from './view_utils';\nimport {\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorState,\n} from '../change_detection/change_detection';\nimport {wtfCreateScope, wtfLeave, WtfScopeFn} from '../profile/profile';\nimport {\n  ExpressionChangedAfterItHasBeenCheckedException,\n  ViewDestroyedException,\n  ViewWrappedException\n} from './exceptions';\nimport {StaticNodeDebugInfo, DebugContext} from './debug_context';\nimport {ElementInjector} from './element_injector';\nimport {Injector} from '../di/injector';\n\nvar _scope_check: WtfScopeFn = wtfCreateScope(`AppView#check(ascii id)`);\n\n/**\n * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n *\n */\nexport abstract class AppView<T> {\n  ref: ViewRef_<T>;\n  rootNodesOrAppElements: any[];\n  allNodes: any[];\n  disposables: Function[];\n  subscriptions: any[];\n  contentChildren: AppView<any>[] = [];\n  viewChildren: AppView<any>[] = [];\n  viewContainerElement: AppElement = null;\n\n  // The names of the below fields must be kept in sync with codegen_name_util.ts or\n  // change detection will fail.\n  cdState: ChangeDetectorState = ChangeDetectorState.NeverChecked;\n\n  projectableNodes: Array<any | any[]>;\n\n  destroyed: boolean = false;\n\n  renderer: Renderer;\n\n  private _hasExternalHostElement: boolean;\n\n  public context: T;\n\n  constructor(public clazz: any, public componentType: RenderComponentType, public type: ViewType,\n              public viewUtils: ViewUtils, public parentInjector: Injector,\n              public declarationAppElement: AppElement, public cdMode: ChangeDetectionStrategy) {\n    this.ref = new ViewRef_(this);\n    if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n      this.renderer = viewUtils.renderComponent(componentType);\n    } else {\n      this.renderer = declarationAppElement.parentView.renderer;\n    }\n  }\n\n  create(context: T, givenProjectableNodes: Array<any | any[]>,\n         rootSelectorOrNode: string | any): AppElement {\n    this.context = context;\n    var projectableNodes;\n    switch (this.type) {\n      case ViewType.COMPONENT:\n        projectableNodes = ensureSlotCount(givenProjectableNodes, this.componentType.slotCount);\n        break;\n      case ViewType.EMBEDDED:\n        projectableNodes = this.declarationAppElement.parentView.projectableNodes;\n        break;\n      case ViewType.HOST:\n        // Note: Don't ensure the slot count for the projectableNodes as we store\n        // them only for the contained component view (which will later check the slot count...)\n        projectableNodes = givenProjectableNodes;\n        break;\n    }\n    this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n    this.projectableNodes = projectableNodes;\n    return this.createInternal(rootSelectorOrNode);\n  }\n\n  /**\n   * Overwritten by implementations.\n   * Returns the AppElement for the host element for ViewType.HOST.\n   */\n  createInternal(rootSelectorOrNode: string | any): AppElement { return null; }\n\n  init(rootNodesOrAppElements: any[], allNodes: any[], disposables: Function[],\n       subscriptions: any[]) {\n    this.rootNodesOrAppElements = rootNodesOrAppElements;\n    this.allNodes = allNodes;\n    this.disposables = disposables;\n    this.subscriptions = subscriptions;\n    if (this.type === ViewType.COMPONENT) {\n      // Note: the render nodes have been attached to their host element\n      // in the ViewFactory already.\n      this.declarationAppElement.parentView.viewChildren.push(this);\n      this.dirtyParentQueriesInternal();\n    }\n  }\n\n  selectOrCreateHostElement(elementName: string, rootSelectorOrNode: string | any,\n                            debugInfo: RenderDebugInfo): any {\n    var hostElement;\n    if (isPresent(rootSelectorOrNode)) {\n      hostElement = this.renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n    } else {\n      hostElement = this.renderer.createElement(null, elementName, debugInfo);\n    }\n    return hostElement;\n  }\n\n  injectorGet(token: any, nodeIndex: number, notFoundResult: any): any {\n    return this.injectorGetInternal(token, nodeIndex, notFoundResult);\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  injectorGetInternal(token: any, nodeIndex: number, notFoundResult: any): any {\n    return notFoundResult;\n  }\n\n  injector(nodeIndex: number): Injector {\n    if (isPresent(nodeIndex)) {\n      return new ElementInjector(this, nodeIndex);\n    } else {\n      return this.parentInjector;\n    }\n  }\n\n  destroy() {\n    if (this._hasExternalHostElement) {\n      this.renderer.detachView(this.flatRootNodes);\n    } else if (isPresent(this.viewContainerElement)) {\n      this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n    }\n    this._destroyRecurse();\n  }\n\n  private _destroyRecurse() {\n    if (this.destroyed) {\n      return;\n    }\n    var children = this.contentChildren;\n    for (var i = 0; i < children.length; i++) {\n      children[i]._destroyRecurse();\n    }\n    children = this.viewChildren;\n    for (var i = 0; i < children.length; i++) {\n      children[i]._destroyRecurse();\n    }\n    this.destroyLocal();\n\n    this.destroyed = true;\n  }\n\n  destroyLocal() {\n    var hostElement =\n        this.type === ViewType.COMPONENT ? this.declarationAppElement.nativeElement : null;\n    for (var i = 0; i < this.disposables.length; i++) {\n      this.disposables[i]();\n    }\n    for (var i = 0; i < this.subscriptions.length; i++) {\n      ObservableWrapper.dispose(this.subscriptions[i]);\n    }\n    this.destroyInternal();\n    if (this._hasExternalHostElement) {\n      this.renderer.detachView(this.flatRootNodes);\n    } else if (isPresent(this.viewContainerElement)) {\n      this.viewContainerElement.detachView(this.viewContainerElement.nestedViews.indexOf(this));\n    } else {\n      this.dirtyParentQueriesInternal();\n    }\n    this.renderer.destroyView(hostElement, this.allNodes);\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  destroyInternal(): void {}\n\n  get changeDetectorRef(): ChangeDetectorRef { return this.ref; }\n\n  get parent(): AppView<any> {\n    return isPresent(this.declarationAppElement) ? this.declarationAppElement.parentView : null;\n  }\n\n  get flatRootNodes(): any[] { return flattenNestedViewRenderNodes(this.rootNodesOrAppElements); }\n\n  get lastRootNode(): any {\n    var lastNode = this.rootNodesOrAppElements.length > 0 ?\n                       this.rootNodesOrAppElements[this.rootNodesOrAppElements.length - 1] :\n                       null;\n    return _findLastRenderNode(lastNode);\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  dirtyParentQueriesInternal(): void {}\n\n  detectChanges(throwOnChange: boolean): void {\n    var s = _scope_check(this.clazz);\n    if (this.cdMode === ChangeDetectionStrategy.Detached ||\n        this.cdMode === ChangeDetectionStrategy.Checked ||\n        this.cdState === ChangeDetectorState.Errored)\n      return;\n    if (this.destroyed) {\n      this.throwDestroyedError('detectChanges');\n    }\n    this.detectChangesInternal(throwOnChange);\n    if (this.cdMode === ChangeDetectionStrategy.CheckOnce)\n      this.cdMode = ChangeDetectionStrategy.Checked;\n\n    this.cdState = ChangeDetectorState.CheckedBefore;\n    wtfLeave(s);\n  }\n\n  /**\n   * Overwritten by implementations\n   */\n  detectChangesInternal(throwOnChange: boolean): void {\n    this.detectContentChildrenChanges(throwOnChange);\n    this.detectViewChildrenChanges(throwOnChange);\n  }\n\n  detectContentChildrenChanges(throwOnChange: boolean) {\n    for (var i = 0; i < this.contentChildren.length; ++i) {\n      this.contentChildren[i].detectChanges(throwOnChange);\n    }\n  }\n\n  detectViewChildrenChanges(throwOnChange: boolean) {\n    for (var i = 0; i < this.viewChildren.length; ++i) {\n      this.viewChildren[i].detectChanges(throwOnChange);\n    }\n  }\n\n  addToContentChildren(renderAppElement: AppElement): void {\n    renderAppElement.parentView.contentChildren.push(this);\n    this.viewContainerElement = renderAppElement;\n    this.dirtyParentQueriesInternal();\n  }\n\n  removeFromContentChildren(renderAppElement: AppElement): void {\n    ListWrapper.remove(renderAppElement.parentView.contentChildren, this);\n    this.dirtyParentQueriesInternal();\n    this.viewContainerElement = null;\n  }\n\n  markAsCheckOnce(): void { this.cdMode = ChangeDetectionStrategy.CheckOnce; }\n\n  markPathToRootAsCheckOnce(): void {\n    let c: AppView<any> = this;\n    while (isPresent(c) && c.cdMode !== ChangeDetectionStrategy.Detached) {\n      if (c.cdMode === ChangeDetectionStrategy.Checked) {\n        c.cdMode = ChangeDetectionStrategy.CheckOnce;\n      }\n      let parentEl =\n          c.type === ViewType.COMPONENT ? c.declarationAppElement : c.viewContainerElement;\n      c = isPresent(parentEl) ? parentEl.parentView : null;\n    }\n  }\n\n  eventHandler(cb: Function): Function { return cb; }\n\n  throwDestroyedError(details: string): void { throw new ViewDestroyedException(details); }\n}\n\nexport class DebugAppView<T> extends AppView<T> {\n  private _currentDebugContext: DebugContext = null;\n\n  constructor(clazz: any, componentType: RenderComponentType, type: ViewType, viewUtils: ViewUtils,\n              parentInjector: Injector, declarationAppElement: AppElement,\n              cdMode: ChangeDetectionStrategy, public staticNodeDebugInfos: StaticNodeDebugInfo[]) {\n    super(clazz, componentType, type, viewUtils, parentInjector, declarationAppElement, cdMode);\n  }\n\n  create(context: T, givenProjectableNodes: Array<any | any[]>,\n         rootSelectorOrNode: string | any): AppElement {\n    this._resetDebug();\n    try {\n      return super.create(context, givenProjectableNodes, rootSelectorOrNode);\n    } catch (e) {\n      this._rethrowWithContext(e, e.stack);\n      throw e;\n    }\n  }\n\n  injectorGet(token: any, nodeIndex: number, notFoundResult: any): any {\n    this._resetDebug();\n    try {\n      return super.injectorGet(token, nodeIndex, notFoundResult);\n    } catch (e) {\n      this._rethrowWithContext(e, e.stack);\n      throw e;\n    }\n  }\n\n  destroyLocal() {\n    this._resetDebug();\n    try {\n      super.destroyLocal();\n    } catch (e) {\n      this._rethrowWithContext(e, e.stack);\n      throw e;\n    }\n  }\n\n  detectChanges(throwOnChange: boolean): void {\n    this._resetDebug();\n    try {\n      super.detectChanges(throwOnChange);\n    } catch (e) {\n      this._rethrowWithContext(e, e.stack);\n      throw e;\n    }\n  }\n\n  private _resetDebug() { this._currentDebugContext = null; }\n\n  debug(nodeIndex: number, rowNum: number, colNum: number): DebugContext {\n    return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n  }\n\n  private _rethrowWithContext(e: any, stack: any) {\n    if (!(e instanceof ViewWrappedException)) {\n      if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedException)) {\n        this.cdState = ChangeDetectorState.Errored;\n      }\n      if (isPresent(this._currentDebugContext)) {\n        throw new ViewWrappedException(e, stack, this._currentDebugContext);\n      }\n    }\n  }\n\n  eventHandler(cb: Function): Function {\n    var superHandler = super.eventHandler(cb);\n    return (event) => {\n      this._resetDebug();\n      try {\n        return superHandler(event);\n      } catch (e) {\n        this._rethrowWithContext(e, e.stack);\n        throw e;\n      }\n    };\n  }\n}\n\nfunction _findLastRenderNode(node: any): any {\n  var lastNode;\n  if (node instanceof AppElement) {\n    var appEl = <AppElement>node;\n    lastNode = appEl.nativeElement;\n    if (isPresent(appEl.nestedViews)) {\n      // Note: Views might have no root nodes at all!\n      for (var i = appEl.nestedViews.length - 1; i >= 0; i--) {\n        var nestedView = appEl.nestedViews[i];\n        if (nestedView.rootNodesOrAppElements.length > 0) {\n          lastNode = _findLastRenderNode(\n              nestedView.rootNodesOrAppElements[nestedView.rootNodesOrAppElements.length - 1]);\n        }\n      }\n    }\n  } else {\n    lastNode = node;\n  }\n  return lastNode;\n}\n"]}