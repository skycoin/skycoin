{"version":3,"file":"class_builder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/class_builder.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,KAAK,CAAC,MAAM,cAAc;AAEjC;;GAEG;AACH,gCAAgC,MAM/B;IACC,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;IAC3C,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACvF,IAAM,OAAO,GACT,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClG,IAAM,IAAI,GACN,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,UAAU,IAAI,EAAE,EAAE,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAE/F,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAClB,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAClF,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;AAC9B,CAAC;AAED,iCAAiC,QAA4B;IAC3D,MAAM,CAAC;QACL,MAAM,EAAE,MAAA,EAAE,EAAC,MAAM,WAAI,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,IAAI,EAAE,EAApB,CAAoB,CAAC,CAAC;QACnE,OAAO,EAAE,MAAA,EAAE,EAAC,MAAM,WAAI,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,IAAI,EAAE,EAArB,CAAqB,CAAC,CAAC;QACrE,OAAO,EAAE,MAAA,EAAE,EAAC,MAAM,WAAI,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,IAAI,EAAE,EAArB,CAAqB,CAAC,CAAC;QACrE,SAAS,EAAE,MAAA,EAAE,EAAC,MAAM,WAAI,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,SAAS,IAAI,EAAE,EAAvB,CAAuB,CAAC,CAAC;KAC1E,CAAC;;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output_ast';\n\n/**\n * Create a new class stmts based on the given data.\n */\nexport function createClassStmt(config: {\n  name: string,\n  parent?: o.Expression,\n  parentArgs?: o.Expression[],\n  ctorParams?: o.FnParam[],\n  builders: ClassBuilderPart | ClassBuilderPart[], modifiers?: o.StmtModifier[]\n}): o.ClassStmt {\n  const parentArgs = config.parentArgs || [];\n  const superCtorStmts = config.parent ? [o.SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n  const builder =\n      concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n  const ctor =\n      new o.ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n\n  return new o.ClassStmt(\n      config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods,\n      config.modifiers || []);\n}\n\nfunction concatClassBuilderParts(builders: ClassBuilderPart[]) {\n  return {\n    fields: [].concat(...builders.map(builder => builder.fields || [])),\n    methods: [].concat(...builders.map(builder => builder.methods || [])),\n    getters: [].concat(...builders.map(builder => builder.getters || [])),\n    ctorStmts: [].concat(...builders.map(builder => builder.ctorStmts || [])),\n  };\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilderPart {\n  fields?: o.ClassField[];\n  methods?: o.ClassMethod[];\n  getters?: o.ClassGetter[];\n  ctorStmts?: o.Statement[];\n}\n\n/**\n * Collects data for a generated class.\n */\nexport interface ClassBuilder {\n  fields: o.ClassField[];\n  methods: o.ClassMethod[];\n  getters: o.ClassGetter[];\n  ctorStmts: o.Statement[];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}