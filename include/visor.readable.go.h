typedef struct{
    BOOL Confirmed;
    BOOL Unconfirmed;
    GoUint64_ Height;
    GoUint64_ BlockSeq;
    BOOL Unknown;
} visor__TransactionStatus;
typedef struct{
    GoString_ Hash;
    GoString_ Address;
    GoString_ Coins;
    GoUint64_ Hours;
} visor__ReadableTransactionOutput;
typedef struct{
    GoString_ Hash;
    GoString_ Address;
    GoString_ Coins;
    GoUint64_ Hours;
} visor__ReadableTransactionInput;
typedef struct{
    GoString_ Hash;
    GoUint64_ Time;
    GoUint64_ BkSeq;
    GoString_ SourceTransaction;
    GoString_ Address;
    GoString_ Coins;
    GoUint64_ Hours;
    GoUint64_ CalculatedHours;
} visor__ReadableOutput;
typedef GoSlice_  visor__ReadableOutputs;
typedef struct{
    GoUint32_ Length;
    GoUint8_ Type;
    GoString_ Hash;
    GoString_ InnerHash;
    GoUint64_ Timestamp;
    GoSlice_  Sigs;
    GoSlice_  In;
    GoSlice_  Out;
} visor__ReadableTransaction;
typedef struct{
    GoUint64_ BkSeq;
    GoString_ BlockHash;
    GoString_ PreviousBlockHash;
    GoUint64_ Time;
    GoUint64_ Fee;
    GoUint32_ Version;
    GoString_ BodyHash;
} visor__ReadableBlockHeader;
typedef struct{
    GoSlice_  Transactions;
} visor__ReadableBlockBody;
typedef struct{
    visor__ReadableBlockHeader Head;
    visor__ReadableBlockBody Body;
    GoInt_ Size;
} visor__ReadableBlock;
typedef struct{
    GoSlice_  Blocks;
} visor__ReadableBlocks;
typedef struct{
    GoString_ Hash;
    GoString_ SourceTransaction;
    GoString_ Address;
    GoString_ Coins;
    GoUint64_ Hours;
} visor__TransactionOutputJSON;
typedef struct{
    GoString_ Hash;
    GoString_ InnerHash;
    GoSlice_  Sigs;
    GoSlice_  In;
    GoSlice_  Out;
} visor__TransactionJSON;
typedef struct{
    visor__ReadableBlockHeader Head;
    GoUint64_ Unspents;
    GoUint64_ Unconfirmed;
} visor__BlockchainMetadata;
typedef struct{
    visor__ReadableOutputs HeadOutputs;
    visor__ReadableOutputs OutgoingOutputs;
    visor__ReadableOutputs IncomingOutputs;
} visor__ReadableOutputSet;
typedef struct{
    coin__Transaction Txn;
    visor__TransactionStatus Status;
    GoUint64_ Time;
    GoInt_ Size;
} visor__Transaction;
