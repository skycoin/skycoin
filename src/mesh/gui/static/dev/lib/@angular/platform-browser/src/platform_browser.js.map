{"version":3,"file":"platform_browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/platform_browser.ts"],"names":[],"mappings":";;;;AAIE,qBAMK,eAAe,CAAC,CAAA;AACvB,qBAAsB,eAAe,CAAC,CAAA;AACtC,+BAAyD,kBAAkB,CAAC,CAAA;AAC5E,2BAA8B,yBAAyB,CAAC;AAAhD,uDAAgD;AAExD,8BAAkD,4BAA4B,CAAC;AAAvE,oDAAY;AAAE,sEAAyD;AAC/E,yBAAsC,sBAAsB,CAAC;AAArD,qEAAqD;AAC7D,+BAUO,kBAAkB,CAAC;AATxB,qFAA4B;AAC5B,yFAA8B;AAC9B,+DAAiB;AACjB,iCAAE;AACF,uCAAK;AACL,6DAAgB;AAChB,+DAAiB;AACjB,uEAAqB;AACrB,mEACwB;AAE1B,iBAAc,mBAAmB,CAAC,EAAA;AAClC,2BAAuB,kBAAkB,CAAC;AAAlC,yCAAkC;AAE1C,yCAAsD,qCAAqC,CAAC;AAApF,mFAAsB;AAAE,qEAA4D;AAE5F,wCAKO,2BAA2B,CAAC;AAJjC,oEAAe;AACf,gFAAqB;AACrB,8FAA4B;AAC5B,oFACiC;AAInC;IACE,EAAE,CAAC,CAAC,cAAO,CAAC,kBAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,qBAAc,CAAC,yBAAkB,CAAC,gBAAgB,CAAC,kCAAiB,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,MAAM,CAAC,qBAAc,CAAC,wCAAuB,CAAC,CAAC;AACjD,CAAC;AALe,uBAAe,kBAK9B,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ReflectiveInjector,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform\n} from '@angular/core';\nimport {isBlank} from './facade/lang';\nimport {BROWSER_PROVIDERS, BROWSER_PLATFORM_MARKER} from './browser_common';\nexport {DomEventsPlugin} from './dom/events/dom_events';\n\nexport {EventManager, EVENT_MANAGER_PLUGINS} from './dom/events/event_manager';\nexport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {\n  BROWSER_APP_COMMON_PROVIDERS,\n  BROWSER_SANITIZATION_PROVIDERS,\n  BROWSER_PROVIDERS,\n  By,\n  Title,\n  enableDebugTools,\n  disableDebugTools,\n  HAMMER_GESTURE_CONFIG,\n  HammerGestureConfig\n} from './browser_common';\n\nexport * from '../private_export';\nexport {DOCUMENT} from './dom/dom_tokens';\n\nexport {DomSanitizationService, SecurityContext} from './security/dom_sanitization_service';\n\nexport {\n  bootstrapStatic,\n  browserStaticPlatform,\n  BROWSER_APP_STATIC_PROVIDERS,\n  BrowserPlatformLocation\n} from './platform_browser_static';\n\n\n\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n"]}