{"version":3,"file":"lowercase_pipe.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/lowercase_pipe.ts"],"names":[],"mappings":";AAIE,qBAA4D,eAAe,CAAC,CAAA;AAC9E,qBAAgC,uBAAuB,CAAC,CAAA;AACxD,gDAA2C,mCAAmC,CAAC,CAAA;AAC/E;IAAA;IAYA,CAAC;IAXC,iCAAS,GAAT,UAAU,KAAa;QACrB,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,8DAA4B,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,EAAG,EAAE;QAC7C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,oBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,qBAAa,gBAYzB,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable, PipeTransform, WrappedValue, Pipe} from '@angular/core';\nimport {isString, isBlank} from '../../src/facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\nexport class LowerCasePipe implements PipeTransform {\n  transform(value: string): string {\n    if (isBlank(value)) return value;\n    if (!isString(value)) {\n      throw new InvalidPipeArgumentException(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n{ type: Injectable },\n];\n}\n"]}