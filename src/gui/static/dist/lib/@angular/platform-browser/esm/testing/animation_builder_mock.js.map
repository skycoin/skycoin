{"version":3,"file":"animation_builder_mock.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/testing/animation_builder_mock.ts"],"names":[],"mappings":"OAIS,EAAC,UAAU,EAAC,MAAM,eAAe;OACnC,EAAC,SAAS,EAAC,MAAM,0BAA0B;OAE3C,EAAC,cAAc,EAAC,MAAM,gCAAgC;OACtD,EAAC,gBAAgB,EAAC,MAAM,kCAAkC;OAC1D,EAAC,mBAAmB,EAAC,MAAM,sCAAsC;AACxE,0CAA0C,gBAAgB;IACxD;QAAgB,MAAM,IAAI,CAAC,CAAC;IAAC,CAAC;IAC9B,GAAG,KAA0B,MAAM,CAAC,IAAI,uBAAuB,EAAE,CAAC,CAAC,CAAC;AAMtE,CAAC;AALM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACK,mCAAc,GAA2D,EAC/E,CACA;AAED,sCAAsC,mBAAmB;IACvD;QAAgB,MAAM,IAAI,CAAC,CAAC;IAAC,CAAC;IAC9B,KAAK,CAAC,OAAoB,IAAe,MAAM,CAAC,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC;AAED,qCAAqC,cAAc;IACjD,4BAA4B,KAAW,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC,CAAC,CAAC;AACjF,CAAC;AAED,4BAA4B,SAAS;IAEnC,YAAY,OAAoB,EAAE,IAAyB;QACzD,MAAM,OAAO,EAAE,IAAI,EAAE,IAAI,sBAAsB,EAAE,CAAC,CAAC;IACrD,CAAC;IACD,IAAI,CAAC,QAAkB,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACvD,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;AACH,CAAC;AAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable} from '@angular/core';\nimport {Animation} from '../src/animate/animation';\nimport {CssAnimationOptions} from '../src/animate/css_animation_options';\nimport {BrowserDetails} from '../src/animate/browser_details';\nimport {AnimationBuilder} from '../src/animate/animation_builder';\nimport {CssAnimationBuilder} from '../src/animate/css_animation_builder';\nexport class MockAnimationBuilder extends AnimationBuilder {\n  constructor() { super(null); }\n  css(): CssAnimationBuilder { return new MockCssAnimationBuilder(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n];\n}\n\nclass MockCssAnimationBuilder extends CssAnimationBuilder {\n  constructor() { super(null); }\n  start(element: HTMLElement): Animation { return new MockAnimation(element, this.data); }\n}\n\nclass MockBrowserAbstraction extends BrowserDetails {\n  doesElapsedTimeIncludesDelay(): void { this.elapsedTimeIncludesDelay = false; }\n}\n\nclass MockAnimation extends Animation {\n  private _callback: Function;\n  constructor(element: HTMLElement, data: CssAnimationOptions) {\n    super(element, data, new MockBrowserAbstraction());\n  }\n  wait(callback: Function) { this._callback = callback; }\n  flush() {\n    this._callback(0);\n    this._callback = null;\n  }\n}\n"]}