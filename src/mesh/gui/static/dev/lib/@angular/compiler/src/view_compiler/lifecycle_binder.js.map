{"version":3,"file":"lifecycle_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/lifecycle_binder.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {LifecycleHooks} from '../../core_private';\nimport * as o from '../output/output_ast';\nimport {DetectChangesVars, ChangeDetectorStateEnum} from './constants';\nimport {CompileDirectiveMetadata, CompilePipeMetadata} from '../compile_metadata';\nimport {DirectiveAst} from '../template_ast';\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\n\n\n\nvar STATE_IS_NEVER_CHECKED =\n    o.THIS_EXPR.prop('cdState').identical(ChangeDetectorStateEnum.NeverChecked);\nvar NOT_THROW_ON_CHANGES = o.not(DetectChangesVars.throwOnChange);\n\nexport function bindDirectiveDetectChangesLifecycleCallbacks(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression, compileElement: CompileElement) {\n  var view = compileElement.view;\n  var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n  var lifecycleHooks = directiveAst.directive.lifecycleHooks;\n  if (lifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 && directiveAst.inputs.length > 0) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(\n        DetectChangesVars.changes.notIdentical(o.NULL_EXPR),\n        [directiveInstance.callMethod('ngOnChanges', [DetectChangesVars.changes]).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1) {\n    detectChangesInInputsMethod.addStmt(\n        new o.IfStmt(STATE_IS_NEVER_CHECKED.and(NOT_THROW_ON_CHANGES),\n                     [directiveInstance.callMethod('ngOnInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(\n        NOT_THROW_ON_CHANGES, [directiveInstance.callMethod('ngDoCheck', []).toStmt()]));\n  }\n}\n\nexport function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta: CompileDirectiveMetadata,\n                                                            directiveInstance: o.Expression,\n                                                            compileElement: CompileElement) {\n  var view = compileElement.view;\n  var lifecycleHooks = directiveMeta.lifecycleHooks;\n  var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n  afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex,\n                                                      compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n  }\n}\n\nexport function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta: CompileDirectiveMetadata,\n                                                         directiveInstance: o.Expression,\n                                                         compileElement: CompileElement) {\n  var view = compileElement.view;\n  var lifecycleHooks = directiveMeta.lifecycleHooks;\n  var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n  afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex,\n                                                   compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n  }\n}\n\nexport function bindDirectiveDestroyLifecycleCallbacks(directiveMeta: CompileDirectiveMetadata,\n                                                       directiveInstance: o.Expression,\n                                                       compileElement: CompileElement) {\n  var onDestroyMethod = compileElement.view.destroyMethod;\n  onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n  if (directiveMeta.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(directiveInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n\nexport function bindPipeDestroyLifecycleCallbacks(pipeMeta: CompilePipeMetadata,\n                                                  pipeInstance: o.Expression, view: CompileView) {\n  var onDestroyMethod = view.destroyMethod;\n  if (pipeMeta.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n"]}