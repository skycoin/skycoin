{"version":3,"file":"assertions.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/assertions.ts"],"names":[],"mappings":"OAIS,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,iBAAiB,EAAC,MAAM,oBAAoB;OAC3E,EAAC,aAAa,EAAC,MAAM,0BAA0B;AAEtD,qCAAqC,UAAkB,EAAE,KAAU;IACjE,EAAE,CAAC,CAAC,CAAC,iBAAiB,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC;IACT,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,IAAI,aAAa,CAAC,aAAa,UAAU,8BAA8B,CAAC,CAAC;IACjF,CAAC;IACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,IAAI,aAAa,CAAC,aAAa,UAAU,8BAA8B,CAAC,CAAC;QACjF,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isArray, isString, isBlank, assertionsEnabled} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\n\nexport function assertArrayOfStrings(identifier: string, value: any) {\n  if (!assertionsEnabled() || isBlank(value)) {\n    return;\n  }\n  if (!isArray(value)) {\n    throw new BaseException(`Expected '${identifier}' to be an array of strings.`);\n  }\n  for (var i = 0; i < value.length; i += 1) {\n    if (!isString(value[i])) {\n      throw new BaseException(`Expected '${identifier}' to be an array of strings.`);\n    }\n  }\n}\n"]}