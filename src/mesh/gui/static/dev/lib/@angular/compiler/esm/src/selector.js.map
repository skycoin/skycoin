{"version":3,"file":"selector.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/selector.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Map, ListWrapper} from '../src/facade/collection';\nimport {\n  isPresent,\n  isBlank,\n  RegExpWrapper,\n  RegExpMatcherWrapper,\n  StringWrapper\n} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\n\nconst _EMPTY_ATTR_VALUE = /*@ts2dart_const*/ '';\n\n// TODO: Can't use `const` here as\n// in Dart this is not transpiled into `final` yet...\nvar _SELECTOR_REGEXP = RegExpWrapper.create(\n    '(\\\\:not\\\\()|' +                          //\":not(\"\n    '([-\\\\w]+)|' +                            // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' +                     // \".class\"\n    '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\" or \"[name*=value]\"\n    '(\\\\))|' +                                // \")\"\n    '(\\\\s*,\\\\s*)');                           // \",\"\n\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n\n  static parse(selector: string): CssSelector[] {\n    var results: CssSelector[] = [];\n    var _addResult = (res: CssSelector[], cssSel) => {\n      if (cssSel.notSelectors.length > 0 && isBlank(cssSel.element) &&\n          ListWrapper.isEmpty(cssSel.classNames) && ListWrapper.isEmpty(cssSel.attrs)) {\n        cssSel.element = \"*\";\n      }\n      res.push(cssSel);\n    };\n    var cssSelector = new CssSelector();\n    var matcher = RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);\n    var match;\n    var current = cssSelector;\n    var inNot = false;\n    while (isPresent(match = RegExpMatcherWrapper.next(matcher))) {\n      if (isPresent(match[1])) {\n        if (inNot) {\n          throw new BaseException('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (isPresent(match[2])) {\n        current.setElement(match[2]);\n      }\n      if (isPresent(match[3])) {\n        current.addClassName(match[3]);\n      }\n      if (isPresent(match[4])) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (isPresent(match[6])) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (isPresent(match[7])) {\n        if (inNot) {\n          throw new BaseException('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n\n  isElementSelector(): boolean {\n    return isPresent(this.element) && ListWrapper.isEmpty(this.classNames) &&\n           ListWrapper.isEmpty(this.attrs) && this.notSelectors.length === 0;\n  }\n\n  setElement(element: string = null) { this.element = element; }\n\n  /** Gets a template string for an element that matches the selector. */\n  getMatchingElementTemplate(): string {\n    let tagName = isPresent(this.element) ? this.element : 'div';\n    let classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let attrs = '';\n    for (let i = 0; i < this.attrs.length; i += 2) {\n      let attrName = this.attrs[i];\n      let attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n\n  addAttribute(name: string, value: string = _EMPTY_ATTR_VALUE) {\n    this.attrs.push(name);\n    if (isPresent(value)) {\n      value = value.toLowerCase();\n    } else {\n      value = _EMPTY_ATTR_VALUE;\n    }\n    this.attrs.push(value);\n  }\n\n  addClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n\n  toString(): string {\n    var res = '';\n    if (isPresent(this.element)) {\n      res += this.element;\n    }\n    if (isPresent(this.classNames)) {\n      for (var i = 0; i < this.classNames.length; i++) {\n        res += '.' + this.classNames[i];\n      }\n    }\n    if (isPresent(this.attrs)) {\n      for (var i = 0; i < this.attrs.length;) {\n        var attrName = this.attrs[i++];\n        var attrValue = this.attrs[i++];\n        res += '[' + attrName;\n        if (attrValue.length > 0) {\n          res += '=' + attrValue;\n        }\n        res += ']';\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n  static createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    var notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\n\n  private _elementMap = new Map<string, SelectorContext[]>();\n  private _elementPartialMap = new Map<string, SelectorMatcher>();\n  private _classMap = new Map<string, SelectorContext[]>();\n  private _classPartialMap = new Map<string, SelectorMatcher>();\n  private _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\n  private _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\n  private _listContexts: SelectorListContext[] = [];\n\n  addSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    var listContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (var i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n\n  /**\n   * Add an object that can be found later on by calling `match`.\n   * @param cssSelector A css selector\n   * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n   */\n  private _addSelectable(cssSelector: CssSelector, callbackCtxt: any,\n                         listContext: SelectorListContext) {\n    var matcher: SelectorMatcher = this;\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n    var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (isPresent(element)) {\n      var isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (isPresent(classNames)) {\n      for (var index = 0; index < classNames.length; index++) {\n        var isTerminal = attrs.length === 0 && index === classNames.length - 1;\n        var className = classNames[index];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (isPresent(attrs)) {\n      for (var index = 0; index < attrs.length;) {\n        var isTerminal = index === attrs.length - 2;\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n        if (isTerminal) {\n          var terminalMap = matcher._attrValueMap;\n          var terminalValuesMap = terminalMap.get(attrName);\n          if (isBlank(terminalValuesMap)) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(attrName, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, attrValue, selectable);\n        } else {\n          var parttialMap = matcher._attrValuePartialMap;\n          var partialValuesMap = parttialMap.get(attrName);\n          if (isBlank(partialValuesMap)) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            parttialMap.set(attrName, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, attrValue);\n        }\n      }\n    }\n  }\n\n  private _addTerminal(map: Map<string, SelectorContext[]>, name: string,\n                       selectable: SelectorContext) {\n    var terminalList = map.get(name);\n    if (isBlank(terminalList)) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n\n  private _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    var matcher = map.get(name);\n    if (isBlank(matcher)) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n\n  /**\n   * Find the objects that have been added via `addSelectable`\n   * whose css selector is contained in the given css selector.\n   * @param cssSelector A css selector\n   * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n   * @return boolean true if a match was found\n  */\n  match(cssSelector: CssSelector, matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    var result = false;\n    var element = cssSelector.element;\n    var classNames = cssSelector.classNames;\n    var attrs = cssSelector.attrs;\n\n    for (var i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n             result;\n\n    if (isPresent(classNames)) {\n      for (var index = 0; index < classNames.length; index++) {\n        var className = classNames[index];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (isPresent(attrs)) {\n      for (var index = 0; index < attrs.length;) {\n        var attrName = attrs[index++];\n        var attrValue = attrs[index++];\n\n        var terminalValuesMap = this._attrValueMap.get(attrName);\n        if (!StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\n          result = this._matchTerminal(terminalValuesMap, _EMPTY_ATTR_VALUE, cssSelector,\n                                       matchedCallback) ||\n                   result;\n        }\n        result = this._matchTerminal(terminalValuesMap, attrValue, cssSelector, matchedCallback) ||\n                 result;\n\n        var partialValuesMap = this._attrValuePartialMap.get(attrName);\n        if (!StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {\n          result = this._matchPartial(partialValuesMap, _EMPTY_ATTR_VALUE, cssSelector,\n                                      matchedCallback) ||\n                   result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, attrValue, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchTerminal(map: Map<string, SelectorContext[]>, name, cssSelector: CssSelector,\n                 matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (isBlank(map) || isBlank(name)) {\n      return false;\n    }\n\n    var selectables = map.get(name);\n    var starSelectables = map.get(\"*\");\n    if (isPresent(starSelectables)) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (isBlank(selectables)) {\n      return false;\n    }\n    var selectable;\n    var result = false;\n    for (var index = 0; index < selectables.length; index++) {\n      selectable = selectables[index];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchPartial(map: Map<string, SelectorMatcher>, name, cssSelector: CssSelector,\n                matchedCallback /*: (c: CssSelector, a: any) => void*/): boolean {\n    if (isBlank(map) || isBlank(name)) {\n      return false;\n    }\n    var nestedSelector = map.get(name);\n    if (isBlank(nestedSelector)) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n\n  constructor(public selectors: CssSelector[]) {}\n}\n\n// Store context to pass back selector and context when a selector is matched\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n\n  constructor(public selector: CssSelector, public cbContext: any,\n              public listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n\n  finalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    var result = true;\n    if (this.notSelectors.length > 0 &&\n        (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\n      var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && isPresent(callback) &&\n        (isBlank(this.listContext) || !this.listContext.alreadyMatched)) {\n      if (isPresent(this.listContext)) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n"]}