{"version":3,"file":"directive_normalizer.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/directive_normalizer.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable, ViewEncapsulation} from '@angular/core';\n\nimport {isPresent} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\nimport {PromiseWrapper} from '../src/facade/async';\n\nimport {\n  CompileTypeMetadata,\n  CompileDirectiveMetadata,\n  CompileTemplateMetadata,\n} from './compile_metadata';\nimport {XHR} from './xhr';\nimport {UrlResolver} from './url_resolver';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\n\nimport {\n  HtmlAstVisitor,\n  HtmlElementAst,\n  HtmlTextAst,\n  HtmlAttrAst,\n  HtmlCommentAst,\n  HtmlExpansionAst,\n  HtmlExpansionCaseAst,\n  htmlVisitAll\n} from './html_ast';\nimport {HtmlParser} from './html_parser';\n\nimport {preparseElement, PreparsedElementType} from './template_preparser';\nexport class DirectiveNormalizer {\n  constructor(private _xhr: XHR, private _urlResolver: UrlResolver,\n              private _htmlParser: HtmlParser) {}\n\n  normalizeDirective(directive: CompileDirectiveMetadata): Promise<CompileDirectiveMetadata> {\n    if (!directive.isComponent) {\n      // For non components there is nothing to be normalized yet.\n      return PromiseWrapper.resolve(directive);\n    }\n    return this.normalizeTemplate(directive.type, directive.template)\n        .then((normalizedTemplate: CompileTemplateMetadata) => new CompileDirectiveMetadata({\n                type: directive.type,\n                isComponent: directive.isComponent,\n                selector: directive.selector,\n                exportAs: directive.exportAs,\n                changeDetection: directive.changeDetection,\n                inputs: directive.inputs,\n                outputs: directive.outputs,\n                hostListeners: directive.hostListeners,\n                hostProperties: directive.hostProperties,\n                hostAttributes: directive.hostAttributes,\n                lifecycleHooks: directive.lifecycleHooks,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                queries: directive.queries,\n                viewQueries: directive.viewQueries,\n                template: normalizedTemplate\n              }));\n  }\n\n  normalizeTemplate(directiveType: CompileTypeMetadata,\n                    template: CompileTemplateMetadata): Promise<CompileTemplateMetadata> {\n    if (isPresent(template.template)) {\n      return PromiseWrapper.resolve(this.normalizeLoadedTemplate(\n          directiveType, template, template.template, directiveType.moduleUrl));\n    } else if (isPresent(template.templateUrl)) {\n      var sourceAbsUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\n      return this._xhr.get(sourceAbsUrl)\n          .then(templateContent => this.normalizeLoadedTemplate(directiveType, template,\n                                                                templateContent, sourceAbsUrl));\n    } else {\n      throw new BaseException(`No template specified for component ${directiveType.name}`);\n    }\n  }\n\n  normalizeLoadedTemplate(directiveType: CompileTypeMetadata, templateMeta: CompileTemplateMetadata,\n                          template: string, templateAbsUrl: string): CompileTemplateMetadata {\n    var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name);\n    if (rootNodesAndErrors.errors.length > 0) {\n      var errorString = rootNodesAndErrors.errors.join('\\n');\n      throw new BaseException(`Template parse errors:\\n${errorString}`);\n    }\n\n    var visitor = new TemplatePreparseVisitor();\n    htmlVisitAll(visitor, rootNodesAndErrors.rootNodes);\n    var allStyles = templateMeta.styles.concat(visitor.styles);\n\n    var allStyleAbsUrls =\n        visitor.styleUrls.filter(isStyleUrlResolvable)\n            .map(url => this._urlResolver.resolve(templateAbsUrl, url))\n            .concat(templateMeta.styleUrls.filter(isStyleUrlResolvable)\n                        .map(url => this._urlResolver.resolve(directiveType.moduleUrl, url)));\n\n    var allResolvedStyles = allStyles.map(style => {\n      var styleWithImports = extractStyleUrls(this._urlResolver, templateAbsUrl, style);\n      styleWithImports.styleUrls.forEach(styleUrl => allStyleAbsUrls.push(styleUrl));\n      return styleWithImports.style;\n    });\n\n    var encapsulation = templateMeta.encapsulation;\n    if (encapsulation === ViewEncapsulation.Emulated && allResolvedStyles.length === 0 &&\n        allStyleAbsUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n    return new CompileTemplateMetadata({\n      encapsulation: encapsulation,\n      template: template,\n      templateUrl: templateAbsUrl,\n      styles: allResolvedStyles,\n      styleUrls: allStyleAbsUrls,\n      ngContentSelectors: visitor.ngContentSelectors\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: XHR, },\n{type: UrlResolver, },\n{type: HtmlParser, },\n];\n}\n\nclass TemplatePreparseVisitor implements HtmlAstVisitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n\n  visitElement(ast: HtmlElementAst, context: any): any {\n    var preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        var textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof HtmlTextAst) {\n            textContent += (<HtmlTextAst>child).value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        // DDC reports this as error. See:\n        // https://github.com/dart-lang/dev_compiler/issues/428\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    htmlVisitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n  visitComment(ast: HtmlCommentAst, context: any): any { return null; }\n  visitAttr(ast: HtmlAttrAst, context: any): any { return null; }\n  visitText(ast: HtmlTextAst, context: any): any { return null; }\n  visitExpansion(ast: HtmlExpansionAst, context: any): any { return null; }\n\n  visitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any { return null; }\n}\n"]}