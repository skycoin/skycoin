{"version":3,"file":"select_control_value_accessor.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/forms/directives/select_control_value_accessor.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  Directive,\n  Renderer,\n  forwardRef,\n  Provider,\n  ElementRef,\n  Input,\n  Host,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport {\n  StringWrapper,\n  isPrimitive,\n  isPresent,\n  isBlank,\n  looseIdentical\n} from '../../../src/facade/lang';\nimport {MapWrapper} from '../../../src/facade/collection';\n\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from './control_value_accessor';\n\nexport const SELECT_VALUE_ACCESSOR: any = /*@ts2dart_const*/ /*@ts2dart_Provider*/ {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\n\nfunction _buildValueString(id: string, value: any): string {\n  if (isBlank(id)) return `${value}`;\n  if (!isPrimitive(value)) value = \"Object\";\n  return StringWrapper.slice(`${id}: ${value}`, 0, 50);\n}\n\nfunction _extractId(valueString: string): string {\n  return valueString.split(\":\")[0];\n}\nexport class SelectControlValueAccessor implements ControlValueAccessor {\n  value: any;\n  /** @internal */\n  _optionMap: Map<string, any> = new Map<string, any>();\n  /** @internal */\n  _idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n  writeValue(value: any): void {\n    this.value = value;\n    var valueString = _buildValueString(this._getOptionId(value), value);\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n  }\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = (valueString: string) => { fn(this._getOptionValue(valueString)); };\n  }\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  /** @internal */\n  _registerOption(): string { return (this._idCounter++).toString(); }\n\n  /** @internal */\n  _getOptionId(value: any): string {\n    for (let id of MapWrapper.keys(this._optionMap)) {\n      if (looseIdentical(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n\n  /** @internal */\n  _getOptionValue(valueString: string): any {\n    let value = this._optionMap.get(_extractId(valueString));\n    return isPresent(value) ? value : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'select[ngControl],select[ngFormControl],select[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\nexport class NgSelectOption implements OnDestroy {\n  id: string;\n\n  constructor(private _element: ElementRef, private _renderer: Renderer, private _select: SelectControlValueAccessor) {\n    if (isPresent(this._select)) this.id = this._select._registerOption();\n  }\n  set ngValue(value: any) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  set value(value: any) {\n    this._setElementValue(value);\n    if (isPresent(this._select)) this._select.writeValue(this._select.value);\n  }\n\n  /** @internal */\n  _setElementValue(value: string): void {\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n  }\n\n  ngOnDestroy() {\n    if (isPresent(this._select)) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ElementRef, },\n{type: Renderer, },\n{type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n"]}