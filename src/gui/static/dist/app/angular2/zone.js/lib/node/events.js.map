{"version":3,"sources":["app/angular2/zone.js/lib/node/events.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;QAMG,eAAe,EACf,mBAAmB,EACnB,kBAAkB,EAClB,YAAY,EACZ,KAAK,EAGL,oBAAoB,EAEpB,wBAAwB,EAExB,uBAAuB,EACvB,kBAAkB,EAgBpB,MAAM,EAGD,GAAG;IAjBZ,kCAAyC,GAAQ;QAC/C,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,mBAAW,CAAC,GAAG,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC,CAAC;YAC9D,mBAAW,CAAC,GAAG,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC,CAAC;YACtE,mBAAW,CAAC,GAAG,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC,CAAC;YACpE,mBAAW,CAAC,GAAG,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC,CAAC;YACzD,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAXD,+DAWC,CAAA;;;;;;;YA1BD,mBAAmB;YACb,eAAe,GAAG,aAAa,CAAC;YAChC,mBAAmB,GAAG,iBAAiB,CAAC;YACxC,kBAAkB,GAAG,gBAAgB,CAAC;YACtC,YAAY,GAAG,WAAW,CAAC;YAC3B,KAAK,GAAG,IAAI,CAAC;YAGb,oBAAoB,GACtB,gCAAwB,CAAC,eAAe,EAAE,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACzE,wBAAwB,GAC1B,gCAAwB,CAAC,mBAAmB,EAAE,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YAC7E,uBAAuB,GAAG,mCAA2B,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YACjF,kBAAkB,GAAG,8BAAsB,CAAC,YAAY,CAAC,CAAC;YAehE,eAAe;YAEf,IAAI,CAAC;gBACH,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAE;YAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACf,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClC,wBAAwB,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC1D,CAAC","file":"events.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {makeZoneAwareAddListener, makeZoneAwareListeners, makeZoneAwareRemoveListener, patchMethod} from '../common/utils';\n\n\n// For EventEmitter\nconst EE_ADD_LISTENER = 'addListener';\nconst EE_PREPEND_LISTENER = 'prependListener';\nconst EE_REMOVE_LISTENER = 'removeListener';\nconst EE_LISTENERS = 'listeners';\nconst EE_ON = 'on';\n\n\nconst zoneAwareAddListener =\n    makeZoneAwareAddListener(EE_ADD_LISTENER, EE_REMOVE_LISTENER, false, true);\nconst zoneAwarePrependListener =\n    makeZoneAwareAddListener(EE_PREPEND_LISTENER, EE_REMOVE_LISTENER, false, true);\nconst zoneAwareRemoveListener = makeZoneAwareRemoveListener(EE_REMOVE_LISTENER, false);\nconst zoneAwareListeners = makeZoneAwareListeners(EE_LISTENERS);\n\nexport function patchEventEmitterMethods(obj: any): boolean {\n  if (obj && obj.addListener) {\n    patchMethod(obj, EE_ADD_LISTENER, () => zoneAwareAddListener);\n    patchMethod(obj, EE_PREPEND_LISTENER, () => zoneAwarePrependListener);\n    patchMethod(obj, EE_REMOVE_LISTENER, () => zoneAwareRemoveListener);\n    patchMethod(obj, EE_LISTENERS, () => zoneAwareListeners);\n    obj[EE_ON] = obj[EE_ADD_LISTENER];\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// EventEmitter\nlet events;\ntry {\n  events = require('events');\n} catch (err) {\n}\n\nif (events && events.EventEmitter) {\n  patchEventEmitterMethods(events.EventEmitter.prototype);\n}"]}