{"version":3,"file":"segments.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/segments.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {ComponentFactory, Type} from '@angular/core';\nimport {StringMapWrapper, ListWrapper} from './facade/collection';\nimport {isBlank, isPresent, stringify} from './facade/lang';\n\nexport class Tree<T> {\n  /** @internal */\n  _root: TreeNode<T>;\n\n  constructor(root: TreeNode<T>) { this._root = root; }\n\n  get root(): T { return this._root.value; }\n\n  parent(t: T): T {\n    let p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n\n  children(t: T): T[] {\n    let n = _findNode(t, this._root);\n    return isPresent(n) ? n.children.map(t => t.value) : null;\n  }\n\n  firstChild(t: T): T {\n    let n = _findNode(t, this._root);\n    return isPresent(n) && n.children.length > 0 ? n.children[0].value : null;\n  }\n\n  pathFromRoot(t: T): T[] { return _findPath(t, this._root, []).map(s => s.value); }\n\n  contains(tree: Tree<T>): boolean { return _contains(this._root, tree._root); }\n}\n\nexport class UrlTree extends Tree<UrlSegment> {\n  constructor(root: TreeNode<UrlSegment>) { super(root); }\n}\n\nexport class RouteTree extends Tree<RouteSegment> {\n  constructor(root: TreeNode<RouteSegment>) { super(root); }\n}\n\nexport function rootNode<T>(tree: Tree<T>): TreeNode<T> {\n  return tree._root;\n}\n\nfunction _findNode<T>(expected: T, c: TreeNode<T>): TreeNode<T> {\n  // TODO: vsavkin remove it once recognize is fixed\n  if (expected instanceof RouteSegment && equalSegments(<any>expected, <any>c.value)) return c;\n  if (expected === c.value) return c;\n  for (let cc of c.children) {\n    let r = _findNode(expected, cc);\n    if (isPresent(r)) return r;\n  }\n  return null;\n}\n\nfunction _findPath<T>(expected: T, c: TreeNode<T>, collected: TreeNode<T>[]): TreeNode<T>[] {\n  collected.push(c);\n\n  // TODO: vsavkin remove it once recognize is fixed\n  if (_equalValues(expected, c.value)) return collected;\n\n  for (let cc of c.children) {\n    let r = _findPath(expected, cc, ListWrapper.clone(collected));\n    if (isPresent(r)) return r;\n  }\n\n  return null;\n}\n\nfunction _contains<T>(tree: TreeNode<T>, subtree: TreeNode<T>): boolean {\n  if (!_equalValues(tree.value, subtree.value)) return false;\n\n  for (let subtreeNode of subtree.children) {\n    let s = tree.children.filter(child => _equalValues(child.value, subtreeNode.value));\n    if (s.length === 0) return false;\n    if (!_contains(s[0], subtreeNode)) return false;\n  }\n\n  return true;\n}\n\nfunction _equalValues(a: any, b: any): boolean {\n  if (a instanceof RouteSegment) return equalSegments(<any>a, <any>b);\n  if (a instanceof UrlSegment) return equalUrlSegments(<any>a, <any>b);\n  return a === b;\n}\n\nexport class TreeNode<T> {\n  constructor(public value: T, public children: TreeNode<T>[]) {}\n}\n\nexport class UrlSegment {\n  constructor(public segment: any, public parameters: {[key: string]: any},\n              public outlet: string) {}\n\n  toString(): string {\n    let outletPrefix = isBlank(this.outlet) ? \"\" : `${this.outlet}:`;\n    return `${outletPrefix}${this.segment}${_serializeParams(this.parameters)}`;\n  }\n}\n\nfunction _serializeParams(params: {[key: string]: string}): string {\n  let res = \"\";\n  StringMapWrapper.forEach(params, (v, k) => res += `;${k}=${v}`);\n  return res;\n}\n\nexport class RouteSegment {\n  /** @internal */\n  _type: Type;\n\n  /** @internal */\n  _componentFactory: ComponentFactory<any>;\n\n  constructor(public urlSegments: UrlSegment[], public parameters: {[key: string]: any},\n              public outlet: string, type: Type, componentFactory: ComponentFactory<any>) {\n    this._type = type;\n    this._componentFactory = componentFactory;\n  }\n\n  getParam(param: string): string {\n    return isPresent(this.parameters) ? this.parameters[param] : null;\n  }\n\n  get type(): Type { return this._type; }\n\n  get stringifiedUrlSegments(): string { return this.urlSegments.map(s => s.toString()).join(\"/\"); }\n}\n\nexport function serializeRouteSegmentTree(tree: RouteTree): string {\n  return _serializeRouteSegmentTree(tree._root);\n}\n\nfunction _serializeRouteSegmentTree(node: TreeNode<RouteSegment>): string {\n  let v = node.value;\n  let children = node.children.map(c => _serializeRouteSegmentTree(c)).join(\", \");\n  return `${v.outlet}:${v.stringifiedUrlSegments}(${stringify(v.type)}) [${children}]`;\n}\n\nexport function equalSegments(a: RouteSegment, b: RouteSegment): boolean {\n  if (isBlank(a) && !isBlank(b)) return false;\n  if (!isBlank(a) && isBlank(b)) return false;\n  if (a._type !== b._type) return false;\n  if (a.outlet != b.outlet) return false;\n  return StringMapWrapper.equals(a.parameters, b.parameters);\n}\n\nexport function equalUrlSegments(a: UrlSegment, b: UrlSegment): boolean {\n  if (isBlank(a) && !isBlank(b)) return false;\n  if (!isBlank(a) && isBlank(b)) return false;\n  if (a.segment != b.segment) return false;\n  if (a.outlet != b.outlet) return false;\n  if (isBlank(a.parameters)) {\n    console.log(\"a\", a);\n  }\n  if (isBlank(b.parameters)) {\n    console.log(\"b\", b);\n  }\n  return StringMapWrapper.equals(a.parameters, b.parameters);\n}\n\nexport function routeSegmentComponentFactory(a: RouteSegment): ComponentFactory<any> {\n  return a._componentFactory;\n}\n"]}