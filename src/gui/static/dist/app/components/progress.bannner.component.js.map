{"version":3,"sources":["app/components/progress.bannner.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YA4BA;gBASE,gCAAoB,YAA6B;oBAA7B,iBAAY,GAAZ,YAAY,CAAiB;oBAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,CAAC;gBAID,gDAAe,GAAf;oBAAA,iBAQC;oBAPC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;wBACzB,EAAE,CAAA,CAAC,KAAI,CAAC,mBAAmB,GAAC,KAAI,CAAC,mBAAmB,IAAE,CAAC,IAAI,KAAI,CAAC,mBAAmB,IAAE,CAAC,CAAC,CAAA,CAAC;4BACtF,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;4BAChC,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;wBACrB,CAAC;wBACD,KAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACf,CAAC;gBACD,2CAAU,GAAV;oBAAA,iBAQC;oBAPC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,YAAyB;wBACrD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC;wBAChD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC;oBAClD,CAAC,CAAC,CAAC;gBAGL,CAAC;gBAvDH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,0dAeG;wBAEb,SAAS,EAAC,CAAC,uCAAgB,CAAC;qBAC7B,CAAC;;0CAAA;gBAoCF,6BAAC;YAAD,CAlCA,AAkCC,IAAA;YAlCD,2DAkCC,CAAA","file":"progress.bannner.component.js","sourcesContent":["import {Component, AfterViewInit} from \"@angular/core\";\r\nimport {BlockSyncService} from \"../services/skycoin.sync.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SyncProgress} from \"../model/sync.progress\";\r\ndeclare var _: any;\r\n\r\n@Component({\r\n  selector: 'skycoin-block-sync',\r\n  template: `\r\n\r\n        \r\n             <div class=\"sync-div-container\">\r\n             \r\n             <ul class=\"fa-ul\">\r\n  <li><i class=\"fa-li fa fa-spinner fa-spin\" *ngIf=\"syncDone == false\"></i>\r\n  <span *ngIf=\"currentWalletNumber>0\">{{currentWalletNumber}} of {{highestWalletNumber}} blocks synced</span>\r\n  <span *ngIf=\"currentWalletNumber==0\">Syncing wallet</span>\r\n  </li>\r\n</ul>\r\n                \r\n               \r\n              </div>\r\n            \r\n              `\r\n  ,\r\n  providers:[BlockSyncService]\r\n})\r\n\r\nexport class SkycoinSyncWalletBlock implements AfterViewInit {\r\n\r\n  _syncProgress:Observable<SyncProgress>;\r\n\r\n  syncDone:boolean;\r\n\r\n  currentWalletNumber:number;\r\n  highestWalletNumber:number;\r\n\r\n  constructor(private _syncService:BlockSyncService){\r\n    this.currentWalletNumber = this.highestWalletNumber =0;\r\n    this.syncDone = false;\r\n  }\r\n\r\n  private handlerSync:any;\r\n\r\n  ngAfterViewInit(): any {\r\n    this.handlerSync = setInterval(() => {\r\n          if(this.highestWalletNumber-this.currentWalletNumber<=1 && this.highestWalletNumber!=0){\r\n            clearInterval(this.handlerSync);\r\n            this.syncDone=true;\r\n          }\r\n          this.syncBlocks();\r\n        }, 2000);\r\n  }\r\n  syncBlocks():any{\r\n    this._syncProgress = this._syncService.getSyncProgress();\r\n    this._syncProgress.subscribe((syncProgress:SyncProgress)=>{\r\n      this.currentWalletNumber = syncProgress.current;\r\n      this.highestWalletNumber = syncProgress.highest;\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"/src"}