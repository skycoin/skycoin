{"version":3,"file":"ng_class.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/directives/ng_class.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  DoCheck,\n  OnDestroy,\n  Directive,\n  ElementRef,\n  IterableDiffers,\n  KeyValueDiffers,\n  Renderer,\n  IterableDiffer,\n  KeyValueDiffer,\n  CollectionChangeRecord,\n  KeyValueChangeRecord\n} from '@angular/core';\nimport {isPresent, isString, isArray} from '../../src/facade/lang';\nimport {StringMapWrapper, isListLikeIterable} from '../../src/facade/collection';\nexport class NgClass implements DoCheck, OnDestroy {\n  private _iterableDiffer: IterableDiffer;\n  private _keyValueDiffer: KeyValueDiffer;\n  private _initialClasses: string[] = [];\n  private _rawClass: string[] | Set<string>;\n\n  constructor(private _iterableDiffers: IterableDiffers, private _keyValueDiffers: KeyValueDiffers,\n              private _ngEl: ElementRef, private _renderer: Renderer) {}\n\n  set initialClasses(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = isPresent(v) && isString(v) ? v.split(' ') : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n\n  set rawClass(v: string | string[] | Set<string>| {[key: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    if (isString(v)) {\n      v = (<string>v).split(' ');\n    }\n\n    this._rawClass = <string[] | Set<string>>v;\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n    if (isPresent(v)) {\n      if (isListLikeIterable(v)) {\n        this._iterableDiffer = this._iterableDiffers.find(v).create(null);\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(v).create(null);\n      }\n    }\n  }\n\n  ngDoCheck(): void {\n    if (isPresent(this._iterableDiffer)) {\n      var changes = this._iterableDiffer.diff(this._rawClass);\n      if (isPresent(changes)) {\n        this._applyIterableChanges(changes);\n      }\n    }\n    if (isPresent(this._keyValueDiffer)) {\n      var changes = this._keyValueDiffer.diff(this._rawClass);\n      if (isPresent(changes)) {\n        this._applyKeyValueChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy(): void { this._cleanupClasses(this._rawClass); }\n\n  private _cleanupClasses(rawClassVal: string[] | Set<string>| {[key: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n\n  private _applyKeyValueChanges(changes: any): void {\n    changes.forEachAddedItem(\n        (record: KeyValueChangeRecord) => { this._toggleClass(record.key, record.currentValue); });\n    changes.forEachChangedItem(\n        (record: KeyValueChangeRecord) => { this._toggleClass(record.key, record.currentValue); });\n    changes.forEachRemovedItem((record: KeyValueChangeRecord) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n\n  private _applyIterableChanges(changes: any): void {\n    changes.forEachAddedItem(\n        (record: CollectionChangeRecord) => { this._toggleClass(record.item, true); });\n    changes.forEachRemovedItem(\n        (record: CollectionChangeRecord) => { this._toggleClass(record.item, false); });\n  }\n\n  private _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(className => this._toggleClass(className, !isCleanup));\n  }\n\n  private _applyClasses(rawClassVal: string[] | Set<string>| {[key: string]: any},\n                        isCleanup: boolean) {\n    if (isPresent(rawClassVal)) {\n      if (isArray(rawClassVal)) {\n        (<string[]>rawClassVal).forEach(className => this._toggleClass(className, !isCleanup));\n      } else if (rawClassVal instanceof Set) {\n        (<Set<string>>rawClassVal).forEach(className => this._toggleClass(className, !isCleanup));\n      } else {\n        StringMapWrapper.forEach(<{[k: string]: any}>rawClassVal,\n                                 (expVal: any, className: string) => {\n                                   if (isPresent(expVal)) this._toggleClass(className, !isCleanup);\n                                 });\n      }\n    }\n  }\n\n  private _toggleClass(className: string, enabled: boolean): void {\n    className = className.trim();\n    if (className.length > 0) {\n      if (className.indexOf(' ') > -1) {\n        var classes = className.split(/\\s+/g);\n        for (var i = 0, len = classes.length; i < len; i++) {\n          this._renderer.setElementClass(this._ngEl.nativeElement, classes[i], enabled);\n        }\n      } else {\n        this._renderer.setElementClass(this._ngEl.nativeElement, className, enabled);\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngClass]', inputs: ['rawClass: ngClass', 'initialClasses: class']}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n"]}