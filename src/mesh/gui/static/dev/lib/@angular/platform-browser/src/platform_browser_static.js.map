{"version":3,"file":"platform_browser_static.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/platform_browser_static.ts"],"names":[],"mappings":";AAIE,qBAQK,eAAe,CAAC,CAAA;AAEvB,qBAAuC,eAAe,CAAC,CAAA;AACvD,+BAIO,kBAAkB,CAAC,CAAA;AAC1B,yBAAsC,sBAAsB,CAAC;AAArD,qEAAqD;AAC7D,0CAAsC,8CAA8C,CAAC;AAA7E,sFAA6E;AACrF,+BAMO,kBAAkB,CAAC;AALxB,+DAAiB;AACjB,iCAAE;AACF,uCAAK;AACL,6DAAgB;AAChB,+DACwB;AAE1B;;;;GAIG;AACU,oCAA4B;AACrC,kBAAkB,CAAC,6CAA4B,CAAC;AAEpD;IACE,EAAE,CAAC,CAAC,cAAO,CAAC,kBAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,qBAAc,CAAC,yBAAkB,CAAC,gBAAgB,CAAC,kCAAiB,CAAC,CAAC,CAAC;IACzE,CAAC;IACD,MAAM,CAAC,qBAAc,CAAC,wCAAuB,CAAC,CAAC;AACjD,CAAC;AALe,6BAAqB,wBAKpC,CAAA;AAED;;GAEG;AACH,yBAAgC,gBAAsB,EACtB,eAAwD,EACxD,aAAwB;IACtD,EAAE,CAAC,CAAC,gBAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7B,aAAa,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,YAAY,GAAG,gBAAS,CAAC,eAAe,CAAC,GAAG,CAAC,oCAA4B,EAAE,eAAe,CAAC;QAC/C,oCAA4B,CAAC;IAC7E,IAAI,WAAW,GACX,yBAAkB,CAAC,gBAAgB,CAAC,YAAY,EAAE,qBAAqB,EAAE,CAAC,QAAQ,CAAC,CAAC;IACxF,MAAM,CAAC,2BAAoB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC7D,CAAC;AAZe,uBAAe,kBAY9B,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  ComponentRef,\n  coreLoadAndBootstrap,\n  ReflectiveInjector,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform\n} from '@angular/core';\n\nimport {Type, isPresent, isBlank} from './facade/lang';\nimport {\n  BROWSER_APP_COMMON_PROVIDERS,\n  BROWSER_PROVIDERS,\n  BROWSER_PLATFORM_MARKER\n} from './browser_common';\nexport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nexport {\n  BROWSER_PROVIDERS,\n  By,\n  Title,\n  enableDebugTools,\n  disableDebugTools,\n} from './browser_common';\n\n/**\n * An array of providers that should be passed into `application()` when bootstrapping a component\n * when all templates\n * have been precompiled offline.\n */\nexport const BROWSER_APP_STATIC_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/ BROWSER_APP_COMMON_PROVIDERS;\n\nexport function browserStaticPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\n/**\n * See {@link bootstrap} for more information.\n */\nexport function bootstrapStatic(appComponentType: Type,\n                                customProviders?: Array<any /*Type | Provider | any[]*/>,\n                                initReflector?: Function): Promise<ComponentRef<any>> {\n  if (isPresent(initReflector)) {\n    initReflector();\n  }\n\n  let appProviders = isPresent(customProviders) ? [BROWSER_APP_STATIC_PROVIDERS, customProviders] :\n                                                  BROWSER_APP_STATIC_PROVIDERS;\n  var appInjector =\n      ReflectiveInjector.resolveAndCreate(appProviders, browserStaticPlatform().injector);\n  return coreLoadAndBootstrap(appInjector, appComponentType);\n}\n"]}