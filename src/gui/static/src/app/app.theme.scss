@use '@angular/material' as mat;
@import '@angular/material/theming';
@import '../customize/styling.scss';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.legacy-core();

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.

$mat-skycoin-primary: (
  100: $app-gradient-light,
  500: $app-main-color,
  contrast: (
    100: white,
    500: white,
  )
);

$mat-skycoin-accent: (
  500: #FFC125,
  contrast: (
    500: white
  )
);

$candy-app-primary: mat.define-palette($mat-skycoin-primary, 500, 100, 500);
$candy-app-accent:  mat.define-palette($mat-skycoin-accent, 500, 500, 500);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat.define-light-theme((
  color: (
    primary: $candy-app-primary,
    accent: $candy-app-accent,
    warn: $candy-app-warn,
  ),
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($candy-app-theme);

$mat-light-button-primary: (
  100: #777,
  500: #777,
  700: #777,
  contrast: (
    100: #777,
    500: #777,
    700: #777,
  )
);

$light-button-primary: mat.define-palette($mat-light-button-primary);
$light-button-theme: mat.define-light-theme((
  color: (
    primary: $light-button-primary,
    accent: $candy-app-accent,
  ),
));

.light-button-theme {
  @include mat.all-legacy-component-colors($light-button-theme);
}
