{"version":3,"file":"xhr_impl.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser-dynamic/src/xhr/xhr_impl.ts"],"names":[],"mappings":";;;;;;AAIE,yBAAkB,mBAAmB,CAAC,CAAA;AACxC,wBAA+C,0BAA0B,CAAC,CAAA;AAC1E,qBAAwB,uBAAuB,CAAC,CAAA;AAEhD;IAA6B,2BAAG;IAAhC;QAA6B,8BAAG;IAkChC,CAAC;IAjCC,qBAAG,GAAH,UAAI,GAAW;QACb,IAAI,SAAS,GAA+B,wBAAc,CAAC,SAAS,EAAE,CAAC;QACvE,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3B,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC;QAE1B,GAAG,CAAC,MAAM,GAAG;YACX,mFAAmF;YACnF,0FAA0F;YAC1F,IAAI,QAAQ,GAAG,gBAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;YAEzE,yDAAyD;YACzD,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;YAEpD,2DAA2D;YAC3D,uEAAuE;YACvE,iDAAiD;YACjD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,GAAG,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9B,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBACnC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,CAAC,MAAM,CAAC,oBAAkB,GAAK,EAAE,IAAI,CAAC,CAAC;YAClD,CAAC;QACH,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG,cAAa,SAAS,CAAC,MAAM,CAAC,oBAAkB,GAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9E,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;IAC3B,CAAC;IACH,cAAC;AAAD,CAAC,AAlCD,CAA6B,cAAG,GAkC/B;AAlCY,eAAO,UAkCnB,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {XHR} from '@angular/compiler';\nimport {PromiseWrapper, PromiseCompleter} from '../../src/facade/promise';\nimport {isPresent} from '../../src/facade/lang';\n\nexport class XHRImpl extends XHR {\n  get(url: string): Promise<string> {\n    var completer: PromiseCompleter < string >= PromiseWrapper.completer();\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\n      var response = isPresent(xhr.response) ? xhr.response : xhr.responseText;\n\n      // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n      var status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        completer.resolve(response);\n      } else {\n        completer.reject(`Failed to load ${url}`, null);\n      }\n    };\n\n    xhr.onerror = function() { completer.reject(`Failed to load ${url}`, null); };\n\n    xhr.send();\n    return completer.promise;\n  }\n}\n"]}