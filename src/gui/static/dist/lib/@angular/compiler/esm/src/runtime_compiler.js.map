{"version":3,"file":"runtime_compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/runtime_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable, ComponentFactory, ComponentResolver} from '@angular/core';\n\nimport {\n  IS_DART,\n  Type,\n  isBlank,\n} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\nimport {\n  ListWrapper,\n} from '../src/facade/collection';\nimport {PromiseWrapper} from '../src/facade/async';\nimport {\n  createHostComponentMeta,\n  CompileDirectiveMetadata,\n  CompilePipeMetadata,\n  CompileIdentifierMetadata\n} from './compile_metadata';\nimport {\n  TemplateAst,\n} from './template_ast';\nimport {StyleCompiler, StylesCompileDependency, StylesCompileResult} from './style_compiler';\nimport {ViewCompiler} from './view_compiler/view_compiler';\nimport {TemplateParser} from './template_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {CompilerConfig} from './config';\nimport * as ir from './output/output_ast';\nimport {jitStatements} from './output/output_jit';\nimport {interpretStatements} from './output/output_interpreter';\nimport {InterpretiveAppViewInstanceFactory} from './output/interpretive_view';\nimport {XHR} from './xhr';\nexport class RuntimeCompiler implements ComponentResolver {\n  private _styleCache: Map<string, Promise<string>> = new Map<string, Promise<string>>();\n  private _hostCacheKeys = new Map<Type, any>();\n  private _compiledTemplateCache = new Map<any, CompiledTemplate>();\n  private _compiledTemplateDone = new Map<any, Promise<CompiledTemplate>>();\n\n  constructor(private _metadataResolver: CompileMetadataResolver,\n              private _templateNormalizer: DirectiveNormalizer,\n              private _templateParser: TemplateParser, private _styleCompiler: StyleCompiler,\n              private _viewCompiler: ViewCompiler, private _xhr: XHR,\n              private _genConfig: CompilerConfig) {}\n\n  resolveComponent(componentType: Type): Promise<ComponentFactory<any>> {\n    var compMeta: CompileDirectiveMetadata =\n        this._metadataResolver.getDirectiveMetadata(componentType);\n    var hostCacheKey = this._hostCacheKeys.get(componentType);\n    if (isBlank(hostCacheKey)) {\n      hostCacheKey = new Object();\n      this._hostCacheKeys.set(componentType, hostCacheKey);\n      assertComponent(compMeta);\n      var hostMeta: CompileDirectiveMetadata =\n          createHostComponentMeta(compMeta.type, compMeta.selector);\n\n      this._loadAndCompileComponent(hostCacheKey, hostMeta, [compMeta], [], []);\n    }\n    return this._compiledTemplateDone.get(hostCacheKey)\n        .then((compiledTemplate: CompiledTemplate) => new ComponentFactory(\n                  compMeta.selector, compiledTemplate.viewFactory, componentType));\n  }\n\n  clearCache() {\n    this._styleCache.clear();\n    this._compiledTemplateCache.clear();\n    this._compiledTemplateDone.clear();\n    this._hostCacheKeys.clear();\n  }\n\n\n  private _loadAndCompileComponent(cacheKey: any, compMeta: CompileDirectiveMetadata,\n                                   viewDirectives: CompileDirectiveMetadata[],\n                                   pipes: CompilePipeMetadata[],\n                                   compilingComponentsPath: any[]): CompiledTemplate {\n    var compiledTemplate = this._compiledTemplateCache.get(cacheKey);\n    var done = this._compiledTemplateDone.get(cacheKey);\n    if (isBlank(compiledTemplate)) {\n      compiledTemplate = new CompiledTemplate();\n      this._compiledTemplateCache.set(cacheKey, compiledTemplate);\n      done =\n          PromiseWrapper.all(\n                            [<any>this._compileComponentStyles(compMeta)].concat(viewDirectives.map(\n                                dirMeta => this._templateNormalizer.normalizeDirective(dirMeta))))\n              .then((stylesAndNormalizedViewDirMetas: any[]) => {\n                var normalizedViewDirMetas = stylesAndNormalizedViewDirMetas.slice(1);\n                var styles = stylesAndNormalizedViewDirMetas[0];\n                var parsedTemplate =\n                    this._templateParser.parse(compMeta, compMeta.template.template,\n                                               normalizedViewDirMetas, pipes, compMeta.type.name);\n\n                var childPromises = [];\n                compiledTemplate.init(this._compileComponent(compMeta, parsedTemplate, styles,\n                                                             pipes, compilingComponentsPath,\n                                                             childPromises));\n                return PromiseWrapper.all(childPromises).then((_) => { return compiledTemplate; });\n              });\n      this._compiledTemplateDone.set(cacheKey, done);\n    }\n    return compiledTemplate;\n  }\n\n  private _compileComponent(compMeta: CompileDirectiveMetadata, parsedTemplate: TemplateAst[],\n                            styles: string[], pipes: CompilePipeMetadata[],\n                            compilingComponentsPath: any[],\n                            childPromises: Promise<any>[]): Function {\n    var compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate,\n        new ir.ExternalExpr(new CompileIdentifierMetadata({runtime: styles})), pipes);\n    compileResult.dependencies.forEach((dep) => {\n      var childCompilingComponentsPath = ListWrapper.clone(compilingComponentsPath);\n\n      var childCacheKey = dep.comp.type.runtime;\n      var childViewDirectives: CompileDirectiveMetadata[] =\n          this._metadataResolver.getViewDirectivesMetadata(dep.comp.type.runtime);\n      var childViewPipes: CompilePipeMetadata[] =\n          this._metadataResolver.getViewPipesMetadata(dep.comp.type.runtime);\n      var childIsRecursive = ListWrapper.contains(childCompilingComponentsPath, childCacheKey);\n      childCompilingComponentsPath.push(childCacheKey);\n\n      var childComp =\n          this._loadAndCompileComponent(dep.comp.type.runtime, dep.comp, childViewDirectives,\n                                        childViewPipes, childCompilingComponentsPath);\n      dep.factoryPlaceholder.runtime = childComp.proxyViewFactory;\n      dep.factoryPlaceholder.name = `viewFactory_${dep.comp.type.name}`;\n      if (!childIsRecursive) {\n        // Only wait for a child if it is not a cycle\n        childPromises.push(this._compiledTemplateDone.get(childCacheKey));\n      }\n    });\n    var factory;\n    if (IS_DART || !this._genConfig.useJit) {\n      factory = interpretStatements(compileResult.statements, compileResult.viewFactoryVar,\n                                    new InterpretiveAppViewInstanceFactory());\n    } else {\n      factory = jitStatements(`${compMeta.type.name}.template.js`, compileResult.statements,\n                              compileResult.viewFactoryVar);\n    }\n    return factory;\n  }\n\n  private _compileComponentStyles(compMeta: CompileDirectiveMetadata): Promise<string[]> {\n    var compileResult = this._styleCompiler.compileComponent(compMeta);\n    return this._resolveStylesCompileResult(compMeta.type.name, compileResult);\n  }\n\n  private _resolveStylesCompileResult(sourceUrl: string,\n                                      result: StylesCompileResult): Promise<string[]> {\n    var promises = result.dependencies.map((dep) => this._loadStylesheetDep(dep));\n    return PromiseWrapper.all(promises)\n        .then((cssTexts) => {\n          var nestedCompileResultPromises = [];\n          for (var i = 0; i < result.dependencies.length; i++) {\n            var dep = result.dependencies[i];\n            var cssText = cssTexts[i];\n            var nestedCompileResult =\n                this._styleCompiler.compileStylesheet(dep.moduleUrl, cssText, dep.isShimmed);\n            nestedCompileResultPromises.push(\n                this._resolveStylesCompileResult(dep.moduleUrl, nestedCompileResult));\n          }\n          return PromiseWrapper.all(nestedCompileResultPromises);\n        })\n        .then((nestedStylesArr) => {\n          for (var i = 0; i < result.dependencies.length; i++) {\n            var dep = result.dependencies[i];\n            dep.valuePlaceholder.runtime = nestedStylesArr[i];\n            dep.valuePlaceholder.name = `importedStyles${i}`;\n          }\n          if (IS_DART || !this._genConfig.useJit) {\n            return interpretStatements(result.statements, result.stylesVar,\n                                       new InterpretiveAppViewInstanceFactory());\n          } else {\n            return jitStatements(`${sourceUrl}.css.js`, result.statements, result.stylesVar);\n          }\n        });\n  }\n\n  private _loadStylesheetDep(dep: StylesCompileDependency): Promise<string> {\n    var cacheKey = `${dep.moduleUrl}${dep.isShimmed ? '.shim' : ''}`;\n    var cssTextPromise = this._styleCache.get(cacheKey);\n    if (isBlank(cssTextPromise)) {\n      cssTextPromise = this._xhr.get(dep.moduleUrl);\n      this._styleCache.set(cacheKey, cssTextPromise);\n    }\n    return cssTextPromise;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: CompileMetadataResolver, },\n{type: DirectiveNormalizer, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: XHR, },\n{type: CompilerConfig, },\n];\n}\n\nclass CompiledTemplate {\n  viewFactory: Function = null;\n  proxyViewFactory: Function;\n  constructor() {\n    this.proxyViewFactory = (viewUtils, childInjector, contextEl) =>\n        this.viewFactory(viewUtils, childInjector, contextEl);\n  }\n\n  init(viewFactory: Function) { this.viewFactory = viewFactory; }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n"]}