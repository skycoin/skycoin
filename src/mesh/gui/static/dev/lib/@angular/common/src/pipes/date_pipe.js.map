{"version":3,"file":"date_pipe.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/date_pipe.ts"],"names":[],"mappings":";AAIE,qBAA8C,eAAe,CAAC,CAAA;AAChE,qBAKO,uBAAuB,CAAC,CAAA;AAC/B,qBAA4B,uBAAuB,CAAC,CAAA;AACpD,2BAA+B,6BAA6B,CAAC,CAAA;AAE7D,gDAA2C,mCAAmC,CAAC,CAAA;AAG/E,iFAAiF;AACjF,IAAI,aAAa,GAAW,OAAO,CAAC;AACpC;IAAA;IAmCA,CAAC;IArBC,4BAAS,GAAT,UAAU,KAAU,EAAE,OAA8B;QAA9B,uBAA8B,GAA9B,sBAA8B;QAClD,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,8DAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,GAAG,kBAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,6BAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1D,OAAO,GAAW,6BAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC;QACD,MAAM,CAAC,oBAAa,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,2BAAQ,GAAR,UAAS,GAAQ,IAAa,MAAM,CAAC,aAAM,CAAC,GAAG,CAAC,IAAI,eAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IA7BpE,gBAAgB;IACT,iBAAQ,GAA4B;QACzC,QAAQ,EAAE,UAAU;QACpB,OAAO,EAAE,OAAO;QAChB,UAAU,EAAE,YAAY;QACxB,UAAU,EAAE,QAAQ;QACpB,YAAY,EAAE,OAAO;QACrB,WAAW,EAAE,KAAK;QAClB,YAAY,EAAE,KAAK;QACnB,WAAW,EAAE,IAAI;KAClB,CAAC;IAoBG,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;QACpD,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,eAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,gBAAQ,WAmCpB,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {PipeTransform, Pipe, Injectable} from '@angular/core';\nimport {\n  isDate,\n  isNumber,\n  DateWrapper,\n  isBlank,\n} from '../../src/facade/lang';\nimport {DateFormatter} from '../../src/facade/intl';\nimport {StringMapWrapper} from '../../src/facade/collection';\n\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\n\n// TODO: move to a global configurable location along with other i18n components.\nvar defaultLocale: string = 'en-US';\nexport class DatePipe implements PipeTransform {\n  /** @internal */\n  static _ALIASES: {[key: string]: String} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n\n\n  transform(value: any, pattern: string = 'mediumDate'): string {\n    if (isBlank(value)) return null;\n\n    if (!this.supports(value)) {\n      throw new InvalidPipeArgumentException(DatePipe, value);\n    }\n\n    if (isNumber(value)) {\n      value = DateWrapper.fromMillis(value);\n    }\n    if (StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {\n      pattern = <string>StringMapWrapper.get(DatePipe._ALIASES, pattern);\n    }\n    return DateFormatter.format(value, defaultLocale, pattern);\n  }\n\n  supports(obj: any): boolean { return isDate(obj) || isNumber(obj); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n{ type: Injectable },\n];\n}\n"]}