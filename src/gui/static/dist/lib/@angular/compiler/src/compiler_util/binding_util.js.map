{"version":3,"file":"binding_util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/compiler_util/binding_util.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,WAAW,EAAE,iBAAiB,EAAC,MAAM,gBAAgB;OAEtD,KAAK,CAAC,MAAM,sBAAsB;AAIzC;IACE,2BAAmB,UAA0B,EAAS,SAAiB;QAApD,eAAU,GAAV,UAAU,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAC7E,wBAAC;AAAD,CAAC,AAFD,IAEC;AAED,wCAAwC,OAAqB;IAC3D,IAAM,SAAS,GAAG,KAAG,OAAO,CAAC,MAAM,CAAC,MAAQ,CAAC;IAC7C,IAAM,SAAS,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;IACjD,2EAA2E;IAC3E,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtF,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC3B,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;SAC/D,MAAM,EAAE,CAAC,CAAC;IACtC,MAAM,CAAC,IAAI,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACrD,CAAC;AAED,uCACI,UAAwC,EAAE,SAAyB,EACnE,gBAA8B,EAAE,OAAsB;IACxD,IAAI,SAAS,GAAiB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7F,gBAAgB,EAAE,SAAS,EAAE,UAAU,CAAC,WAAW;KACpD,CAAC,CAAC;IACH,EAAE,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3B,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IACD,MAAM,CACD,UAAU,CAAC,KAAK;QAAE,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC;YAC7C,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;SACnF,CAAC,CAAC;MACJ,CAAC;AACJ,CAAC;AAED,6BAA6B,SAAiB;IAC5C,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAS,SAAW,CAAC,CAAC;AAChD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport {ClassBuilder} from '../output/class_builder';\nimport * as o from '../output/output_ast';\n\nimport {ConvertPropertyBindingResult} from './expression_converter';\n\nexport class CheckBindingField {\n  constructor(public expression: o.ReadPropExpr, public bindingId: string) {}\n}\n\nexport function createCheckBindingField(builder: ClassBuilder): CheckBindingField {\n  const bindingId = `${builder.fields.length}`;\n  const fieldExpr = createBindFieldExpr(bindingId);\n  // private is fine here as no child view will reference the cached value...\n  builder.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));\n  builder.ctorStmts.push(o.THIS_EXPR.prop(fieldExpr.name)\n                             .set(o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n                             .toStmt());\n  return new CheckBindingField(fieldExpr, bindingId);\n}\n\nexport function createCheckBindingStmt(\n    evalResult: ConvertPropertyBindingResult, fieldExpr: o.ReadPropExpr,\n    throwOnChangeVar: o.Expression, actions: o.Statement[]): o.Statement[] {\n  let condition: o.Expression = o.importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n    throwOnChangeVar, fieldExpr, evalResult.currValExpr\n  ]);\n  if (evalResult.forceUpdate) {\n    condition = evalResult.forceUpdate.or(condition);\n  }\n  return [\n    ...evalResult.stmts, new o.IfStmt(condition, actions.concat([\n      <o.Statement>o.THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n    ]))\n  ];\n}\n\nfunction createBindFieldExpr(bindingId: string): o.ReadPropExpr {\n  return o.THIS_EXPR.prop(`_expr_${bindingId}`);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}