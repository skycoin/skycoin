{"version":3,"file":"ng_if.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/directives/ng_if.ts"],"names":[],"mappings":"OAIS,EAAC,SAAS,EAAE,gBAAgB,EAAE,WAAW,EAAC,MAAM,eAAe;OACjE,EAAC,OAAO,EAAC,MAAM,uBAAuB;AAC7C;IAGE,YAAoB,cAAgC,EAAU,YAAiC;QAA3E,mBAAc,GAAd,cAAc,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAFvF,mBAAc,GAAY,IAAI,CAAC;IAGvC,CAAC;IAED,IAAI,IAAI,CAAC,YAAiB,CAAC,aAAa;QACtC,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;AAQH,CAAC;AAPM,eAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAC,EAAG,EAAE;CACpE,CAAC;AACK,mBAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Directive, ViewContainerRef, TemplateRef} from '@angular/core';\nimport {isBlank} from '../../src/facade/lang';\nexport class NgIf {\n  private _prevCondition: boolean = null;\n\n  constructor(private _viewContainer: ViewContainerRef, private _templateRef: TemplateRef<Object>) {\n  }\n\n  set ngIf(newCondition: any /* boolean */) {\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this._viewContainer.createEmbeddedView(this._templateRef);\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this._viewContainer.clear();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngIf]', inputs: ['ngIf']}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n"]}