{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/util.ts"],"names":[],"mappings":"OAIS,EAAC,aAAa,EAAC,MAAM,uBAAuB;AAErD,IAAI,iBAAiB,GAAG,UAAU,CAAC;AACnC,IAAI,gBAAgB,GAAG,WAAW,CAAC;AAGnC,oCAAoC,KAAa;IAC/C,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,iBAAiB,EACxB,CAAC,CAAC,OAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC;AAED,oCAAoC,KAAa;IAC/C,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,EACvB,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {StringWrapper} from '../../src/facade/lang';\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP,\n                                        (m) => { return '-' + m[1].toLowerCase(); });\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP,\n                                        (m) => { return m[1].toUpperCase(); });\n}\n"]}