{"version":3,"file":"date_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/date_pipe.ts"],"names":[],"mappings":"OAIS,EAAgB,IAAI,EAAE,UAAU,EAAC,MAAM,eAAe;OACxD,EACL,MAAM,EACN,QAAQ,EACR,WAAW,EACX,OAAO,EACR,MAAM,uBAAuB;OACvB,EAAC,aAAa,EAAC,MAAM,uBAAuB;OAC5C,EAAC,gBAAgB,EAAC,MAAM,6BAA6B;OAErD,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;AAG9E,iFAAiF;AACjF,IAAI,aAAa,GAAW,OAAO,CAAC;AACpC;IAcE,SAAS,CAAC,KAAU,EAAE,OAAO,GAAW,YAAY;QAClD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,4BAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1D,OAAO,GAAW,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ,CAAC,GAAQ,IAAa,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAKtE,CAAC;AAlCC,gBAAgB;AACT,iBAAQ,GAA4B;IACzC,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,OAAO;IAChB,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,OAAO;IACrB,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;IACnB,WAAW,EAAE,IAAI;CAClB,CAAC;AAoBG,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;IACpD,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {PipeTransform, Pipe, Injectable} from '@angular/core';\nimport {\n  isDate,\n  isNumber,\n  DateWrapper,\n  isBlank,\n} from '../../src/facade/lang';\nimport {DateFormatter} from '../../src/facade/intl';\nimport {StringMapWrapper} from '../../src/facade/collection';\n\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\n\n// TODO: move to a global configurable location along with other i18n components.\nvar defaultLocale: string = 'en-US';\nexport class DatePipe implements PipeTransform {\n  /** @internal */\n  static _ALIASES: {[key: string]: String} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n\n\n  transform(value: any, pattern: string = 'mediumDate'): string {\n    if (isBlank(value)) return null;\n\n    if (!this.supports(value)) {\n      throw new InvalidPipeArgumentException(DatePipe, value);\n    }\n\n    if (isNumber(value)) {\n      value = DateWrapper.fromMillis(value);\n    }\n    if (StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {\n      pattern = <string>StringMapWrapper.get(DatePipe._ALIASES, pattern);\n    }\n    return DateFormatter.format(value, defaultLocale, pattern);\n  }\n\n  supports(obj: any): boolean { return isDate(obj) || isNumber(obj); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n{ type: Injectable },\n];\n}\n"]}