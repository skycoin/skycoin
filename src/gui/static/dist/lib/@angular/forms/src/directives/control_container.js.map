{"version":3,"file":"control_container.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/control_container.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,wBAAwB,EAAC,MAAM,8BAA8B;AAIrE;;;;;;GAMG;AACH;IAAsC,oCAAwB;IAA9D;QAAsC,8BAAwB;IAY9D,CAAC;IANC,sBAAI,2CAAa;QAHjB;;WAEG;aACH,cAA4B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAK1C,sBAAI,kCAAI;QAHR;;WAEG;aACH,cAAuB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IACvC,uBAAC;AAAD,CAAC,AAZD,CAAsC,wBAAwB,GAY7D","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {Form} from './form_interface';\n\n\n/**\n * A directive that contains multiple {@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * @stable\n */\nexport class ControlContainer extends AbstractControlDirective {\n  name: string;\n\n  /**\n   * Get the form to which this container belongs.\n   */\n  get formDirective(): Form { return null; }\n\n  /**\n   * Get the path to this container.\n   */\n  get path(): string[] { return null; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}