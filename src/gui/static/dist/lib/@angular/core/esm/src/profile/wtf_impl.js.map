{"version":3,"file":"wtf_impl.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/profile/wtf_impl.ts"],"names":[],"mappings":"OAIS,EAAC,MAAM,EAAC,MAAM,uBAAuB;AA0B9C,IAAI,KAAY,CAAC;AACjB,IAAI,MAAc,CAAC;AAEnB;IACE,IAAI,GAAG,GAAQ,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAED,4BAA4B,SAAiB,EAAE,KAAK,GAAQ,IAAI;IAC9D,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC;AAED,sBAAyB,KAAY,EAAE,WAAe;IACpD,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IACrC,MAAM,CAAC,WAAW,CAAC;AACrB,CAAC;AAED,+BAA+B,SAAiB,EAAE,MAAc;IAC9D,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACjD,CAAC;AAED,6BAA6B,KAAY;IACvC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {global} from '../../src/facade/lang';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any);\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range);\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args): any; }\n\nvar trace: Trace;\nvar events: Events;\n\nexport function detectWTF(): boolean {\n  var wtf: WTF = global['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope, returnValue?: T): T {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n"]}