{"version":3,"sources":["app/angular2/zone.js/lib/browser/event-target.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;QAIG,aAAa,EAEb,eAAe,EAGf,YAAY;IAElB,0BAAiC,OAAO;QACtC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,yEAAyE;YACzE,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAC7F,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,sDAAsD;YACtD,4FAA4F;YAC5F,IAAI,GAAG,eAAe,CAAC;QACzB,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,+BAAuB,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAlBD,+CAkBC,CAAA;;;;;;;YAzBK,aAAa,GACf,2aAA2a,CAAC;YAC1a,eAAe,GACjB,qWAAqW;iBAChW,KAAK,CAAC,GAAG,CAAC,CAAC;YACd,YAAY,GAAG,aAAa,CAAC","file":"event-target.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {patchEventTargetMethods} from '../common/utils';\n\nconst WTF_ISSUE_555 =\n    'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\nconst NO_EVENT_TARGET =\n    'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex'\n        .split(',');\nconst EVENT_TARGET = 'EventTarget';\n\nexport function eventTargetPatch(_global) {\n  var apis = [];\n  var isWtf = _global['wtf'];\n  if (isWtf) {\n    // Workaround for: https://github.com/google/tracing-framework/issues/555\n    apis = WTF_ISSUE_555.split(',').map((v) => 'HTML' + v + 'Element').concat(NO_EVENT_TARGET);\n  } else if (_global[EVENT_TARGET]) {\n    apis.push(EVENT_TARGET);\n  } else {\n    // Note: EventTarget is not available in all browsers,\n    // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n    apis = NO_EVENT_TARGET;\n  }\n\n  for (var i = 0; i < apis.length; i++) {\n    var type = _global[apis[i]];\n    patchEventTargetMethods(type && type.prototype);\n  }\n}\n"]}