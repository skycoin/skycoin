{"version":3,"file":"ts_emitter.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/ts_emitter.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import * as o from './output_ast';\nimport {isPresent, isBlank, isArray} from '../../src/facade/lang';\nimport {BaseException} from '../../src/facade/exceptions';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\nimport {\n  OutputEmitter,\n  EmitterVisitorContext,\n  AbstractEmitterVisitor,\n  CATCH_ERROR_VAR,\n  CATCH_STACK_VAR\n} from './abstract_emitter';\nimport {ImportGenerator} from './path_util';\n\nvar _debugModuleUrl = 'asset://debug/lib';\n\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type |\n                                           any[]): string {\n  var converter = new _TsEmitterVisitor(_debugModuleUrl);\n  var ctx = EmitterVisitorContext.createRoot([]);\n  var asts: any[];\n  if (isArray(ast)) {\n    asts = <any[]>ast;\n  } else {\n    asts = [ast];\n  }\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new BaseException(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\n\nexport class TypeScriptEmitter implements OutputEmitter {\n  constructor(private _importGenerator: ImportGenerator) {}\n  emitStatements(moduleUrl: string, stmts: o.Statement[], exportedVars: string[]): string {\n    var converter = new _TsEmitterVisitor(moduleUrl);\n    var ctx = EmitterVisitorContext.createRoot(exportedVars);\n    converter.visitAllStatements(stmts, ctx);\n    var srcParts = [];\n    converter.importsWithPrefixes.forEach((prefix, importedModuleUrl) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      srcParts.push(\n          `imp` +\n          `ort * as ${prefix} from '${this._importGenerator.getImportPath(moduleUrl, importedModuleUrl)}';`);\n    });\n    srcParts.push(ctx.toSource());\n    return srcParts.join('\\n');\n  }\n}\n\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\n  constructor(private _moduleUrl: string) { super(false); }\n\n  importsWithPrefixes = new Map<string, string>();\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(`export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(`const`);\n    } else {\n      ctx.print(`var`);\n    }\n    ctx.print(` ${stmt.name}`);\n    if (isPresent(stmt.type)) {\n      ctx.print(`:`);\n      stmt.type.visitType(this, ctx);\n    }\n    ctx.print(` = `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(`;`);\n    return null;\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(`(<`);\n    ast.type.visitType(this, ctx);\n    ctx.print(`>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(`)`);\n    return null;\n  }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(`export `);\n    }\n    ctx.print(`class ${stmt.name}`);\n    if (isPresent(stmt.parent)) {\n      ctx.print(` extends `);\n      stmt.parent.visitExpression(this, ctx);\n    }\n    ctx.println(` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (isPresent(stmt.constructorMethod)) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(`}`);\n    ctx.popClass();\n    return null;\n  }\n  private _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(`private `);\n    }\n    ctx.print(field.name);\n    if (isPresent(field.type)) {\n      ctx.print(`:`);\n      field.type.visitType(this, ctx);\n    } else {\n      ctx.print(`: any`);\n    }\n    ctx.println(`;`);\n  }\n  private _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(`private `);\n    }\n    ctx.print(`get ${getter.name}()`);\n    if (isPresent(getter.type)) {\n      ctx.print(`:`);\n      getter.type.visitType(this, ctx);\n    }\n    ctx.println(` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(`}`);\n  }\n  private _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(`constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(`) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(`}`);\n  }\n  private _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(`private `);\n    }\n    ctx.print(`${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(`):`);\n    if (isPresent(method.type)) {\n      method.type.visitType(this, ctx);\n    } else {\n      ctx.print(`void`);\n    }\n    ctx.println(` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(`}`);\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(`(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(`):`);\n    if (isPresent(ast.type)) {\n      ast.type.visitType(this, ctx);\n    } else {\n      ctx.print(`void`);\n    }\n    ctx.println(` => {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(`}`);\n    return null;\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (ctx.isExportedVar(stmt.name)) {\n      ctx.print(`export `);\n    }\n    ctx.print(`function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(`):`);\n    if (isPresent(stmt.type)) {\n      stmt.type.visitType(this, ctx);\n    } else {\n      ctx.print(`void`);\n    }\n    ctx.println(` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(`}`);\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(`try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(`} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    var catchStmts = [\n      <o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack'))\n          .toDeclStmt(null, [o.StmtModifier.Final])\n    ].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(`}`);\n    return null;\n  }\n\n  visitBuiltintType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    var typeStr;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      default:\n        throw new BaseException(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(typeStr);\n    return null;\n  }\n  visitExternalType(ast: o.ExternalType, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n  visitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    if (isPresent(type.of)) {\n      type.of.visitType(this, ctx);\n    } else {\n      ctx.print(`any`);\n    }\n    ctx.print(`[]`);\n    return null;\n  }\n  visitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(`{[key: string]:`);\n    if (isPresent(type.valueType)) {\n      type.valueType.visitType(this, ctx);\n    } else {\n      ctx.print(`any`);\n    }\n    ctx.print(`}`);\n    return null;\n  }\n\n  getBuiltinMethodName(method: o.BuiltinMethod): string {\n    var name;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.bind:\n        name = 'bind';\n        break;\n      default:\n        throw new BaseException(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n\n\n  private _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects((param) => {\n      ctx.print(param.name);\n      if (isPresent(param.type)) {\n        ctx.print(`:`);\n        param.type.visitType(this, ctx);\n      }\n    }, params, ctx, ',');\n  }\n\n  private _visitIdentifier(value: CompileIdentifierMetadata, typeParams: o.Type[],\n                           ctx: EmitterVisitorContext): void {\n    if (isBlank(value.name)) {\n      throw new BaseException(`Internal error: unknown identifier ${value}`);\n    }\n    if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n      var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n      if (isBlank(prefix)) {\n        prefix = `import${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(value.moduleUrl, prefix);\n      }\n      ctx.print(`${prefix}.`);\n    }\n    ctx.print(value.name);\n    if (isPresent(typeParams) && typeParams.length > 0) {\n      ctx.print(`<`);\n      this.visitAllObjects((type) => type.visitType(this, ctx), typeParams, ctx, ',');\n      ctx.print(`>`);\n    }\n  }\n}\n"]}