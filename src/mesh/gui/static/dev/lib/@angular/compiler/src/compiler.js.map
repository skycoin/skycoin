{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/compiler.ts"],"names":[],"mappings":";;;;AAIE,qBAAsC,eAAe,CAAC,CAAA;AACxD,qBAAgC,oBAAoB,CAAC,CAAA;AAErD,iBAAc,gBAAgB,CAAC,EAAA;AAC/B,gCAAkC,mBAAmB,CAAC;AAA9C,oEAA8C;AACtD,uBAA0C,UAAU,CAAC;AAA7C,iDAAc;AAAE,2CAA6B;AACrD,iBAAc,oBAAoB,CAAC,EAAA;AACnC,iBAAc,oBAAoB,CAAC,EAAA;AACnC,iCAA8B,oBAAoB,CAAC;AAA3C,6DAA2C;AACnD,iBAAc,gBAAgB,CAAC,EAAA;AAC/B,iBAAc,OAAO,CAAC,EAAA;AAEtB,8BAA2B,iBAAiB,CAAC;AAArC,oDAAqC;AAC7C,mCAAgC,sBAAsB,CAAC;AAA/C,mEAA+C;AACvD,8BAA2B,iBAAiB,CAAC;AAArC,oDAAqC;AAE7C,gCAA6B,mBAAmB,CAAC,CAAA;AACjD,4BAAyB,eAAe,CAAC,CAAA;AACzC,qCAAkC,wBAAwB,CAAC,CAAA;AAC3D,kCAAsC,qBAAqB,CAAC,CAAA;AAC5D,+BAA4B,kBAAkB,CAAC,CAAA;AAC/C,8BAA2B,+BAA+B,CAAC,CAAA;AAC3D,uBAA6B,UAAU,CAAC,CAAA;AACxC,iCAA8B,oBAAoB,CAAC,CAAA;AACnD,wCAAoC,kCAAkC,CAAC,CAAA;AACvE,4CAAuC,sCAAsC,CAAC,CAAA;AAC9E,6BAAwD,gBAAgB,CAAC,CAAA;AACzE,uBAAqB,4BAA4B,CAAC,CAAA;AAClD,sBAAoB,2BAA2B,CAAC,CAAA;AAChD,8BAA2B,iBAAiB,CAAC,CAAA;AAC7C,mCAAgC,sBAAsB,CAAC,CAAA;AACvD,8BAA2B,iBAAiB,CAAC,CAAA;AAE7C;IACE,MAAM,CAAC,IAAI,uBAAc,CAAC,wBAAiB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9D,CAAC;AAED;;;GAGG;AACU,0BAAkB;AAC3B,kBAAkB,CAAA;IAChB,aAAK;IACL,eAAM;IACN,wBAAU;IACV,gCAAc;IACd,0CAAmB;IACnB,2CAAuB;IACvB,2CAA4B;IAC5B,8BAAa;IACb,4BAAY;IACZ,qBAAqB,CAAC,EAAC,OAAO,EAAE,uBAAc,EAAE,UAAU,EAAE,qBAAqB,EAAE,IAAI,EAAE,EAAE,EAAC;IAC5F,kCAAe;IACf,qBAAqB,CAAC,EAAC,OAAO,EAAE,wBAAiB,EAAE,WAAW,EAAE,kCAAe,EAAC;IAChF,sDAAwB;IACxB,qBAAqB,CAAC,EAAC,OAAO,EAAE,+CAAqB,EAAE,WAAW,EAAE,sDAAwB,EAAC;IAC7F,0BAAW;IACX,4BAAY;IACZ,sCAAiB;IACjB,4BAAY;CACb,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {ComponentResolver, Type} from '@angular/core';\nimport {assertionsEnabled} from '../src/facade/lang';\n\nexport * from './template_ast';\nexport {TEMPLATE_TRANSFORMS} from './template_parser';\nexport {CompilerConfig, RenderTypes} from './config';\nexport * from './compile_metadata';\nexport * from './offline_compiler';\nexport {RuntimeCompiler} from './runtime_compiler';\nexport * from './url_resolver';\nexport * from './xhr';\n\nexport {ViewResolver} from './view_resolver';\nexport {DirectiveResolver} from './directive_resolver';\nexport {PipeResolver} from './pipe_resolver';\n\nimport {TemplateParser} from './template_parser';\nimport {HtmlParser} from './html_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {StyleCompiler} from './style_compiler';\nimport {ViewCompiler} from './view_compiler/view_compiler';\nimport {CompilerConfig} from './config';\nimport {RuntimeCompiler} from './runtime_compiler';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {DomElementSchemaRegistry} from './schema/dom_element_schema_registry';\nimport {UrlResolver, DEFAULT_PACKAGE_URL_PROVIDER} from './url_resolver';\nimport {Parser} from './expression_parser/parser';\nimport {Lexer} from './expression_parser/lexer';\nimport {ViewResolver} from './view_resolver';\nimport {DirectiveResolver} from './directive_resolver';\nimport {PipeResolver} from './pipe_resolver';\n\nfunction _createCompilerConfig() {\n  return new CompilerConfig(assertionsEnabled(), false, true);\n}\n\n/**\n * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const COMPILER_PROVIDERS: Array<any | Type | {[k: string]: any} | any[]> =\n    /*@ts2dart_const*/[\n      Lexer,\n      Parser,\n      HtmlParser,\n      TemplateParser,\n      DirectiveNormalizer,\n      CompileMetadataResolver,\n      DEFAULT_PACKAGE_URL_PROVIDER,\n      StyleCompiler,\n      ViewCompiler,\n      /*@ts2dart_Provider*/ {provide: CompilerConfig, useFactory: _createCompilerConfig, deps: []},\n      RuntimeCompiler,\n      /*@ts2dart_Provider*/ {provide: ComponentResolver, useExisting: RuntimeCompiler},\n      DomElementSchemaRegistry,\n      /*@ts2dart_Provider*/ {provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n      UrlResolver,\n      ViewResolver,\n      DirectiveResolver,\n      PipeResolver\n    ];\n"]}