{"version":3,"file":"debug_context.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/debug_context.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isPresent, isBlank} from '../../src/facade/lang';\nimport {ListWrapper, StringMapWrapper} from '../../src/facade/collection';\nimport {Injector} from '../di';\nimport {ViewType} from './view_type';\nimport {RenderDebugInfo} from '../render/api';\nimport {DebugAppView} from './view';\n\n/* @ts2dart_const */\nexport class StaticNodeDebugInfo {\n  constructor(public providerTokens: any[], public componentToken: any,\n              public refTokens: {[key: string]: any}) {}\n}\n\nexport class DebugContext implements RenderDebugInfo {\n  constructor(private _view: DebugAppView<any>, private _nodeIndex: number, private _tplRow: number,\n              private _tplCol: number) {}\n\n  private get _staticNodeInfo(): StaticNodeDebugInfo {\n    return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n  }\n\n  get context() { return this._view.context; }\n  get component() {\n    var staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n      return this.injector.get(staticNodeInfo.componentToken);\n    }\n    return null;\n  }\n  get componentRenderElement() {\n    var componentView = this._view;\n    while (isPresent(componentView.declarationAppElement) &&\n           componentView.type !== ViewType.COMPONENT) {\n      componentView = <DebugAppView<any>>componentView.declarationAppElement.parentView;\n    }\n    return isPresent(componentView.declarationAppElement) ?\n               componentView.declarationAppElement.nativeElement :\n               null;\n  }\n  get injector(): Injector { return this._view.injector(this._nodeIndex); }\n  get renderNode(): any {\n    if (isPresent(this._nodeIndex) && isPresent(this._view.allNodes)) {\n      return this._view.allNodes[this._nodeIndex];\n    } else {\n      return null;\n    }\n  }\n  get providerTokens(): any[] {\n    var staticNodeInfo = this._staticNodeInfo;\n    return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n  }\n  get source(): string {\n    return `${this._view.componentType.templateUrl}:${this._tplRow}:${this._tplCol}`;\n  }\n  get references(): {[key: string]: any} {\n    var varValues: {[key: string]: string} = {};\n    var staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo)) {\n      var refs = staticNodeInfo.refTokens;\n      StringMapWrapper.forEach(refs, (refToken, refName) => {\n        var varValue;\n        if (isBlank(refToken)) {\n          varValue = isPresent(this._view.allNodes) ? this._view.allNodes[this._nodeIndex] : null;\n        } else {\n          varValue = this._view.injectorGet(refToken, this._nodeIndex, null);\n        }\n        varValues[refName] = varValue;\n      });\n    }\n    return varValues;\n  }\n}\n"]}