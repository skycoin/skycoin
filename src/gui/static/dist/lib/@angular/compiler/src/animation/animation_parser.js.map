{"version":3,"file":"animation_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/animation/animation_parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {CompileAnimationAnimateMetadata, CompileAnimationEntryMetadata, CompileAnimationGroupMetadata, CompileAnimationKeyframesSequenceMetadata, CompileAnimationMetadata, CompileAnimationSequenceMetadata, CompileAnimationStateDeclarationMetadata, CompileAnimationStateTransitionMetadata, CompileAnimationStyleMetadata, CompileAnimationWithStepsMetadata, CompileDirectiveMetadata} from '../compile_metadata';\nimport {StringMapWrapper} from '../facade/collection';\nimport {isBlank, isPresent} from '../facade/lang';\nimport {ParseError} from '../parse_util';\nimport {ANY_STATE, FILL_STYLE_FLAG} from '../private_import_core';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\n\nimport {AnimationAst, AnimationEntryAst, AnimationGroupAst, AnimationKeyframeAst, AnimationSequenceAst, AnimationStateDeclarationAst, AnimationStateTransitionAst, AnimationStateTransitionExpression, AnimationStepAst, AnimationStylesAst, AnimationWithStepsAst} from './animation_ast';\nimport {StylesCollection} from './styles_collection';\n\nconst _INITIAL_KEYFRAME = 0;\nconst _TERMINAL_KEYFRAME = 1;\nconst _ONE_SECOND = 1000;\n\ndeclare type Styles = {\n  [key: string]: string | number\n};\n\nexport class AnimationParseError extends ParseError {\n  constructor(message: string) { super(null, message); }\n  toString(): string { return `${this.msg}`; }\n}\n\nexport class AnimationEntryParseResult {\n  constructor(public ast: AnimationEntryAst, public errors: AnimationParseError[]) {}\n}\n\n\nexport class AnimationParser {\n  constructor(private _schema: ElementSchemaRegistry) {}\n\n  parseComponent(component: CompileDirectiveMetadata): AnimationEntryAst[] {\n    const errors: string[] = [];\n    const componentName = component.type.name;\n    const animationTriggerNames = new Set<string>();\n    const asts = component.template.animations.map(entry => {\n      const result = this.parseEntry(entry);\n      const ast = result.ast;\n      const triggerName = ast.name;\n      if (animationTriggerNames.has(triggerName)) {\n        result.errors.push(new AnimationParseError(\n            `The animation trigger \"${triggerName}\" has already been registered for the ${componentName} component`));\n      } else {\n        animationTriggerNames.add(triggerName);\n      }\n      if (result.errors.length > 0) {\n        let errorMessage =\n            `- Unable to parse the animation sequence for \"${triggerName}\" on the ${componentName} component due to the following errors:`;\n        result.errors.forEach(\n            (error: AnimationParseError) => { errorMessage += '\\n-- ' + error.msg; });\n        errors.push(errorMessage);\n      }\n      return ast;\n    });\n\n    if (errors.length > 0) {\n      const errorString = errors.join('\\n');\n      throw new Error(`Animation parse errors:\\n${errorString}`);\n    }\n\n    return asts;\n  }\n\n  parseEntry(entry: CompileAnimationEntryMetadata): AnimationEntryParseResult {\n    const errors: AnimationParseError[] = [];\n    const stateStyles: {[key: string]: AnimationStylesAst} = {};\n    const transitions: CompileAnimationStateTransitionMetadata[] = [];\n\n    const stateDeclarationAsts: AnimationStateDeclarationAst[] = [];\n    entry.definitions.forEach(def => {\n      if (def instanceof CompileAnimationStateDeclarationMetadata) {\n        _parseAnimationDeclarationStates(def, this._schema, errors).forEach(ast => {\n          stateDeclarationAsts.push(ast);\n          stateStyles[ast.stateName] = ast.styles;\n        });\n      } else {\n        transitions.push(<CompileAnimationStateTransitionMetadata>def);\n      }\n    });\n\n    const stateTransitionAsts = transitions.map(\n        transDef => _parseAnimationStateTransition(transDef, stateStyles, this._schema, errors));\n\n    const ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n    return new AnimationEntryParseResult(ast, errors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: ElementSchemaRegistry, },\n];\n}\n\nfunction _parseAnimationDeclarationStates(\n    stateMetadata: CompileAnimationStateDeclarationMetadata, schema: ElementSchemaRegistry,\n    errors: AnimationParseError[]): AnimationStateDeclarationAst[] {\n  const normalizedStyles = _normalizeStyleMetadata(stateMetadata.styles, {}, schema, errors, false);\n  const defStyles = new AnimationStylesAst(normalizedStyles);\n  const states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n  return states.map(state => new AnimationStateDeclarationAst(state, defStyles));\n}\n\nfunction _parseAnimationStateTransition(\n    transitionStateMetadata: CompileAnimationStateTransitionMetadata,\n    stateStyles: {[key: string]: AnimationStylesAst}, schema: ElementSchemaRegistry,\n    errors: AnimationParseError[]): AnimationStateTransitionAst {\n  const styles = new StylesCollection();\n  const transitionExprs: AnimationStateTransitionExpression[] = [];\n  const transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n  transitionStates.forEach(\n      expr => { transitionExprs.push(..._parseAnimationTransitionExpr(expr, errors)); });\n  const entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n  const animation = _normalizeStyleSteps(entry, stateStyles, schema, errors);\n  const animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n  if (errors.length == 0) {\n    _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n  }\n\n  const stepsAst: AnimationWithStepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n      animationAst :\n      new AnimationSequenceAst([animationAst]);\n\n  return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n}\n\nfunction _parseAnimationAlias(alias: string, errors: AnimationParseError[]): string {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    default:\n      errors.push(\n          new AnimationParseError(`the transition alias value \"${alias}\" is not supported`));\n      return '* => *';\n  }\n}\n\nfunction _parseAnimationTransitionExpr(\n    eventStr: string, errors: AnimationParseError[]): AnimationStateTransitionExpression[] {\n  const expressions: AnimationStateTransitionExpression[] = [];\n  if (eventStr[0] == ':') {\n    eventStr = _parseAnimationAlias(eventStr, errors);\n  }\n  const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (!isPresent(match) || match.length < 4) {\n    errors.push(new AnimationParseError(`the provided ${eventStr} is not of a supported format`));\n    return expressions;\n  }\n\n  const fromState = match[1];\n  const separator = match[2];\n  const toState = match[3];\n  expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n\n  const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n  }\n  return expressions;\n}\n\nfunction _normalizeAnimationEntry(entry: CompileAnimationMetadata | CompileAnimationMetadata[]):\n    CompileAnimationMetadata {\n  return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n}\n\nfunction _normalizeStyleMetadata(\n    entry: CompileAnimationStyleMetadata, stateStyles: {[key: string]: AnimationStylesAst},\n    schema: ElementSchemaRegistry, errors: AnimationParseError[],\n    permitStateReferences: boolean): {[key: string]: string | number}[] {\n  const normalizedStyles: {[key: string]: string | number}[] = [];\n  entry.styles.forEach(styleEntry => {\n    if (typeof styleEntry === 'string') {\n      if (permitStateReferences) {\n        normalizedStyles.push(..._resolveStylesFromState(<string>styleEntry, stateStyles, errors));\n      } else {\n        errors.push(new AnimationParseError(\n            `State based animations cannot contain references to other states`));\n      }\n    } else {\n      const stylesObj = <Styles>styleEntry;\n      const normalizedStylesObj: Styles = {};\n      Object.keys(stylesObj).forEach(propName => {\n        const normalizedProp = schema.normalizeAnimationStyleProperty(propName);\n        const normalizedOutput =\n            schema.normalizeAnimationStyleValue(normalizedProp, propName, stylesObj[propName]);\n        const normalizationError = normalizedOutput['error'];\n        if (normalizationError) {\n          errors.push(new AnimationParseError(normalizationError));\n        }\n        normalizedStylesObj[normalizedProp] = normalizedOutput['value'];\n      });\n      normalizedStyles.push(normalizedStylesObj);\n    }\n  });\n  return normalizedStyles;\n}\n\nfunction _normalizeStyleSteps(\n    entry: CompileAnimationMetadata, stateStyles: {[key: string]: AnimationStylesAst},\n    schema: ElementSchemaRegistry, errors: AnimationParseError[]): CompileAnimationMetadata {\n  const steps = _normalizeStyleStepEntry(entry, stateStyles, schema, errors);\n  return (entry instanceof CompileAnimationGroupMetadata) ?\n      new CompileAnimationGroupMetadata(steps) :\n      new CompileAnimationSequenceMetadata(steps);\n}\n\nfunction _mergeAnimationStyles(\n    stylesList: any[], newItem: {[key: string]: string | number} | string) {\n  if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n    const lastIndex = stylesList.length - 1;\n    const lastItem = stylesList[lastIndex];\n    if (typeof lastItem === 'object' && lastItem !== null) {\n      stylesList[lastIndex] = StringMapWrapper.merge(\n          <{[key: string]: string | number}>lastItem, <{[key: string]: string | number}>newItem);\n      return;\n    }\n  }\n  stylesList.push(newItem);\n}\n\nfunction _normalizeStyleStepEntry(\n    entry: CompileAnimationMetadata, stateStyles: {[key: string]: AnimationStylesAst},\n    schema: ElementSchemaRegistry, errors: AnimationParseError[]): CompileAnimationMetadata[] {\n  let steps: CompileAnimationMetadata[];\n  if (entry instanceof CompileAnimationWithStepsMetadata) {\n    steps = entry.steps;\n  } else {\n    return [entry];\n  }\n\n  const newSteps: CompileAnimationMetadata[] = [];\n  let combinedStyles: Styles[];\n  steps.forEach(step => {\n    if (step instanceof CompileAnimationStyleMetadata) {\n      // this occurs when a style step is followed by a previous style step\n      // or when the first style step is run. We want to concatenate all subsequent\n      // style steps together into a single style step such that we have the correct\n      // starting keyframe data to pass into the animation player.\n      if (!isPresent(combinedStyles)) {\n        combinedStyles = [];\n      }\n      _normalizeStyleMetadata(\n          <CompileAnimationStyleMetadata>step, stateStyles, schema, errors, true)\n          .forEach(entry => { _mergeAnimationStyles(combinedStyles, entry); });\n    } else {\n      // it is important that we create a metadata entry of the combined styles\n      // before we go on an process the animate, sequence or group metadata steps.\n      // This will ensure that the AST will have the previous styles painted on\n      // screen before any further animations that use the styles take place.\n      if (isPresent(combinedStyles)) {\n        newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n        combinedStyles = null;\n      }\n\n      if (step instanceof CompileAnimationAnimateMetadata) {\n        // we do not recurse into CompileAnimationAnimateMetadata since\n        // those style steps are not going to be squashed\n        const animateStyleValue = (<CompileAnimationAnimateMetadata>step).styles;\n        if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n          animateStyleValue.styles =\n              _normalizeStyleMetadata(animateStyleValue, stateStyles, schema, errors, true);\n        } else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n          animateStyleValue.steps.forEach(step => {\n            step.styles = _normalizeStyleMetadata(step, stateStyles, schema, errors, true);\n          });\n        }\n      } else if (step instanceof CompileAnimationWithStepsMetadata) {\n        const innerSteps = _normalizeStyleStepEntry(step, stateStyles, schema, errors);\n        step = step instanceof CompileAnimationGroupMetadata ?\n            new CompileAnimationGroupMetadata(innerSteps) :\n            new CompileAnimationSequenceMetadata(innerSteps);\n      }\n\n      newSteps.push(step);\n    }\n  });\n\n  // this happens when only styles were animated within the sequence\n  if (isPresent(combinedStyles)) {\n    newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n  }\n\n  return newSteps;\n}\n\n\nfunction _resolveStylesFromState(\n    stateName: string, stateStyles: {[key: string]: AnimationStylesAst},\n    errors: AnimationParseError[]) {\n  const styles: Styles[] = [];\n  if (stateName[0] != ':') {\n    errors.push(new AnimationParseError(`Animation states via styles must be prefixed with a \":\"`));\n  } else {\n    const normalizedStateName = stateName.substring(1);\n    const value = stateStyles[normalizedStateName];\n    if (!isPresent(value)) {\n      errors.push(new AnimationParseError(\n          `Unable to apply styles due to missing a state: \"${normalizedStateName}\"`));\n    } else {\n      value.styles.forEach(stylesEntry => {\n        if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n          styles.push(stylesEntry as Styles);\n        }\n      });\n    }\n  }\n  return styles;\n}\n\nclass _AnimationTimings {\n  constructor(public duration: number, public delay: number, public easing: string) {}\n}\n\nfunction _parseAnimationKeyframes(\n    keyframeSequence: CompileAnimationKeyframesSequenceMetadata, currentTime: number,\n    collectedStyles: StylesCollection, stateStyles: {[key: string]: AnimationStylesAst},\n    errors: AnimationParseError[]): AnimationKeyframeAst[] {\n  const totalEntries = keyframeSequence.steps.length;\n  let totalOffsets = 0;\n  keyframeSequence.steps.forEach(step => totalOffsets += (isPresent(step.offset) ? 1 : 0));\n\n  if (totalOffsets > 0 && totalOffsets < totalEntries) {\n    errors.push(new AnimationParseError(\n        `Not all style() entries contain an offset for the provided keyframe()`));\n    totalOffsets = totalEntries;\n  }\n\n  let limit = totalEntries - 1;\n  const margin = totalOffsets == 0 ? (1 / limit) : 0;\n  const rawKeyframes: any[] /** TODO #9100 */ = [];\n  let index = 0;\n  let doSortKeyframes = false;\n  let lastOffset = 0;\n  keyframeSequence.steps.forEach(styleMetadata => {\n    let offset = styleMetadata.offset;\n    const keyframeStyles: Styles = {};\n    styleMetadata.styles.forEach(entry => {\n      Object.keys(entry).forEach(prop => {\n        if (prop != 'offset') {\n          keyframeStyles[prop] = (entry as Styles)[prop];\n        }\n      });\n    });\n\n    if (isPresent(offset)) {\n      doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n    } else {\n      offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n    }\n\n    rawKeyframes.push([offset, keyframeStyles]);\n    lastOffset = offset;\n    index++;\n  });\n\n  if (doSortKeyframes) {\n    rawKeyframes.sort((a, b) => a[0] <= b[0] ? -1 : 1);\n  }\n\n  let firstKeyframe = rawKeyframes[0];\n  if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n    rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n  }\n\n  const firstKeyframeStyles = firstKeyframe[1];\n  limit = rawKeyframes.length - 1;\n  let lastKeyframe = rawKeyframes[limit];\n  if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n    rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n    limit++;\n  }\n\n  const lastKeyframeStyles = lastKeyframe[1];\n  for (let i = 1; i <= limit; i++) {\n    const entry = rawKeyframes[i];\n    const styles = entry[1];\n\n    Object.keys(styles).forEach(prop => {\n      if (!isPresent(firstKeyframeStyles[prop])) {\n        firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n      }\n    });\n  }\n\n  for (let i = limit - 1; i >= 0; i--) {\n    const entry = rawKeyframes[i];\n    const styles = entry[1];\n\n    Object.keys(styles).forEach(prop => {\n      if (!isPresent(lastKeyframeStyles[prop])) {\n        lastKeyframeStyles[prop] = styles[prop];\n      }\n    });\n  }\n\n  return rawKeyframes.map(\n      entry => new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])));\n}\n\nfunction _parseTransitionAnimation(\n    entry: CompileAnimationMetadata, currentTime: number, collectedStyles: StylesCollection,\n    stateStyles: {[key: string]: AnimationStylesAst}, errors: AnimationParseError[]): AnimationAst {\n  let ast: any /** TODO #9100 */;\n  let playTime = 0;\n  const startingTime = currentTime;\n  if (entry instanceof CompileAnimationWithStepsMetadata) {\n    let maxDuration = 0;\n    const steps: any[] /** TODO #9100 */ = [];\n    const isGroup = entry instanceof CompileAnimationGroupMetadata;\n    let previousStyles: any /** TODO #9100 */;\n    entry.steps.forEach(entry => {\n      // these will get picked up by the next step...\n      const time = isGroup ? startingTime : currentTime;\n      if (entry instanceof CompileAnimationStyleMetadata) {\n        entry.styles.forEach(stylesEntry => {\n          // by this point we know that we only have stringmap values\n          const map = stylesEntry as Styles;\n          Object.keys(map).forEach(\n              prop => { collectedStyles.insertAtTime(prop, time, map[prop]); });\n        });\n        previousStyles = entry.styles;\n        return;\n      }\n\n      const innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n      if (isPresent(previousStyles)) {\n        if (entry instanceof CompileAnimationWithStepsMetadata) {\n          const startingStyles = new AnimationStylesAst(previousStyles);\n          steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n        } else {\n          const innerStep = <AnimationStepAst>innerAst;\n          innerStep.startingStyles.styles.push(...previousStyles);\n        }\n        previousStyles = null;\n      }\n\n      const astDuration = innerAst.playTime;\n      currentTime += astDuration;\n      playTime += astDuration;\n      maxDuration = Math.max(astDuration, maxDuration);\n      steps.push(innerAst);\n    });\n    if (isPresent(previousStyles)) {\n      const startingStyles = new AnimationStylesAst(previousStyles);\n      steps.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n    }\n    if (isGroup) {\n      ast = new AnimationGroupAst(steps);\n      playTime = maxDuration;\n      currentTime = startingTime + playTime;\n    } else {\n      ast = new AnimationSequenceAst(steps);\n    }\n  } else if (entry instanceof CompileAnimationAnimateMetadata) {\n    const timings = _parseTimeExpression(entry.timings, errors);\n    const styles = entry.styles;\n\n    let keyframes: any /** TODO #9100 */;\n    if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n      keyframes =\n          _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n    } else {\n      const styleData = <CompileAnimationStyleMetadata>styles;\n      const offset = _TERMINAL_KEYFRAME;\n      const styleAst = new AnimationStylesAst(styleData.styles as Styles[]);\n      const keyframe = new AnimationKeyframeAst(offset, styleAst);\n      keyframes = [keyframe];\n    }\n\n    ast = new AnimationStepAst(\n        new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n    playTime = timings.duration + timings.delay;\n    currentTime += playTime;\n\n    keyframes.forEach(\n        (keyframe: any /** TODO #9100 */) => keyframe.styles.styles.forEach(\n            (entry: any /** TODO #9100 */) => Object.keys(entry).forEach(\n                prop => { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); })));\n  } else {\n    // if the code reaches this stage then an error\n    // has already been populated within the _normalizeStyleSteps()\n    // operation...\n    ast = new AnimationStepAst(null, [], 0, 0, '');\n  }\n\n  ast.playTime = playTime;\n  ast.startTime = startingTime;\n  return ast;\n}\n\nfunction _fillAnimationAstStartingKeyframes(\n    ast: AnimationAst, collectedStyles: StylesCollection, errors: AnimationParseError[]): void {\n  // steps that only contain style will not be filled\n  if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n    const keyframes = ast.keyframes;\n    if (keyframes.length == 1) {\n      const endKeyframe = keyframes[0];\n      const startKeyframe = _createStartKeyframeFromEndKeyframe(\n          endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n      ast.keyframes = [startKeyframe, endKeyframe];\n    }\n  } else if (ast instanceof AnimationWithStepsAst) {\n    ast.steps.forEach(entry => _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors));\n  }\n}\n\nfunction _parseTimeExpression(\n    exp: string | number, errors: AnimationParseError[]): _AnimationTimings {\n  const regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n  let duration: number;\n  let delay: number = 0;\n  let easing: string = null;\n  if (typeof exp === 'string') {\n    const matches = exp.match(regex);\n    if (matches === null) {\n      errors.push(new AnimationParseError(`The provided timing value \"${exp}\" is invalid.`));\n      return new _AnimationTimings(0, 0, null);\n    }\n\n    let durationMatch = parseFloat(matches[1]);\n    const durationUnit = matches[2];\n    if (durationUnit == 's') {\n      durationMatch *= _ONE_SECOND;\n    }\n    duration = Math.floor(durationMatch);\n\n    const delayMatch = matches[3];\n    const delayUnit = matches[4];\n    if (isPresent(delayMatch)) {\n      let delayVal: number = parseFloat(delayMatch);\n      if (isPresent(delayUnit) && delayUnit == 's') {\n        delayVal *= _ONE_SECOND;\n      }\n      delay = Math.floor(delayVal);\n    }\n\n    const easingVal = matches[5];\n    if (!isBlank(easingVal)) {\n      easing = easingVal;\n    }\n  } else {\n    duration = <number>exp;\n  }\n\n  return new _AnimationTimings(duration, delay, easing);\n}\n\nfunction _createStartKeyframeFromEndKeyframe(\n    endKeyframe: AnimationKeyframeAst, startTime: number, duration: number,\n    collectedStyles: StylesCollection, errors: AnimationParseError[]): AnimationKeyframeAst {\n  const values: Styles = {};\n  const endTime = startTime + duration;\n  endKeyframe.styles.styles.forEach((styleData: Styles) => {\n    Object.keys(styleData).forEach(prop => {\n      const val = styleData[prop];\n      if (prop == 'offset') return;\n\n      const resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n      let resultEntry: any /** TODO #9100 */, nextEntry: any /** TODO #9100 */,\n          value: any /** TODO #9100 */;\n      if (isPresent(resultIndex)) {\n        resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n        value = resultEntry.value;\n        nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n      } else {\n        // this is a flag that the runtime code uses to pass\n        // in a value either from the state declaration styles\n        // or using the AUTO_STYLE value (e.g. getComputedStyle)\n        value = FILL_STYLE_FLAG;\n      }\n\n      if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n        errors.push(new AnimationParseError(\n            `The animated CSS property \"${prop}\" unexpectedly changes between steps \"${resultEntry.time}ms\" and \"${endTime}ms\" at \"${nextEntry.time}ms\"`));\n      }\n\n      values[prop] = value;\n    });\n  });\n\n  return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}