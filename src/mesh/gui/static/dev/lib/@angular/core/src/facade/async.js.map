{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/facade/async.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {global, noop} from './lang';\nexport {PromiseWrapper, PromiseCompleter} from './promise';\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {PromiseObservable} from 'rxjs/observable/PromiseObservable';\nimport {toPromise} from 'rxjs/operator/toPromise';\n\nexport {Observable} from 'rxjs/Observable';\nexport {Subject} from 'rxjs/Subject';\n\nexport class TimerWrapper {\n  static setTimeout(fn: (...args: any[]) => void, millis: number): number {\n    return global.setTimeout(fn, millis);\n  }\n  static clearTimeout(id: number): void { global.clearTimeout(id); }\n\n  static setInterval(fn: (...args: any[]) => void, millis: number): number {\n    return global.setInterval(fn, millis);\n  }\n  static clearInterval(id: number): void { global.clearInterval(id); }\n}\n\nexport class ObservableWrapper {\n  // TODO(vsavkin): when we use rxnext, try inferring the generic type from the first arg\n  static subscribe<T>(emitter: any, onNext: (value: T) => void, onError?: (exception: any) => void,\n                      onComplete: () => void = () => {}): Object {\n    onError = (typeof onError === \"function\") && onError || noop;\n    onComplete = (typeof onComplete === \"function\") && onComplete || noop;\n    return emitter.subscribe({next: onNext, error: onError, complete: onComplete});\n  }\n\n  static isObservable(obs: any): boolean { return !!obs.subscribe; }\n\n  /**\n   * Returns whether `obs` has any subscribers listening to events.\n   */\n  static hasSubscribers(obs: EventEmitter<any>): boolean { return obs.observers.length > 0; }\n\n  static dispose(subscription: any) { subscription.unsubscribe(); }\n\n  /**\n   * @deprecated - use callEmit() instead\n   */\n  static callNext(emitter: EventEmitter<any>, value: any) { emitter.next(value); }\n\n  static callEmit(emitter: EventEmitter<any>, value: any) { emitter.emit(value); }\n\n  static callError(emitter: EventEmitter<any>, error: any) { emitter.error(error); }\n\n  static callComplete(emitter: EventEmitter<any>) { emitter.complete(); }\n\n  static fromPromise(promise: Promise<any>): Observable<any> {\n    return PromiseObservable.create(promise);\n  }\n\n  static toPromise(obj: Observable<any>): Promise<any> { return toPromise.call(obj); }\n}\n\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Use Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n */\nexport class EventEmitter<T> extends Subject<T> {\n  /** @internal */\n  _isAsync: boolean;\n\n  /**\n   * Creates an instance of [EventEmitter], which depending on [isAsync],\n   * delivers events synchronously or asynchronously.\n   */\n  constructor(isAsync: boolean = true) {\n    super();\n    this._isAsync = isAsync;\n  }\n\n  emit(value: T) { super.next(value); }\n\n  /**\n   * @deprecated - use .emit(value) instead\n   */\n  next(value: any) { super.next(value); }\n\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let schedulerFn;\n    let errorFn = (err: any) => null;\n    let completeFn = () => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext.next(value)); } :\n                                    (value) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this._isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                  (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this._isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                     () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                                    (value) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this._isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this._isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n"]}