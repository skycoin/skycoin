{"version":3,"file":"control_value_accessor.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/forms/directives/control_value_accessor.ts"],"names":[],"mappings":";AAIE,qBAA0B,eAAe,CAAC,CAAA;AA2B5C;;;;GAIG;AACU,yBAAiB;AAC1B,kBAAkB,CAAC,IAAI,kBAAW,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {OpaqueToken} from '@angular/core';\n\n/**\n * A bridge between a control and a native element.\n *\n * A `ControlValueAccessor` abstracts the operations of writing a new value to a\n * DOM element representing an input control.\n *\n * Please see {@link DefaultValueAccessor} for more information.\n */\nexport interface ControlValueAccessor {\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void;\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: any): void;\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: any): void;\n}\n\n/**\n * Used to provide a {@link ControlValueAccessor} for form controls.\n *\n * See {@link DefaultValueAccessor} for how to implement one.\n */\nexport const NG_VALUE_ACCESSOR: OpaqueToken =\n    /*@ts2dart_const*/ new OpaqueToken(\"NgValueAccessor\");\n"]}