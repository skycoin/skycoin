{"version":3,"sources":["app/angular2/zone.js/lib/browser/websocket.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;IAIH,oEAAoE;IACpE,eAAsB,OAAY;QAChC,MAAM,EAAE,GAAS,OAAQ,CAAC,SAAS,CAAC;QACpC,yFAAyF;QACzF,iEAAiE;QACjE,EAAE,CAAC,CAAC,CAAO,OAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAChC,+BAAuB,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACxC,CAAC;QACK,OAAQ,CAAC,SAAS,GAAG,UAAS,CAAC,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAI,WAAW,CAAC;YAEhB,gGAAgG;YAChG,MAAM,aAAa,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAC3E,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC1D,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAS,QAAQ;oBACpF,WAAW,CAAC,QAAQ,CAAC,GAAG;wBACtB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;oBACnD,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,+BAA+B;gBAC/B,WAAW,GAAG,MAAM,CAAC;YACvB,CAAC;YAED,yBAAiB,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAEtE,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC,CAAC;QACF,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YACpB,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAhCD,yBAgCC,CAAA","file":"websocket.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {patchEventTargetMethods, patchOnProperties} from '../common/utils';\n\n// we have to patch the instance since the proto is non-configurable\nexport function apply(_global: any) {\n  const WS = (<any>_global).WebSocket;\n  // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n  // On older Chrome, no need since EventTarget was already patched\n  if (!(<any>_global).EventTarget) {\n    patchEventTargetMethods(WS.prototype);\n  }\n  (<any>_global).WebSocket = function(a, b) {\n    const socket = arguments.length > 1 ? new WS(a, b) : new WS(a);\n    let proxySocket;\n\n    // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n    const onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');\n    if (onmessageDesc && onmessageDesc.configurable === false) {\n      proxySocket = Object.create(socket);\n      ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function(propName) {\n        proxySocket[propName] = function() {\n          return socket[propName].apply(socket, arguments);\n        };\n      });\n    } else {\n      // we can patch the real socket\n      proxySocket = socket;\n    }\n\n    patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);\n\n    return proxySocket;\n  };\n  for (var prop in WS) {\n    _global.WebSocket[prop] = WS[prop];\n  }\n}\n"]}