{"version":3,"sources":["app/app.skywire.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAqBA;gBAKI,uBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;gBAAI,CAAC;gBAEnC,sCAAsC;gBACtC,gCAAQ,GAAR;oBACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC;gBAED,oCAAY,GAAZ;oBACI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;oBAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;oBACpE,IAAI,GAAG,GAAG,2BAA2B,CAAC;oBACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;yBACnC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACxB,SAAS,CAAC,UAAA,IAAI;wBACb,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;wBACxC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4BAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,IAAE,EAAE,CAAC;wBAC/B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,CAAC;wBACT,CAAC;oBACH,CAAC,EAAE,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,GAAG,CAAC,EAA1C,CAA0C,EAAE,cAAK,CAAC,CAAC,CAAC;gBACtE,CAAC;gBApCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,UAAU,EAAE,CAAC,0BAAiB,CAAC;wBAC/B,SAAS,EAAE,EAAE;wBACb,WAAW,EAAE,6BAA6B;qBAC7C,CAAC;;iCAAA;gBAgCF,oBAAC;YAAD,CA9BA,AA8BC,IAAA;YA9BD,yCA8BC,CAAA","file":"app.skywire.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ROUTER_DIRECTIVES, OnActivate} from '@angular/router';\n\nimport {Http, HTTP_BINDINGS, Response} from '@angular/http';\nimport {HTTP_PROVIDERS, Headers} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\ndeclare var _: any;\ndeclare var $: any;\ndeclare var moment: any;\n\n@Component({\n    selector: 'load-skywire',\n    directives: [ROUTER_DIRECTIVES],\n    providers: [],\n    templateUrl: 'app/templates/template.html'\n})\n\nexport class LoadComponent implements OnInit {\n    //Declare default varialbes\n    nodes: Array<any>;\n    transports: Array<any>;\n\n    constructor(private http: Http) { }\n\n    //Init function for load default value\n    ngOnInit() {\n      this.nodes = [];\n      this.transports = [];\n      this.loadNodeList();\n    }\n\n    loadNodeList() {\n        var self = this;\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var url = '/nodemanager/getlistnodes';\n        this.http.get(url, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(data => {\n              console.log(\"get node list\", url, data);\n              if (data && data.result && data.result.success) {\n                self.nodes = data.orders||[];\n              } else {\n                return;\n              }\n            }, err => console.log(\"Error on load nodes: \" + err), ()=>{});\n    }\n}\n"]}