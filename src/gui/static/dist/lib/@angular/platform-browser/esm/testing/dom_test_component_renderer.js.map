{"version":3,"file":"dom_test_component_renderer.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/testing/dom_test_component_renderer.ts"],"names":[],"mappings":"OAIS,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,eAAe;OAC3C,EAAC,QAAQ,EAAC,MAAM,uBAAuB;OACvC,EAAC,MAAM,EAAC,MAAM,wBAAwB;OACtC,EAAC,qBAAqB,EAAC,MAAM,2BAA2B;OACxD,EAAC,EAAE,EAAC,MAAM,gBAAgB;AACjC,8CAA8C,qBAAqB;IACjE,YAAqB,IAAI;QAAI,OAAO,CAAC;QAAhB,SAAI,GAAJ,IAAI,CAAA;IAAa,CAAC;IAEvC,iBAAiB,CAAC,QAAgB;QAChC,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,QAAQ,UAAU,CAAC,CAAC;QAEhD,8CAA8C;QAC9C,IAAI,QAAQ,GAAG,MAAM,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAClE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,MAAM,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;AAOH,CAAC;AANM,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACK,uCAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAG,EAAE,EAAG,EAAC;CACtE,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '../src/dom/dom_tokens';\nimport {getDOM} from '../src/dom/dom_adapter';\nimport {TestComponentRenderer} from '@angular/compiler/testing';\nimport {el} from './browser_util';\nexport class DOMTestComponentRenderer extends TestComponentRenderer {\n  constructor( private _doc) { super(); }\n\n  insertRootElement(rootElId: string) {\n    let rootEl = el(`<div id=\"${rootElId}\"></div>`);\n\n    // TODO(juliemr): can/should this be optional?\n    let oldRoots = getDOM().querySelectorAll(this._doc, '[id^=root]');\n    for (let i = 0; i < oldRoots.length; i++) {\n      getDOM().remove(oldRoots[i]);\n    }\n    getDOM().appendChild(this._doc.body, rootEl);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n"]}