{"version":3,"sources":["app/angular2/zone.js/lib/node/node.ts"],"names":[],"mappings":"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","file":"node.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport '../zone';\nimport './events';\nimport './fs';\n\nimport {patchTimer} from '../common/timers';\n\nconst set = 'set';\nconst clear = 'clear';\nconst _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\n\n// Timers\nconst timers = require('timers');\npatchTimer(timers, set, clear, 'Timeout');\npatchTimer(timers, set, clear, 'Interval');\npatchTimer(timers, set, clear, 'Immediate');\n\nconst shouldPatchGlobalTimers = global.setTimeout !== timers.setTimeout;\n\nif (shouldPatchGlobalTimers) {\n  patchTimer(_global, set, clear, 'Timeout');\n  patchTimer(_global, set, clear, 'Interval');\n  patchTimer(_global, set, clear, 'Immediate');\n}\n\n\n// Crypto\nlet crypto;\ntry {\n  crypto = require('crypto');\n} catch (err) {\n}\n\n// TODO(gdi2290): implement a better way to patch these methods\nif (crypto) {\n  let nativeRandomBytes = crypto.randomBytes;\n  crypto.randomBytes = function randomBytesZone(size: number, callback?: Function) {\n    if (!callback) {\n      return nativeRandomBytes(size);\n    } else {\n      let zone = Zone.current;\n      var source = crypto.constructor.name + '.randomBytes';\n      return nativeRandomBytes(size, zone.wrap(callback, source));\n    }\n  }.bind(crypto);\n\n  let nativePbkdf2 = crypto.pbkdf2;\n  crypto.pbkdf2 = function pbkdf2Zone(...args: any[]) {\n    let fn = args[args.length - 1];\n    if (typeof fn === 'function') {\n      let zone = Zone.current;\n      var source = crypto.constructor.name + '.pbkdf2';\n      args[args.length - 1] = zone.wrap(fn, source);\n      return nativePbkdf2(...args);\n    } else {\n      return nativePbkdf2(...args);\n    }\n  }.bind(crypto);\n}\n\n// HTTP Client\nlet httpClient;\ntry {\n  httpClient = require('_http_client');\n} catch (err) {\n}\n\nif (httpClient && httpClient.ClientRequest) {\n  let ClientRequest = httpClient.ClientRequest.bind(httpClient);\n  httpClient.ClientRequest = function(options: any, callback?: Function) {\n    if (!callback) {\n      return new ClientRequest(options);\n    } else {\n      let zone = Zone.current;\n      return new ClientRequest(options, zone.wrap(callback, 'http.ClientRequest'));\n    }\n  };\n}\n"]}