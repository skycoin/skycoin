{"version":3,"file":"xliff.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xliff.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {HtmlParser} from '../../ml_parser/html_parser';\nimport {InterpolationConfig} from '../../ml_parser/interpolation_config';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {ParseError} from '../../parse_util';\nimport * as i18n from '../i18n_ast';\nimport {MessageBundle} from '../message_bundle';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer, extractPlaceholderToIds, extractPlaceholders} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '1.2';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst _SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'x';\nconst _SOURCE_TAG = 'source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'trans-unit';\n\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nexport class Xliff implements Serializer {\n  constructor(private _htmlParser: HtmlParser, private _interpolationConfig: InterpolationConfig) {}\n\n  write(messageMap: {[id: string]: i18n.Message}): string {\n    const visitor = new _WriteVisitor();\n\n    const transUnits: xml.Node[] = [];\n\n    Object.keys(messageMap).forEach((id) => {\n      const message = messageMap[id];\n\n      const transUnit = new xml.Tag(_UNIT_TAG, {id: id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(8), new xml.Tag(_TARGET_TAG));\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const file = new xml.Tag(\n        'file', {'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template'},\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string, messageBundle: MessageBundle): {[id: string]: ml.Node[]} {\n    // Parse the xtb file into xml nodes\n    const result = new XmlParser().parse(content, url);\n\n    if (result.errors.length) {\n      throw new Error(`xtb parse errors:\\n${result.errors.join('\\n')}`);\n    }\n\n    // Replace the placeholders, messages are now string\n    const {messages, errors} = new _LoadVisitor().parse(result.rootNodes, messageBundle);\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    // Convert the string messages to html ast\n    // TODO(vicb): map error message back to the original message in xtb\n    const messageMap: {[id: string]: ml.Node[]} = {};\n    const parseErrors: ParseError[] = [];\n\n    Object.keys(messages).forEach((id) => {\n      const res = this._htmlParser.parse(messages[id], url, true, this._interpolationConfig);\n      parseErrors.push(...res.errors);\n      messageMap[id] = res.rootNodes;\n    });\n\n    if (parseErrors.length) {\n      throw new Error(`xtb parse errors:\\n${parseErrors.join('\\n')}`);\n    }\n\n    return messageMap;\n  }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  private _isInIcu: boolean;\n\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    if (this._isInIcu) {\n      // nested ICU is not supported\n      throw new Error('xliff does not support nested ICU messages');\n    }\n    this._isInIcu = true;\n\n    // TODO(vicb): support ICU messages\n    // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n    // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n    const nodes: xml.Node[] = [];\n\n    this._isInIcu = false;\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const ctype = getCtypeForTag(ph.tag);\n\n    const startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype});\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    this._isInIcu = false;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// TODO(vicb): add error management (structure)\n// TODO(vicb): factorize (xtb) ?\nclass _LoadVisitor implements ml.Visitor {\n  private _messageNodes: [string, ml.Node[]][];\n  private _translatedMessages: {[id: string]: string};\n  private _msgId: string;\n  private _target: ml.Node[];\n  private _errors: I18nError[];\n  private _placeholders: {[name: string]: string};\n  private _placeholderToIds: {[name: string]: string};\n\n  parse(nodes: ml.Node[], messageBundle: MessageBundle):\n      {messages: {[k: string]: string}, errors: I18nError[]} {\n    this._messageNodes = [];\n    this._translatedMessages = {};\n    this._msgId = '';\n    this._target = [];\n    this._errors = [];\n\n    // Find all messages\n    ml.visitAll(this, nodes, null);\n\n    const messageMap = messageBundle.getMessageMap();\n    const placeholders = extractPlaceholders(messageBundle);\n    const placeholderToIds = extractPlaceholderToIds(messageBundle);\n\n    this._messageNodes\n        .filter(message => {\n          // Remove any messages that is not present in the source message bundle.\n          return messageMap.hasOwnProperty(message[0]);\n        })\n        .sort((a, b) => {\n          // Because there could be no ICU placeholders inside an ICU message,\n          // we do not need to take into account the `placeholderToMsgIds` of the referenced\n          // messages, those would always be empty\n          // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n          if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n            return -1;\n          }\n\n          if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n            return 1;\n          }\n\n          return 0;\n        })\n        .forEach(message => {\n          const id = message[0];\n          this._placeholders = placeholders[id] || {};\n          this._placeholderToIds = placeholderToIds[id] || {};\n          // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n          this._translatedMessages[id] = ml.visitAll(this, message[1]).join('');\n        });\n\n    return {messages: this._translatedMessages, errors: this._errors};\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._target = null;\n        const msgId = element.attrs.find((attr) => attr.name === 'id');\n        if (!msgId) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          this._msgId = msgId.value;\n        }\n        ml.visitAll(this, element.children, null);\n        if (this._msgId !== null) {\n          this._messageNodes.push([this._msgId, this._target]);\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        this._target = element.children;\n        break;\n\n      case _PLACEHOLDER_TAG:\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._placeholders.hasOwnProperty(id)) {\n            return this._placeholders[id];\n          }\n          if (this._placeholderToIds.hasOwnProperty(id) &&\n              this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n            return this._translatedMessages[this._placeholderToIds[id]];\n          }\n          // TODO(vicb): better error message for when\n          // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n          this._addError(element, `The placeholder \"${id}\" does not exists in the source message`);\n        }\n        break;\n\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {\n    throw new Error('unreachable code');\n  }\n\n  visitText(text: ml.Text, context: any): any { return text.value; }\n\n  visitComment(comment: ml.Comment, context: any): any { return ''; }\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {\n    throw new Error('unreachable code');\n  }\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {\n    throw new Error('unreachable code');\n  }\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}