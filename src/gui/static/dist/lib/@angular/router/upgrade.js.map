{"version":3,"file":"upgrade.js","sourceRoot":"","sources":["../../../modules/@angular/router/upgrade.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAyB,cAAc,EAAc,MAAM,eAAe;OAC1E,EAAe,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,EAAE,eAAe,EAAC,MAAM,iBAAiB;OACxG,EAAC,aAAa,EAAC,MAAM,yBAAyB;AAGrD;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,OAAO,IAAM,wBAAwB,GAAG;IACtC,OAAO,EAAE,kBAAkB;IAC3B,UAAU,EAAE,uBAAuB;IACnC,IAAI,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,oBAAoB,CAAC;CAC7E,CAAC;AAEF,wCACI,SAAwB,EAAE,GAAmB,EAAE,SAA0B,EACzE,IAAkB;IACpB,MAAM,CAAC;QACL,IAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAM,GAAG,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEnD,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,KAAK,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,2BAA2B,EAAE,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,UAAU,CAAC,cAAQ,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,uEAAuE;QACvE,4EAA4E;QAC5E,oCAAoC;QACpC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;aAChC,GAAG,CAAC,sBAAsB,EAAE,UAAC,CAAM,EAAE,IAAY,EAAE,EAAU;YAC5D,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAChB,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_BOOTSTRAP_LISTENER, ApplicationRef, OpaqueToken} from '@angular/core';\nimport {ExtraOptions, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, Router, RouterPreloader} from '@angular/router';\nimport {UpgradeModule} from '@angular/upgrade/static';\n\n\n/**\n * @whatItDoes Creates an initializer that in addition to setting up the Angular 2\n * router sets up the ngRoute integration.\n *\n * @howToUse\n *\n * ```\n * @NgModule({\n *  imports: [\n *   RouterModule.forRoot(SOME_ROUTES),\n *   UpgradeModule\n * ],\n * providers: [\n *   RouterUpgradeInitializer\n * ]\n * })\n * export class AppModule {\n *   ngDoBootstrap() {}\n * }\n * ```\n *\n * @experimental\n */\nexport const RouterUpgradeInitializer = {\n  provide: ROUTER_INITIALIZER,\n  useFactory: initialRouterNavigation,\n  deps: [UpgradeModule, ApplicationRef, RouterPreloader, ROUTER_CONFIGURATION]\n};\n\nexport function initialRouterNavigation(\n    ngUpgrade: UpgradeModule, ref: ApplicationRef, preloader: RouterPreloader,\n    opts: ExtraOptions): Function {\n  return () => {\n    const router = ngUpgrade.injector.get(Router);\n    const ref = ngUpgrade.injector.get(ApplicationRef);\n\n    router.resetRootComponentType(ref.componentTypes[0]);\n    preloader.setUpPreloading();\n    if (opts.initialNavigation === false) {\n      router.setUpLocationChangeListener();\n    } else {\n      setTimeout(() => { router.initialNavigation(); }, 0);\n    }\n\n    // History.pushState does not fire onPopState, so the angular2 location\n    // doesn't detect it. The workaround is to attach a location change listener\n    // that will call navigate directly.\n    ngUpgrade.$injector.get('$rootScope')\n        .$on('$locationChangeStart', (_: any, next: string, __: string) => {\n          const url = document.createElement('a');\n          url.href = next;\n          router.navigateByUrl(url.pathname);\n        });\n  };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}