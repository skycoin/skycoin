{"version":3,"file":"element.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/element.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isPresent} from '../../src/facade/lang';\nimport {ListWrapper} from '../../src/facade/collection';\nimport {BaseException} from '../../src/facade/exceptions';\n\nimport {AppView} from './view';\nimport {ViewType} from './view_type';\nimport {ElementRef} from './element_ref';\n\nimport {ViewContainerRef_} from './view_container_ref';\n\nimport {QueryList} from './query_list';\nimport {Injector} from '../di/injector';\n\n/**\n * An AppElement is created for elements that have a ViewContainerRef,\n * a nested component or a <template> element to keep data around\n * that is needed for later instantiations.\n */\nexport class AppElement {\n  public nestedViews: AppView<any>[] = null;\n  public componentView: AppView<any> = null;\n\n  public component: any;\n  public componentConstructorViewQueries: QueryList<any>[];\n\n  constructor(public index: number, public parentIndex: number, public parentView: AppView<any>,\n              public nativeElement: any) {}\n\n  get elementRef(): ElementRef { return new ElementRef(this.nativeElement); }\n\n  get vcRef(): ViewContainerRef_ { return new ViewContainerRef_(this); }\n\n  initComponent(component: any, componentConstructorViewQueries: QueryList<any>[],\n                view: AppView<any>) {\n    this.component = component;\n    this.componentConstructorViewQueries = componentConstructorViewQueries;\n    this.componentView = view;\n  }\n\n  get parentInjector(): Injector { return this.parentView.injector(this.parentIndex); }\n  get injector(): Injector { return this.parentView.injector(this.index); }\n\n  mapNestedViews(nestedViewClass: any, callback: Function): any[] {\n    var result = [];\n    if (isPresent(this.nestedViews)) {\n      this.nestedViews.forEach((nestedView) => {\n        if (nestedView.clazz === nestedViewClass) {\n          result.push(callback(nestedView));\n        }\n      });\n    }\n    return result;\n  }\n\n\n  attachView(view: AppView<any>, viewIndex: number) {\n    if (view.type === ViewType.COMPONENT) {\n      throw new BaseException(`Component views can't be moved!`);\n    }\n    var nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    ListWrapper.insert(nestedViews, viewIndex, view);\n    var refRenderNode;\n    if (viewIndex > 0) {\n      var prevView = nestedViews[viewIndex - 1];\n      refRenderNode = prevView.lastRootNode;\n    } else {\n      refRenderNode = this.nativeElement;\n    }\n    if (isPresent(refRenderNode)) {\n      view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n    }\n    view.addToContentChildren(this);\n  }\n\n  detachView(viewIndex: number): AppView<any> {\n    var view = ListWrapper.removeAt(this.nestedViews, viewIndex);\n    if (view.type === ViewType.COMPONENT) {\n      throw new BaseException(`Component views can't be moved!`);\n    }\n\n    view.renderer.detachView(view.flatRootNodes);\n\n    view.removeFromContentChildren(this);\n    return view;\n  }\n}\n"]}