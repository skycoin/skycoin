{"version":3,"file":"resource_loader_cache.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,cAAc,EAAC,MAAM,mBAAmB;OACzC,EAAC,MAAM,EAAC,MAAM,gBAAgB;AAErC;;;;;;GAMG;AACH;IAA0C,wCAAc;IAGtD;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,MAAM,GAAS,MAAO,CAAC,cAAc,CAAC;QAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;QAC3F,CAAC;IACH,CAAC;IAED,kCAAG,GAAH,UAAI,GAAW;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAe,OAAO,CAAC,MAAM,CAC/B,yDAAyD,GAAG,GAAG,CAAC,CAAC;QACvE,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CAAC,AAnBD,CAA0C,cAAc,GAmBvD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {global} from '../facade/lang';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}