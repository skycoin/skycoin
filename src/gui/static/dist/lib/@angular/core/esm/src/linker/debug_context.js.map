{"version":3,"file":"debug_context.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/debug_context.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isPresent, isBlank} from '../../src/facade/lang';\nimport {ListWrapper, StringMapWrapper} from '../../src/facade/collection';\nimport {Injector} from '../di';\nimport {ViewType} from './view_type';\nimport {RenderDebugInfo} from '../render/api';\nimport {DebugAppView} from './view';\n\n/* @ts2dart_const */\nexport class StaticNodeDebugInfo {\n  constructor(public providerTokens: any[], public componentToken: any,\n              public refTokens: {[key: string]: any}) {}\n}\n\nexport class DebugContext implements RenderDebugInfo {\n  constructor(private _view: DebugAppView<any>, private _nodeIndex: number, private _tplRow: number,\n              private _tplCol: number) {}\n\n  private get _staticNodeInfo(): StaticNodeDebugInfo {\n    return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n  }\n\n  get context() { return this._view.context; }\n  get component() {\n    var staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n      return this.injector.get(staticNodeInfo.componentToken);\n    }\n    return null;\n  }\n  get componentRenderElement() {\n    var componentView = this._view;\n    while (isPresent(componentView.declarationAppElement) &&\n           componentView.type !== ViewType.COMPONENT) {\n      componentView = <DebugAppView<any>>componentView.declarationAppElement.parentView;\n    }\n    return isPresent(componentView.declarationAppElement) ?\n               componentView.declarationAppElement.nativeElement :\n               null;\n  }\n  get injector(): Injector { return this._view.injector(this._nodeIndex); }\n  get renderNode(): any {\n    if (isPresent(this._nodeIndex) && isPresent(this._view.allNodes)) {\n      return this._view.allNodes[this._nodeIndex];\n    } else {\n      return null;\n    }\n  }\n  get providerTokens(): any[] {\n    var staticNodeInfo = this._staticNodeInfo;\n    return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n  }\n  get source(): string {\n    return `${this._view.componentType.templateUrl}:${this._tplRow}:${this._tplCol}`;\n  }\n  get references(): {[key: string]: any} {\n    var varValues: {[key: string]: string} = {};\n    var staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo)) {\n      var refs = staticNodeInfo.refTokens;\n      StringMapWrapper.forEach(refs, (refToken, refName) => {\n        var varValue;\n        if (isBlank(refToken)) {\n          varValue = isPresent(this._view.allNodes) ? this._view.allNodes[this._nodeIndex] : null;\n        } else {\n          varValue = this._view.injectorGet(refToken, this._nodeIndex, null);\n        }\n        varValues[refName] = varValue;\n      });\n    }\n    return varValues;\n  }\n}\n"]}