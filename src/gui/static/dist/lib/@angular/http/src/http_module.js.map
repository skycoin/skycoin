{"version":3,"file":"http_module.js","sourceRoot":"","sources":["../../../../modules/@angular/http/src/http_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAQI,EAAC,QAAQ,EAAC,MAAM,eAAe;OAE/B,EAAC,YAAY,EAAC,MAAM,0BAA0B;OAC9C,EAAC,UAAU,EAAC,MAAM,wBAAwB;OAC1C,EAAC,YAAY,EAAE,aAAa,EAAC,MAAM,0BAA0B;OAC7D,EAAC,kBAAkB,EAAE,UAAU,EAAC,MAAM,wBAAwB;OAC9D,EAAC,kBAAkB,EAAE,cAAc,EAAC,MAAM,wBAAwB;OAClE,EAAC,mBAAmB,EAAE,eAAe,EAAC,MAAM,yBAAyB;OACrE,EAAC,IAAI,EAAE,KAAK,EAAC,MAAM,QAAQ;OAC3B,EAAC,YAAY,EAAC,MAAM,cAAc;AACzC;;GAEG;AACH;IACE,MAAM,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAClC,CAAC;AACD;;;;GAIG;AACH,4BAA4B,UAAsB,EAAE,cAA8B;IAChF,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;AAC9C,CAAC;AACD;;;;GAIG;AACH,6BAA6B,YAA0B,EAAE,cAA8B;IACrF,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACjD,CAAC;AACD;;;GAGG;AACH;IAAA;IAkBA,CAAC;IAjBM,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,SAAS,EAAE;wBACT,kEAAkE;wBAClE,wDAAwD;wBACxD,EAAC,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,EAAC;wBAC5E,UAAU;wBACV,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,kBAAkB,EAAC;wBACvD,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAC;wBACzD,UAAU;wBACV,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,gCAAgC,EAAC;qBACtE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iBAAC;AAAD,CAAC,AAlBD,IAkBC;AAED;IACC,gBAAgB;IACjB,UAAU,CAAC,UAAU,CAAC;IACrB;;;OAGG;IACJ,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC;AAED;;;GAGG;AACH;IAAA;IAiBA,CAAC;IAhBM,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,SAAS,EAAE;wBACT,kEAAkE;wBAClE,wDAAwD;wBACxD,EAAC,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC,EAAC;wBAChF,YAAY;wBACZ,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,kBAAkB,EAAC;wBACvD,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAC;wBACzD,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,aAAa,EAAC;qBACjD;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,kBAAC;AAAD,CAAC,AAjBD,IAiBC;AAED;IACC,gBAAgB;IACjB,WAAW,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACJ,WAAW,CAAC,cAAc,CAAC;AAC3B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\nimport {NgModule} from '@angular/core';\n\nimport {BrowserJsonp} from './backends/browser_jsonp';\nimport {BrowserXhr} from './backends/browser_xhr';\nimport {JSONPBackend, JSONPBackend_} from './backends/jsonp_backend';\nimport {CookieXSRFStrategy, XHRBackend} from './backends/xhr_backend';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nimport {Http, Jsonp} from './http';\nimport {XSRFStrategy} from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n  return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n  return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend: JSONPBackend, requestOptions: RequestOptions): Jsonp {\n  return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n *  The module that includes http's providers\n  * *\n */\nexport class HttpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n    BrowserXhr,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    XHRBackend,\n    {provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HttpModule_tsickle_Closure_declarations() {\n /** @type {?} */\nHttpModule.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nHttpModule.ctorParameters;\n}\n\n/**\n *  The module that includes jsonp's providers\n  * *\n */\nexport class JsonpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions]},\n    BrowserJsonp,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    {provide: JSONPBackend, useClass: JSONPBackend_},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonpModule_tsickle_Closure_declarations() {\n /** @type {?} */\nJsonpModule.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nJsonpModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}