{"version":3,"file":"ng_form.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/ng_form.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Inject, Optional, Self, forwardRef} from '@angular/core';\n\nimport {EventEmitter} from '../facade/async';\nimport {AbstractControl, FormControl, FormGroup} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {NgControl} from './ng_control';\nimport {NgModel} from './ng_model';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from './shared';\n\nexport const formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\n\nconst resolvedPromise = Promise.resolve(null);\n\n/**\n * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * @howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {@link NgModel} with a\n * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  @stable\n */\n\nexport class NgForm extends ControlContainer implements Form {\n  private _submitted: boolean = false;\n\n  form: FormGroup;\n  ngSubmit = new EventEmitter();\n\n  constructor(\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this.form =\n        new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n\n  get submitted(): boolean { return this._submitted; }\n\n  get formDirective(): Form { return this; }\n\n  get control(): FormGroup { return this.form; }\n\n  get path(): string[] { return []; }\n\n  get controls(): {[key: string]: AbstractControl} { return this.form.controls; }\n\n  addControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      dir._control = <FormControl>container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir);\n      dir.control.updateValueAndValidity({emitEvent: false});\n    });\n  }\n\n  getControl(dir: NgModel): FormControl { return <FormControl>this.form.get(dir.path); }\n\n  removeControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n\n  addFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({emitEvent: false});\n    });\n  }\n\n  removeFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n\n  getFormGroup(dir: NgModelGroup): FormGroup { return <FormGroup>this.form.get(dir.path); }\n\n  updateModel(dir: NgControl, value: any): void {\n    resolvedPromise.then(() => {\n      const ctrl = <FormControl>this.form.get(dir.path);\n      ctrl.setValue(value);\n    });\n  }\n\n  setValue(value: {[key: string]: any}): void { this.control.setValue(value); }\n\n  onSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n\n  onReset(): void { this.resetForm(); }\n\n  resetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n\n  /** @internal */\n  _findContainer(path: string[]): FormGroup {\n    path.pop();\n    return path.length ? <FormGroup>this.form.get(path) : this.form;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}