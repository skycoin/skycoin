{"version":3,"file":"html_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/html_parser.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable} from '@angular/core';\n\nimport {\n  isPresent,\n  isBlank,\n} from '../src/facade/lang';\n\nimport {ListWrapper} from '../src/facade/collection';\n\nimport {\n  HtmlAst,\n  HtmlAttrAst,\n  HtmlTextAst,\n  HtmlCommentAst,\n  HtmlElementAst,\n  HtmlExpansionAst,\n  HtmlExpansionCaseAst\n} from './html_ast';\n\nimport {HtmlToken, HtmlTokenType, tokenizeHtml} from './html_lexer';\nimport {ParseError, ParseSourceSpan} from './parse_util';\nimport {getHtmlTagDefinition, getNsPrefix, mergeNsAndName} from './html_tags';\n\nexport class HtmlTreeError extends ParseError {\n  static create(elementName: string, span: ParseSourceSpan, msg: string): HtmlTreeError {\n    return new HtmlTreeError(elementName, span, msg);\n  }\n\n  constructor(public elementName: string, span: ParseSourceSpan, msg: string) { super(span, msg); }\n}\n\nexport class HtmlParseTreeResult {\n  constructor(public rootNodes: HtmlAst[], public errors: ParseError[]) {}\n}\nexport class HtmlParser {\n  parse(sourceContent: string, sourceUrl: string,\n        parseExpansionForms: boolean = false): HtmlParseTreeResult {\n    var tokensAndErrors = tokenizeHtml(sourceContent, sourceUrl, parseExpansionForms);\n    var treeAndErrors = new TreeBuilder(tokensAndErrors.tokens).build();\n    return new HtmlParseTreeResult(treeAndErrors.rootNodes, (<ParseError[]>tokensAndErrors.errors)\n                                                                .concat(treeAndErrors.errors));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\nclass TreeBuilder {\n  private index: number = -1;\n  private peek: HtmlToken;\n\n  private rootNodes: HtmlAst[] = [];\n  private errors: HtmlTreeError[] = [];\n\n  private elementStack: HtmlElementAst[] = [];\n\n  constructor(private tokens: HtmlToken[]) { this._advance(); }\n\n  build(): HtmlParseTreeResult {\n    while (this.peek.type !== HtmlTokenType.EOF) {\n      if (this.peek.type === HtmlTokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this.peek.type === HtmlTokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this.peek.type === HtmlTokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this.peek.type === HtmlTokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (this.peek.type === HtmlTokenType.TEXT ||\n                 this.peek.type === HtmlTokenType.RAW_TEXT ||\n                 this.peek.type === HtmlTokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this.peek.type === HtmlTokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new HtmlParseTreeResult(this.rootNodes, this.errors);\n  }\n\n  private _advance(): HtmlToken {\n    var prev = this.peek;\n    if (this.index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this.index++;\n    }\n    this.peek = this.tokens[this.index];\n    return prev;\n  }\n\n  private _advanceIf(type: HtmlTokenType): HtmlToken {\n    if (this.peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n\n  private _consumeCdata(startToken: HtmlToken) {\n    this._consumeText(this._advance());\n    this._advanceIf(HtmlTokenType.CDATA_END);\n  }\n\n  private _consumeComment(token: HtmlToken) {\n    var text = this._advanceIf(HtmlTokenType.RAW_TEXT);\n    this._advanceIf(HtmlTokenType.COMMENT_END);\n    var value = isPresent(text) ? text.parts[0].trim() : null;\n    this._addToParent(new HtmlCommentAst(value, token.sourceSpan));\n  }\n\n  private _consumeExpansion(token: HtmlToken) {\n    let switchValue = this._advance();\n\n    let type = this._advance();\n    let cases = [];\n\n    // read =\n    while (this.peek.type === HtmlTokenType.EXPANSION_CASE_VALUE) {\n      let expCase = this._parseExpansionCase();\n      if (isBlank(expCase)) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this.peek.type !== HtmlTokenType.EXPANSION_FORM_END) {\n      this.errors.push(\n          HtmlTreeError.create(null, this.peek.sourceSpan, `Invalid expansion form. Missing '}'.`));\n      return;\n    }\n    this._advance();\n\n    let mainSourceSpan = new ParseSourceSpan(token.sourceSpan.start, this.peek.sourceSpan.end);\n    this._addToParent(new HtmlExpansionAst(switchValue.parts[0], type.parts[0], cases,\n                                           mainSourceSpan, switchValue.sourceSpan));\n  }\n\n  private _parseExpansionCase(): HtmlExpansionCaseAst {\n    let value = this._advance();\n\n    // read {\n    if (this.peek.type !== HtmlTokenType.EXPANSION_CASE_EXP_START) {\n      this.errors.push(HtmlTreeError.create(null, this.peek.sourceSpan,\n                                            `Invalid expansion form. Missing '{'.,`));\n      return null;\n    }\n\n    // read until }\n    let start = this._advance();\n\n    let exp = this._collectExpansionExpTokens(start);\n    if (isBlank(exp)) return null;\n\n    let end = this._advance();\n    exp.push(new HtmlToken(HtmlTokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    let parsedExp = new TreeBuilder(exp).build();\n    if (parsedExp.errors.length > 0) {\n      this.errors = this.errors.concat(<HtmlTreeError[]>parsedExp.errors);\n      return null;\n    }\n\n    let sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    let expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new HtmlExpansionCaseAst(value.parts[0], parsedExp.rootNodes, sourceSpan,\n                                    value.sourceSpan, expSourceSpan);\n  }\n\n  private _collectExpansionExpTokens(start: HtmlToken): HtmlToken[] {\n    let exp = [];\n    let expansionFormStack = [HtmlTokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this.peek.type === HtmlTokenType.EXPANSION_FORM_START ||\n          this.peek.type === HtmlTokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this.peek.type);\n      }\n\n      if (this.peek.type === HtmlTokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, HtmlTokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this.errors.push(\n              HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this.peek.type === HtmlTokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, HtmlTokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this.errors.push(\n              HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this.peek.type === HtmlTokenType.EOF) {\n        this.errors.push(\n            HtmlTreeError.create(null, start.sourceSpan, `Invalid expansion form. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n\n  private _consumeText(token: HtmlToken) {\n    let text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      let parent = this._getParentElement();\n      if (isPresent(parent) && parent.children.length == 0 &&\n          getHtmlTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new HtmlTextAst(text, token.sourceSpan));\n    }\n  }\n\n  private _closeVoidElement(): void {\n    if (this.elementStack.length > 0) {\n      let el = ListWrapper.last(this.elementStack);\n\n      if (getHtmlTagDefinition(el.name).isVoid) {\n        this.elementStack.pop();\n      }\n    }\n  }\n\n  private _consumeStartTag(startTagToken: HtmlToken) {\n    var prefix = startTagToken.parts[0];\n    var name = startTagToken.parts[1];\n    var attrs = [];\n    while (this.peek.type === HtmlTokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    var fullName = getElementFullName(prefix, name, this._getParentElement());\n    var selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this.peek.type === HtmlTokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      if (getNsPrefix(fullName) == null && !getHtmlTagDefinition(fullName).isVoid) {\n        this.errors.push(HtmlTreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this.peek.type === HtmlTokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    var end = this.peek.sourceSpan.start;\n    let span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    var el = new HtmlElementAst(fullName, attrs, [], span, span, null);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n\n  private _pushElement(el: HtmlElementAst) {\n    if (this.elementStack.length > 0) {\n      var parentEl = ListWrapper.last(this.elementStack);\n      if (getHtmlTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n        this.elementStack.pop();\n      }\n    }\n\n    var tagDef = getHtmlTagDefinition(el.name);\n    var parentEl = this._getParentElement();\n    if (tagDef.requireExtraParent(isPresent(parentEl) ? parentEl.name : null)) {\n      var newParent = new HtmlElementAst(tagDef.parentToAdd, [], [el], el.sourceSpan,\n                                         el.startSourceSpan, el.endSourceSpan);\n      this._addToParent(newParent);\n      this.elementStack.push(newParent);\n      this.elementStack.push(el);\n    } else {\n      this._addToParent(el);\n      this.elementStack.push(el);\n    }\n  }\n\n  private _consumeEndTag(endTagToken: HtmlToken) {\n    var fullName =\n        getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n\n    if (getHtmlTagDefinition(fullName).isVoid) {\n      this.errors.push(\n          HtmlTreeError.create(fullName, endTagToken.sourceSpan,\n                               `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      this.errors.push(HtmlTreeError.create(fullName, endTagToken.sourceSpan,\n                                            `Unexpected closing tag \"${endTagToken.parts[1]}\"`));\n    }\n  }\n\n  private _popElement(fullName: string): boolean {\n    for (let stackIndex = this.elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      let el = this.elementStack[stackIndex];\n      if (el.name == fullName) {\n        ListWrapper.splice(this.elementStack, stackIndex, this.elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!getHtmlTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private _consumeAttr(attrName: HtmlToken): HtmlAttrAst {\n    var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    var end = attrName.sourceSpan.end;\n    var value = '';\n    if (this.peek.type === HtmlTokenType.ATTR_VALUE) {\n      var valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n    }\n    return new HtmlAttrAst(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end));\n  }\n\n  private _getParentElement(): HtmlElementAst {\n    return this.elementStack.length > 0 ? ListWrapper.last(this.elementStack) : null;\n  }\n\n  private _addToParent(node: HtmlAst) {\n    var parent = this._getParentElement();\n    if (isPresent(parent)) {\n      parent.children.push(node);\n    } else {\n      this.rootNodes.push(node);\n    }\n  }\n}\n\nfunction getElementFullName(prefix: string, localName: string,\n                            parentElement: HtmlElementAst): string {\n  if (isBlank(prefix)) {\n    prefix = getHtmlTagDefinition(localName).implicitNamespacePrefix;\n    if (isBlank(prefix) && isPresent(parentElement)) {\n      prefix = getNsPrefix(parentElement.name);\n    }\n  }\n\n  return mergeNsAndName(prefix, localName);\n}\n\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n"]}