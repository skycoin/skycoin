{"version":3,"file":"property_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/property_binder.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {SecurityContext} from '../../core_private';\nimport {LifecycleHooks, isDefaultChangeDetectionStrategy} from '../../core_private';\n\nimport {isBlank, isPresent} from '../../src/facade/lang';\n\nimport * as cdAst from '../expression_parser/ast';\nimport * as o from '../output/output_ast';\nimport {Identifiers} from '../identifiers';\nimport {DetectChangesVars, ViewProperties} from './constants';\n\nimport {\n  BoundTextAst,\n  BoundElementPropertyAst,\n  DirectiveAst,\n  PropertyBindingType,\n} from '../template_ast';\n\nimport {CompileView} from './compile_view';\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\n\nimport {camelCaseToDashCase} from '../util';\n\nimport {convertCdExpressionToIr} from './expression_converter';\n\nimport {CompileBinding} from './compile_binding';\n\n\nfunction createBindFieldExpr(exprIndex: number): o.ReadPropExpr {\n  return o.THIS_EXPR.prop(`_expr_${exprIndex}`);\n}\n\nfunction createCurrValueExpr(exprIndex: number): o.ReadVarExpr {\n  return o.variable(`currVal_${exprIndex}`);  // fix syntax highlighting: `\n}\n\nfunction bind(view: CompileView, currValExpr: o.ReadVarExpr, fieldExpr: o.ReadPropExpr,\n              parsedExpression: cdAst.AST, context: o.Expression, actions: o.Statement[],\n              method: CompileMethod) {\n  var checkExpression =\n      convertCdExpressionToIr(view, context, parsedExpression, DetectChangesVars.valUnwrapper);\n  if (isBlank(checkExpression.expression)) {\n    // e.g. an empty expression was given\n    return;\n  }\n\n  // private is fine here as no child view will reference the cached value...\n  view.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));\n  view.createMethod.addStmt(\n      o.THIS_EXPR.prop(fieldExpr.name).set(o.importExpr(Identifiers.uninitialized)).toStmt());\n\n  if (checkExpression.needsValueUnwrapper) {\n    var initValueUnwrapperStmt = DetectChangesVars.valUnwrapper.callMethod('reset', []).toStmt();\n    method.addStmt(initValueUnwrapperStmt);\n  }\n  method.addStmt(\n      currValExpr.set(checkExpression.expression).toDeclStmt(null, [o.StmtModifier.Final]));\n\n  var condition: o.Expression =\n      o.importExpr(Identifiers.checkBinding)\n          .callFn([DetectChangesVars.throwOnChange, fieldExpr, currValExpr]);\n  if (checkExpression.needsValueUnwrapper) {\n    condition = DetectChangesVars.valUnwrapper.prop('hasWrappedValue').or(condition);\n  }\n  method.addStmt(new o.IfStmt(\n      condition,\n      actions.concat([<o.Statement>o.THIS_EXPR.prop(fieldExpr.name).set(currValExpr).toStmt()])));\n}\n\nexport function bindRenderText(boundText: BoundTextAst, compileNode: CompileNode,\n                               view: CompileView) {\n  var bindingIndex = view.bindings.length;\n  view.bindings.push(new CompileBinding(compileNode, boundText));\n  var currValExpr = createCurrValueExpr(bindingIndex);\n  var valueField = createBindFieldExpr(bindingIndex);\n  view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n\n  bind(view, currValExpr, valueField, boundText.value, view.componentContext,\n       [\n         o.THIS_EXPR.prop('renderer')\n             .callMethod('setText', [compileNode.renderNode, currValExpr])\n             .toStmt()\n       ],\n       view.detectChangesRenderPropertiesMethod);\n}\n\nfunction bindAndWriteToRenderer(boundProps: BoundElementPropertyAst[], context: o.Expression,\n                                compileElement: CompileElement) {\n  var view = compileElement.view;\n  var renderNode = compileElement.renderNode;\n  boundProps.forEach((boundProp) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, boundProp));\n    view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n    var fieldExpr = createBindFieldExpr(bindingIndex);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    var renderMethod: string;\n    var renderValue: o.Expression = sanitizedValue(boundProp, currValExpr);\n    var updateStmts = [];\n    switch (boundProp.type) {\n      case PropertyBindingType.Property:\n        renderMethod = 'setElementProperty';\n        if (view.genConfig.logBindingUpdate) {\n          updateStmts.push(logBindingUpdateStmt(renderNode, boundProp.name, currValExpr));\n        }\n        break;\n      case PropertyBindingType.Attribute:\n        renderMethod = 'setElementAttribute';\n        renderValue =\n            renderValue.isBlank().conditional(o.NULL_EXPR, renderValue.callMethod('toString', []));\n        break;\n      case PropertyBindingType.Class:\n        renderMethod = 'setElementClass';\n        break;\n      case PropertyBindingType.Style:\n        renderMethod = 'setElementStyle';\n        var strValue: o.Expression = renderValue.callMethod('toString', []);\n        if (isPresent(boundProp.unit)) {\n          strValue = strValue.plus(o.literal(boundProp.unit));\n        }\n        renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, strValue);\n        break;\n    }\n    updateStmts.push(\n        o.THIS_EXPR.prop('renderer')\n            .callMethod(renderMethod, [renderNode, o.literal(boundProp.name), renderValue])\n            .toStmt());\n\n    bind(view, currValExpr, fieldExpr, boundProp.value, context, updateStmts,\n         view.detectChangesRenderPropertiesMethod);\n  });\n}\n\nfunction sanitizedValue(boundProp: BoundElementPropertyAst, renderValue: o.Expression): o.Expression {\n  let enumValue: string;\n  switch (boundProp.securityContext) {\n    case SecurityContext.NONE:\n      return renderValue;  // No sanitization needed.\n    case SecurityContext.HTML:\n      enumValue = 'HTML';\n      break;\n    case SecurityContext.STYLE:\n      enumValue = 'STYLE';\n      break;\n    case SecurityContext.SCRIPT:\n      enumValue = 'SCRIPT';\n      break;\n    case SecurityContext.URL:\n      enumValue = 'URL';\n      break;\n    case SecurityContext.RESOURCE_URL:\n      enumValue = 'RESOURCE_URL';\n      break;\n    default:\n      throw new Error(`internal error, unexpected SecurityContext ${boundProp.securityContext}.`);\n  }\n  let ctx = ViewProperties.viewUtils.prop('sanitizer');\n  let args = [o.importExpr(Identifiers.SecurityContext).prop(enumValue), renderValue];\n  return ctx.callMethod('sanitize', args);\n}\n\nexport function bindRenderInputs(boundProps: BoundElementPropertyAst[],\n                                 compileElement: CompileElement): void {\n  bindAndWriteToRenderer(boundProps, compileElement.view.componentContext, compileElement);\n}\n\nexport function bindDirectiveHostProps(directiveAst: DirectiveAst, directiveInstance: o.Expression,\n                                       compileElement: CompileElement): void {\n  bindAndWriteToRenderer(directiveAst.hostProperties, directiveInstance, compileElement);\n}\n\nexport function bindDirectiveInputs(directiveAst: DirectiveAst, directiveInstance: o.Expression,\n                                    compileElement: CompileElement) {\n  if (directiveAst.inputs.length === 0) {\n    return;\n  }\n  var view = compileElement.view;\n  var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n  detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\n  var lifecycleHooks = directiveAst.directive.lifecycleHooks;\n  var calcChangesMap = lifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n  var isOnPushComp = directiveAst.directive.isComponent &&\n                     !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n  if (calcChangesMap) {\n    detectChangesInInputsMethod.addStmt(DetectChangesVars.changes.set(o.NULL_EXPR).toStmt());\n  }\n  if (isOnPushComp) {\n    detectChangesInInputsMethod.addStmt(DetectChangesVars.changed.set(o.literal(false)).toStmt());\n  }\n  directiveAst.inputs.forEach((input) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, input));\n    detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n    var fieldExpr = createBindFieldExpr(bindingIndex);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    var statements: o.Statement[] =\n        [directiveInstance.prop(input.directiveName).set(currValExpr).toStmt()];\n    if (calcChangesMap) {\n      statements.push(new o.IfStmt(DetectChangesVars.changes.identical(o.NULL_EXPR), [\n        DetectChangesVars.changes.set(o.literalMap([], new o.MapType(\n                                                           o.importType(Identifiers.SimpleChange))))\n            .toStmt()\n      ]));\n      statements.push(\n          DetectChangesVars.changes.key(o.literal(input.directiveName))\n              .set(o.importExpr(Identifiers.SimpleChange).instantiate([fieldExpr, currValExpr]))\n              .toStmt());\n    }\n    if (isOnPushComp) {\n      statements.push(DetectChangesVars.changed.set(o.literal(true)).toStmt());\n    }\n    if (view.genConfig.logBindingUpdate) {\n      statements.push(\n          logBindingUpdateStmt(compileElement.renderNode, input.directiveName, currValExpr));\n    }\n    bind(view, currValExpr, fieldExpr, input.value, view.componentContext, statements,\n         detectChangesInInputsMethod);\n  });\n  if (isOnPushComp) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(DetectChangesVars.changed, [\n      compileElement.appElement.prop('componentView')\n          .callMethod('markAsCheckOnce', [])\n          .toStmt()\n    ]));\n  }\n}\n\nfunction logBindingUpdateStmt(renderNode: o.Expression, propName: string,\n                              value: o.Expression): o.Statement {\n  return o.THIS_EXPR.prop('renderer')\n      .callMethod('setBindingDebugInfo',\n                  [\n                    renderNode,\n                    o.literal(`ng-reflect-${camelCaseToDashCase(propName)}`),\n                    value.isBlank().conditional(o.NULL_EXPR, value.callMethod('toString', []))\n                  ])\n      .toStmt();\n}\n"]}