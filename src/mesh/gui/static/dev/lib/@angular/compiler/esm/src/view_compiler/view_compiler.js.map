{"version":3,"file":"view_compiler.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/view_compiler.ts"],"names":[],"mappings":"OAIS,EAAC,UAAU,EAAC,MAAM,eAAe;OAEnC,EAAC,cAAc,EAAC,MAAM,mBAAmB;OACzC,EAAC,WAAW,EAAC,MAAM,gBAAgB;OACnC,EAAC,SAAS,EAAE,UAAU,EAAwB,MAAM,gBAAgB;OACpE,EAAC,QAAQ,EAAC,MAAM,eAAe;OAG/B,EAAC,cAAc,EAAC,MAAM,WAAW;AAExC;IACE,YAAmB,UAAyB,EAAS,cAAsB,EACxD,YAAqC;QADrC,eAAU,GAAV,UAAU,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAQ;QACxD,iBAAY,GAAZ,YAAY,CAAyB;IAAG,CAAC;AAC9D,CAAC;AACD;IACE,YAAoB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;IAAG,CAAC;IAElD,gBAAgB,CAAC,SAAmC,EAAE,QAAuB,EAC5D,MAAoB,EAAE,KAA4B;QACjE,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAC5C,cAAc,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QACxC,gEAAgE;QAChE,iDAAiD;QACjD,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACzB,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE7B,MAAM,CAAC,IAAI,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;AAOH,CAAC;AANM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACK,2BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Injectable} from '@angular/core';\nimport * as o from '../output/output_ast';\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {buildView, finishView, ViewCompileDependency} from './view_builder';\nimport {bindView} from './view_binder';\nimport {CompileDirectiveMetadata, CompilePipeMetadata} from '../compile_metadata';\nimport {TemplateAst} from '../template_ast';\nimport {CompilerConfig} from '../config';\n\nexport class ViewCompileResult {\n  constructor(public statements: o.Statement[], public viewFactoryVar: string,\n              public dependencies: ViewCompileDependency[]) {}\n}\nexport class ViewCompiler {\n  constructor(private _genConfig: CompilerConfig) {}\n\n  compileComponent(component: CompileDirectiveMetadata, template: TemplateAst[],\n                   styles: o.Expression, pipes: CompilePipeMetadata[]): ViewCompileResult {\n    var statements = [];\n    var dependencies = [];\n    var view = new CompileView(component, this._genConfig, pipes, styles, 0,\n                               CompileElement.createNull(), []);\n    buildView(view, template, dependencies);\n    // Need to separate binding from creation to be able to refer to\n    // variables that have been declared after usage.\n    bindView(view, template);\n    finishView(view, statements);\n\n    return new ViewCompileResult(statements, view.viewFactory.name, dependencies);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: CompilerConfig, },\n];\n}\n"]}