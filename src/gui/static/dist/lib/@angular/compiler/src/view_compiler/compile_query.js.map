{"version":3,"file":"compile_query.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_query.ts"],"names":[],"mappings":";AAIE,qBAAiC,uBAAuB,CAAC,CAAA;AAC3D,2BAA0B,6BAA6B,CAAC,CAAA;AAExD,IAAY,CAAC,WAAM,sBAAsB,CAAC,CAAA;AAC1C,4BAA0B,gBAAgB,CAAC,CAAA;AAO3C,qBAAgC,QAAQ,CAAC,CAAA;AAEzC;IACE,yBAAmB,IAAiB,EAAS,MAA6C;QAAvE,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAuC;IAAG,CAAC;IAChG,sBAAC;AAAD,CAAC,AAFD,IAEC;AAED;IAGE,sBAAmB,IAA0B,EAAS,SAAuB,EAC1D,wBAAsC,EAAS,IAAiB;QADhE,SAAI,GAAJ,IAAI,CAAsB;QAAS,cAAS,GAAT,SAAS,CAAc;QAC1D,6BAAwB,GAAxB,wBAAwB,CAAc;QAAS,SAAI,GAAJ,IAAI,CAAa;QACjF,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAmB,EAAE,IAAiB;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,MAAM,GAAqB,EAAE,CAAC;QAClC,OAAO,gBAAS,CAAC,WAAW,CAAC,IAAI,WAAW,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YAC3D,IAAI,QAAQ,GAAG,WAAW,CAAC,kBAAkB,CAAC;YAC9C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACzB,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC9B,CAAC;QACD,IAAI,qBAAqB,GAAG,wBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/E,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,MAAM,CAAC,OAAO,CAAC,UAAC,EAAE;YAChB,IAAI,IAAI,GACJ,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1F,EAAE,CAAC,CAAC,IAAI,YAAY,eAAe,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrE,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,aAAa,GAAG,IAAI,eAAe,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;gBAC7D,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtC,UAAU,GAAG,aAAa,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE9B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,wBAAwB,CAAC,OAAO,CACjC,qBAAqB,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,oCAAa,GAAb,UAAc,YAA2B;QACvC,IAAI,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QACxF,EAAE,CAAC,CAAC,gBAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YAChF,WAAW,CAAC,IAAI,CACZ,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAC1F,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACrB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAC9E,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;IAChF,CAAC;IACH,mBAAC;AAAD,CAAC,AAnDD,IAmDC;AAnDY,oBAAY,eAmDxB,CAAA;AAED,2BAA2B,UAA2B;IACpD,MAAM,CAAC,wBAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK;QACrD,EAAE,CAAC,CAAC,KAAK,YAAY,eAAe,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,EACpD,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAe,KAAK,CAAC;QAC7B,CAAC;IACH,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AAED,wBAAwB,qBAAmC,EAAE,IAAiB,EACtD,WAA2B;IACjD,IAAI,mBAAmB,GAAmB,WAAW,CAAC,GAAG,CAAC,UAAC,IAAI;QAC7D,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,gBAAgB,EAAE;QACxD,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAC7C,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;KACjE,CAAC,CAAC;AACL,CAAC;AAED,yBAAgC,KAA2B,EAAE,iBAA+B,EAC5D,YAAoB,EAAE,WAAwB;IAC5E,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,UAAU,CAAC,yBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7F,IAAI,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC;SACzB,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,yBAAW,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACxD,MAAM,EAAE,CAAC,CAAC;IAChD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AARe,uBAAe,kBAQ9B,CAAA;AAED,4BAAmC,GAAoC,EAAE,KAAmB;IAC1F,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ;QACpC,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,KAAK,GAAG,EAAE,CAAC;YACX,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC3B,CAAC;QACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC;AATe,0BAAkB,qBASjC,CAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isPresent, isBlank} from '../../src/facade/lang';\nimport {ListWrapper} from '../../src/facade/collection';\n\nimport * as o from '../output/output_ast';\nimport {Identifiers} from '../identifiers';\n\nimport {CompileQueryMetadata, CompileTokenMap} from '../compile_metadata';\n\nimport {CompileView} from './compile_view';\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {getPropertyInView} from './util';\n\nclass ViewQueryValues {\n  constructor(public view: CompileView, public values: Array<o.Expression | ViewQueryValues>) {}\n}\n\nexport class CompileQuery {\n  private _values: ViewQueryValues;\n\n  constructor(public meta: CompileQueryMetadata, public queryList: o.Expression,\n              public ownerDirectiveExpression: o.Expression, public view: CompileView) {\n    this._values = new ViewQueryValues(view, []);\n  }\n\n  addValue(value: o.Expression, view: CompileView) {\n    var currentView = view;\n    var elPath: CompileElement[] = [];\n    while (isPresent(currentView) && currentView !== this.view) {\n      var parentEl = currentView.declarationElement;\n      elPath.unshift(parentEl);\n      currentView = parentEl.view;\n    }\n    var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n\n    var viewValues = this._values;\n    elPath.forEach((el) => {\n      var last =\n          viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n      if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n        viewValues = last;\n      } else {\n        var newViewValues = new ViewQueryValues(el.embeddedView, []);\n        viewValues.values.push(newViewValues);\n        viewValues = newViewValues;\n      }\n    });\n    viewValues.values.push(value);\n\n    if (elPath.length > 0) {\n      view.dirtyParentQueriesMethod.addStmt(\n          queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n    }\n  }\n\n  afterChildren(targetMethod: CompileMethod) {\n    var values = createQueryValues(this._values);\n    var updateStmts = [this.queryList.callMethod('reset', [o.literalArr(values)]).toStmt()];\n    if (isPresent(this.ownerDirectiveExpression)) {\n      var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n      updateStmts.push(\n          this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n    }\n    if (!this.meta.first) {\n      updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n    }\n    targetMethod.addStmt(new o.IfStmt(this.queryList.prop('dirty'), updateStmts));\n  }\n}\n\nfunction createQueryValues(viewValues: ViewQueryValues): o.Expression[] {\n  return ListWrapper.flatten(viewValues.values.map((entry) => {\n    if (entry instanceof ViewQueryValues) {\n      return mapNestedViews(entry.view.declarationElement.appElement, entry.view,\n                            createQueryValues(entry));\n    } else {\n      return <o.Expression>entry;\n    }\n  }));\n}\n\nfunction mapNestedViews(declarationAppElement: o.Expression, view: CompileView,\n                        expressions: o.Expression[]): o.Expression {\n  var adjustedExpressions: o.Expression[] = expressions.map((expr) => {\n    return o.replaceVarInExpression(o.THIS_EXPR.name, o.variable('nestedView'), expr);\n  });\n  return declarationAppElement.callMethod('mapNestedViews', [\n    o.variable(view.className),\n    o.fn([new o.FnParam('nestedView', view.classType)],\n         [new o.ReturnStatement(o.literalArr(adjustedExpressions))])\n  ]);\n}\n\nexport function createQueryList(query: CompileQueryMetadata, directiveInstance: o.Expression,\n                                propertyName: string, compileView: CompileView): o.Expression {\n  compileView.fields.push(new o.ClassField(propertyName, o.importType(Identifiers.QueryList)));\n  var expr = o.THIS_EXPR.prop(propertyName);\n  compileView.createMethod.addStmt(o.THIS_EXPR.prop(propertyName)\n                                       .set(o.importExpr(Identifiers.QueryList).instantiate([]))\n                                       .toStmt());\n  return expr;\n}\n\nexport function addQueryToTokenMap(map: CompileTokenMap<CompileQuery[]>, query: CompileQuery) {\n  query.meta.selectors.forEach((selector) => {\n    var entry = map.get(selector);\n    if (isBlank(entry)) {\n      entry = [];\n      map.add(selector, entry);\n    }\n    entry.push(query);\n  });\n}\n"]}