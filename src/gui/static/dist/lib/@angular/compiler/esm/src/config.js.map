{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/config.ts"],"names":[],"mappings":"OAIS,EAAC,OAAO,EAAC,MAAM,oBAAoB;OACrC,EAAC,aAAa,EAAC,MAAM,0BAA0B;OAC/C,EAAC,WAAW,EAAC,MAAM,eAAe;AAGzC;IAEE,YAAmB,YAAqB,EAAS,gBAAyB,EACvD,MAAe,EAAE,WAAW,GAAgB,IAAI;QADhD,iBAAY,GAAZ,YAAY,CAAS;QAAS,qBAAgB,GAAhB,gBAAgB,CAAS;QACvD,WAAM,GAAN,MAAM,CAAS;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzB,WAAW,GAAG,IAAI,kBAAkB,EAAE,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;AACH,CAAC;AAED;;;;GAIG;AACH;IACE,IAAI,QAAQ,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACrE,IAAI,UAAU,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACvE,IAAI,aAAa,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC1E,IAAI,aAAa,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC1E,IAAI,UAAU,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACvE,IAAI,WAAW,KAAgC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED;IAAA;QACE,aAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAChC,eAAU,GAAG,IAAI,CAAC;QAClB,kBAAa,GAAG,IAAI,CAAC;QACrB,kBAAa,GAAG,IAAI,CAAC;QACrB,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAG,IAAI,CAAC;IACrB,CAAC;AAAD,CAAC;AAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {isBlank} from '../src/facade/lang';\nimport {unimplemented} from '../src/facade/exceptions';\nimport {Identifiers} from './identifiers';\nimport {CompileIdentifierMetadata} from './compile_metadata';\n\nexport class CompilerConfig {\n  public renderTypes: RenderTypes;\n  constructor(public genDebugInfo: boolean, public logBindingUpdate: boolean,\n              public useJit: boolean, renderTypes: RenderTypes = null) {\n    if (isBlank(renderTypes)) {\n      renderTypes = new DefaultRenderTypes();\n    }\n    this.renderTypes = renderTypes;\n  }\n}\n\n/**\n * Types used for the renderer.\n * Can be replaced to specialize the generated output to a specific renderer\n * to help tree shaking.\n */\nexport abstract class RenderTypes {\n  get renderer(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderText(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderElement(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderComment(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderNode(): CompileIdentifierMetadata { return unimplemented(); }\n  get renderEvent(): CompileIdentifierMetadata { return unimplemented(); }\n}\n\nexport class DefaultRenderTypes implements RenderTypes {\n  renderer = Identifiers.Renderer;\n  renderText = null;\n  renderElement = null;\n  renderComment = null;\n  renderNode = null;\n  renderEvent = null;\n}\n"]}