{"version":3,"file":"css_animation_builder.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/animate/css_animation_builder.ts"],"names":[],"mappings":"OAIS,EAAC,mBAAmB,EAAC,MAAM,yBAAyB;OACtD,EAAC,SAAS,EAAC,MAAM,aAAa;AAGrC;IAIE;;OAEG;IACH,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QANjD,kCAAkC;QAClC,SAAI,GAAwB,IAAI,mBAAmB,EAAE,CAAC;IAKF,CAAC;IAErD;;;OAGG;IACH,iBAAiB,CAAC,SAAiB;QACjC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,SAAiB;QACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,SAAiB;QAC3B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,IAA0B,EAAE,EAAwB;QAC5D,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAA0B;QACtC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,EAAwB;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAoB;QACxB,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAChE,CAAC;AACH,CAAC;AAAA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {CssAnimationOptions} from './css_animation_options';\nimport {Animation} from './animation';\nimport {BrowserDetails} from './browser_details';\n\nexport class CssAnimationBuilder {\n  /** @type {CssAnimationOptions} */\n  data: CssAnimationOptions = new CssAnimationOptions();\n\n  /**\n   * Accepts public properties for CssAnimationBuilder\n   */\n  constructor(public browserDetails: BrowserDetails) {}\n\n  /**\n   * Adds a temporary class that will be removed at the end of the animation\n   * @param className\n   */\n  addAnimationClass(className: string): CssAnimationBuilder {\n    this.data.animationClasses.push(className);\n    return this;\n  }\n\n  /**\n   * Adds a class that will remain on the element after the animation has finished\n   * @param className\n   */\n  addClass(className: string): CssAnimationBuilder {\n    this.data.classesToAdd.push(className);\n    return this;\n  }\n\n  /**\n   * Removes a class from the element\n   * @param className\n   */\n  removeClass(className: string): CssAnimationBuilder {\n    this.data.classesToRemove.push(className);\n    return this;\n  }\n\n  /**\n   * Sets the animation duration (and overrides any defined through CSS)\n   * @param duration\n   */\n  setDuration(duration: number): CssAnimationBuilder {\n    this.data.duration = duration;\n    return this;\n  }\n\n  /**\n   * Sets the animation delay (and overrides any defined through CSS)\n   * @param delay\n   */\n  setDelay(delay: number): CssAnimationBuilder {\n    this.data.delay = delay;\n    return this;\n  }\n\n  /**\n   * Sets styles for both the initial state and the destination state\n   * @param from\n   * @param to\n   */\n  setStyles(from: {[key: string]: any}, to: {[key: string]: any}): CssAnimationBuilder {\n    return this.setFromStyles(from).setToStyles(to);\n  }\n\n  /**\n   * Sets the initial styles for the animation\n   * @param from\n   */\n  setFromStyles(from: {[key: string]: any}): CssAnimationBuilder {\n    this.data.fromStyles = from;\n    return this;\n  }\n\n  /**\n   * Sets the destination styles for the animation\n   * @param to\n   */\n  setToStyles(to: {[key: string]: any}): CssAnimationBuilder {\n    this.data.toStyles = to;\n    return this;\n  }\n\n  /**\n   * Starts the animation and returns a promise\n   * @param element\n   */\n  start(element: HTMLElement): Animation {\n    return new Animation(element, this.data, this.browserDetails);\n  }\n}\n"]}