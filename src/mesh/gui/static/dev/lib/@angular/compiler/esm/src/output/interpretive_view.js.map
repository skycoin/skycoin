{"version":3,"file":"interpretive_view.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/output/interpretive_view.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {AppElement, AppView, DebugAppView} from '../../core_private';\n\nimport {isPresent} from '../../src/facade/lang';\nimport {BaseException} from '../../src/facade/exceptions';\nimport {InstanceFactory, DynamicInstance} from './output_interpreter';\n\nexport class InterpretiveAppViewInstanceFactory implements InstanceFactory {\n  createInstance(superClass: any, clazz: any, args: any[], props: Map<string, any>,\n                 getters: Map<string, Function>, methods: Map<string, Function>): any {\n    if (superClass === AppView) {\n      // We are always using DebugAppView as parent.\n      // However, in prod mode we generate a constructor call that does\n      // not have the argument for the debugNodeInfos.\n      args = args.concat([null]);\n      return new _InterpretiveAppView(args, props, getters, methods);\n    } else if (superClass === DebugAppView) {\n      return new _InterpretiveAppView(args, props, getters, methods);\n    }\n    throw new BaseException(`Can't instantiate class ${superClass} in interpretative mode`);\n  }\n}\n\nclass _InterpretiveAppView extends DebugAppView<any> implements DynamicInstance {\n  constructor(args: any[], public props: Map<string, any>, public getters: Map<string, Function>,\n              public methods: Map<string, Function>) {\n    super(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n  }\n  createInternal(rootSelector: string | any): AppElement {\n    var m = this.methods.get('createInternal');\n    if (isPresent(m)) {\n      return m(rootSelector);\n    } else {\n      return super.createInternal(rootSelector);\n    }\n  }\n  injectorGetInternal(token: any, nodeIndex: number, notFoundResult: any): any {\n    var m = this.methods.get('injectorGetInternal');\n    if (isPresent(m)) {\n      return m(token, nodeIndex, notFoundResult);\n    } else {\n      return super.injectorGet(token, nodeIndex, notFoundResult);\n    }\n  }\n  destroyInternal(): void {\n    var m = this.methods.get('destroyInternal');\n    if (isPresent(m)) {\n      return m();\n    } else {\n      return super.destroyInternal();\n    }\n  }\n  dirtyParentQueriesInternal(): void {\n    var m = this.methods.get('dirtyParentQueriesInternal');\n    if (isPresent(m)) {\n      return m();\n    } else {\n      return super.dirtyParentQueriesInternal();\n    }\n  }\n  detectChangesInternal(throwOnChange: boolean): void {\n    var m = this.methods.get('detectChangesInternal');\n    if (isPresent(m)) {\n      return m(throwOnChange);\n    } else {\n      return super.detectChangesInternal(throwOnChange);\n    }\n  }\n}\n"]}