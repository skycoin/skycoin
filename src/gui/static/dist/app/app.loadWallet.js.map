{"version":3,"sources":["app/app.loadWallet.ts"],"names":[],"mappings":"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","file":"app.loadWallet.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ROUTER_DIRECTIVES, OnActivate} from '@angular/router';\nimport {Http, HTTP_BINDINGS, Response} from '@angular/http';\nimport {HTTP_PROVIDERS, Headers} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {QRCodeComponent} from './ng2-qrcode';\n\ndeclare var _: any;\ndeclare var $: any;\ndeclare var async: any;\ndeclare var moment: any;\ndeclare var toastr: any;\n\nexport class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 5) {\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = _.range(startPage, endPage + 1);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n\n@Component({\n    selector: 'load-wallet',\n    directives: [ROUTER_DIRECTIVES, QRCodeComponent],\n    providers: [PagerService],\n    templateUrl: 'app/templates/wallet.html'\n})\n\nexport class LoadWalletComponent implements OnInit {\n    //Declare default varialbes\n    wallets : Array<any>;\n    walletsWithAddress : Array<any>;\n    progress: any;\n    spendid: string;\n    spendaddress: string;\n    sendDisable: boolean;\n    readyDisable: boolean;\n    displayMode: DisplayModeEnum;\n    displayModeEnum = DisplayModeEnum;\n    selectedMenu: string;\n\n    QrAddress: string;\n    QrIsVisible: boolean;\n\n    NewWalletIsVisible: boolean;\n    EditWalletIsVisible: boolean;\n    loadSeedIsVisible: boolean;\n\n    walletname: string;\n    walletId: string;\n\n    historyTable: Array<any>;\n    pendingTable: Array<any>;\n    addresses: Array<any>;\n    connections: Array<any>;\n    defaultConnections: Array<any>;\n    blockChain: any;\n    outputs: Array<any>;\n    NewDefaultConnectionIsVisible : boolean;\n    EditDefaultConnectionIsVisible : boolean;\n    oldConnection:string;\n    filterAddressVal:string;\n    totalSky:any;\n    randomWords:any;\n    historySearchKey:string;\n    selectedWallet:any;\n\n    sortDir:{};\n    isValidAddress: boolean;\n\n    blockViewMode:string;\n    selectedBlock: any = {};\n    selectedBlockTransaction:any = {};\n    selectedBlockAddress:string;\n    selectedBlockAddressBalance:any = 0;\n    selectedBlackAddressTxList: any = [];\n\n    // pager object\n    historyPager: any = {};\n    historyPagedItems: any[];\n\n    blockPager: any = {};\n    blockPagedItems: any[];\n\n    //Constructor method for load HTTP object\n    constructor(private http: Http, private pagerService: PagerService) { }\n\n    //Init function for load default value\n    ngOnInit() {\n        this.displayMode = DisplayModeEnum.first;\n        this.totalSky = 0;\n        this.selectedWallet = {};\n        this.loadWallet();\n        this.loadConnections();\n        this.loadDefaultConnections();\n        this.loadBlockChain();\n        this.loadProgress();\n        this.loadOutputs();\n        this.loadTransactions();\n        this.isValidAddress = false;\n        this.blockViewMode = 'recentBlocks'\n\n        //Set interval function for load wallet every 15 seconds\n        setInterval(() => {\n            this.loadWallet();\n            //console.log(\"Refreshing balance\");\n        }, 30000);\n        setInterval(() => {\n            this.loadConnections();\n            this.loadBlockChain();\n            //console.log(\"Refreshing connections\");\n        }, 15000);\n\n        //Enable Send tab \"textbox\" and \"Ready\" button by default\n        this.sendDisable = true;\n        this.readyDisable = false;\n        this.pendingTable = [];\n        this.selectedMenu = \"Wallets\";\n        this.sortDir = {time:0, amount:0, address:0};\n        this.filterAddressVal = '';\n        this.historySearchKey = '';\n\n        if(localStorage.getItem('historyAddresses') != null){\n            this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n        } else {\n            localStorage.setItem('historyAddresses',JSON.stringify([]));\n            this.addresses = JSON.parse(localStorage.getItem('historyAddresses'));\n        }\n\n        /*$(\"#walletSelect\").select2({\n            templateResult: function(state) {\n                return state.text;\n                /!*if (!state.id) { return state.text; }\n                 var $state = $(\n                 '<span><img src=\"vendor/images/flags/' + state.element.value.toLowerCase() + '.png\" class=\"img-flag\" /> ' + state.text + '</span>'\n                 );\n                 return $state;*!/\n            }\n        });*/\n    }\n\n    //Ready button function for disable \"textbox\" and enable \"Send\" button for ready to send coin\n    ready(spendId, spendaddress, spendamount){\n        if(!spendId){\n            toastr.error(\"Please select from id\");\n            return false;\n        }\n        if(!spendaddress){\n            toastr.error(\"Please enter pay to\");\n            return false;\n        }\n        if(!spendamount){\n            toastr.error(\"Please enter amount\");\n            return false;\n        }\n        this.readyDisable = true;\n        this.sendDisable = false;\n    }\n\n    //Load wallet function\n    loadWallet(){\n        this.totalSky = 0;\n        this.http.post('/wallets', '')\n            .map((res:Response) => res.json())\n            .subscribe(\n                data => {\n                    if(this.wallets == null || this.wallets.length == 0) {\n                      _.each(data, (o)=>{\n                        o.showChild = false;\n                      })\n                      this.wallets = data;\n                      if (this.wallets.length > 0) {\n                        this.onSelectWallet(this.wallets[0].meta.filename);\n                      }\n                    } else {\n                      data.map((w)=>{\n                        var old = _.find(this.wallets, (o)=>{\n                          return o.meta.filename === w.meta.filename;\n                        })\n\n                        if(old) {\n                          _.extend(old, w);\n                        } else {\n                          w.showChild = false;\n                          this.wallets.push(w);\n                        }\n                      })\n                    }\n\n                    //console.log(\"this.wallets\", this.wallets);\n\n                    //Load Balance for each wallet\n                    //var inc = 0;\n                    //console.log(\"data\", data);\n                    _.map(data, (item, idx) => {\n                        var filename = item.meta.filename;\n                        this.loadWalletItem(filename, idx);\n                    })\n\n                    this.walletsWithAddress = [];\n                    _.map(this.wallets, (o, idx) => {\n                        this.walletsWithAddress.push({\n                            wallet:o,\n                            type:'wallet'\n                        });\n\n                        _.map(o.entries, (_o, idx) => {\n                            this.walletsWithAddress.push({\n                                entry:_o,\n                                type:'address',\n                                wallet:o,\n                                idx:idx==0?'':'(' + idx + ')'\n                            });\n                        });\n                    });\n\n                },\n                err => console.log(err),\n                () => {\n                  //console.log('Wallet load done')\n                }\n            );\n    }\n    checkValidAddress(address) {\n      if(address === \"\") {\n          this.isValidAddress = false;\n      } else {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/balance?addrs=' + address, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                //Response from API\n                response => {\n                    this.isValidAddress = true;\n                }, err => {\n                  //console.log(\"Error on load balance: \" + err)\n                  this.isValidAddress = false;\n                }, () => {\n\n                })\n      }\n    }\n    loadWalletItem(address, inc){\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/wallet/balance?id=' + address, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                //Response from API\n                response => {\n                    //console.log('load done: ' + inc, response);\n                    this.wallets[inc].balance = response.confirmed.coins / 1000000;\n                    this.totalSky += this.wallets[inc].balance;\n                }, err => console.log(\"Error on load balance: \" + err), () => {\n                  //console.log('Balance load done')\n                })\n        //get address balances\n        this.wallets[inc].entries.map((entry)=>{\n          this.http.get('/balance?addrs=' + entry.address, { headers: headers })\n              .map((res) => res.json())\n              .subscribe(\n                  //Response from API\n                  response => {\n                      //console.log('balance:' + entry.address, response);\n                      entry.balance = response.confirmed.coins / 1000000;\n                  }, err => console.log(\"Error on load balance: \" + err), () => {\n                    //console.log('Balance load done')\n                  })\n        })\n    }\n    loadConnections() {\n        this.http.post('/network/connections', '')\n            .map((res) => res.json())\n            .subscribe(data => {\n                //console.log(\"connections\", data);\n                this.connections = data.connections;\n            }, err => console.log(\"Error on load connection: \" + err), () => {\n              //console.log('Connection load done')\n            });\n    }\n    loadTransactions() {\n        this.historyTable = [];\n        this.http.get('/lastTxs', {})\n            .map((res) => res.json())\n            .subscribe(data => {\n                console.log(\"transactions\", data);\n                this.historyTable = this.historyTable.concat(data);\n                this.setHistoryPage(1);\n            }, err => console.log(\"Error on load transactions: \" + err), () => {\n              //console.log('Connection load done')\n            });\n        this.http.get('/pendingTxs', {})\n            .map((res) => res.json())\n            .subscribe(data => {\n                console.log(\"pending transactions\", data);\n                this.historyTable = this.historyTable.concat(data);\n                this.setHistoryPage(1);\n            }, err => console.log(\"Error on pending transactions: \" + err), () => {\n\n            });\n    }\n    GetTransactionAmount(transaction) {\n      var ret = 0;\n      _.each(transaction.txn.outputs, function(o){\n        ret += Number(o.coins);\n      })\n\n      return ret;\n    }\n    GetTransactionAmount2(transaction) {\n      var ret = 0;\n      _.each(transaction.outputs, function(o){\n        ret += Number(o.coins);\n      })\n\n      return ret;\n    }\n    GetBlockAmount(block) {\n      var ret = [];\n      _.each(block.body.txns, function(o){\n        _.each(o.outputs, function(_o){\n          ret.push(_o.coins);\n        })\n      })\n\n      return ret.join(\",\");\n    }\n    GetBlockTotalAmount(block) {\n      var ret = 0;\n      _.each(block.body.txns, function(o){\n        _.each(o.outputs, function(_o){\n          ret += Number(_o.coins);\n        })\n      })\n\n      return ret;\n    }\n    loadDefaultConnections() {\n        this.http.post('/network/defaultConnections', '')\n            .map((res) => res.json())\n            .subscribe(data => {\n                //console.log(\"default connections\", data);\n                this.defaultConnections = data;\n            }, err => console.log(\"Error on load default connection: \" + err), () => {\n              //console.log('Default connections load done')\n            });\n    }\n    loadOutputs() {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/outputs', { headers: headers })\n            .map((res) => res.json())\n            .subscribe(data => {\n                this.outputs = _.sortBy(data, function(o){\n                    return o.address;\n                });\n                this.outputs.length = Math.min(100, this.outputs.length);\n            }, err => console.log(\"Error on load outputs: \" + err), () => {\n              //console.log('Connection load done')\n            });\n    }\n    loadBlockChain() {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/last_blocks?num=10', { headers: headers })\n            .map((res) => res.json())\n            .subscribe(data => {\n                //console.log(\"blockchain\", data);\n                this.blockChain = _.sortBy(data.blocks, function(o){\n                  return o.header.seq * (-1);\n                });\n                this.setBlockPage(1);\n            }, err => console.log(\"Error on load blockchain: \" + err), () => {\n              //console.log('blockchain load done');\n            });\n    }    //Load progress function for Skycoin\n    loadProgress(){\n        //Post method executed\n        this.http.post('/blockchain/progress', '')\n            .map((res:Response) => res.json())\n            .subscribe(\n                //Response from API\n                response => { this.progress = (parseInt(response.current,10)+1) / parseInt(response.highest,10) * 100 },\n                err => console.log(\"Error on load progress: \"+err),\n                () => {\n                  //console.log('Progress load done:' + this.progress)\n                }\n            );\n    }\n    toggleShowChild(wallet) {\n      wallet.showChild = !wallet.showChild;\n    }\n\n    //Switch tab function\n    switchTab(mode: DisplayModeEnum, wallet) {\n        //\"Textbox\" and \"Ready\" button enable in Send tab while switching tabs\n        this.sendDisable = true;\n        this.readyDisable = false;\n\n        this.displayMode = mode;\n        if(wallet){\n            this.spendid = wallet.meta.filename;\n            this.selectedWallet = _.find(this.wallets, function(o){\n              return o.meta.filename === wallet.meta.filename;\n            })\n            console.log(\"selected wallet\", this.spendid, this.selectedWallet);\n        }\n    }\n    selectMenu(menu, event) {\n        this.displayMode = this.displayModeEnum.fifth;\n        event.preventDefault();\n        this.selectedMenu = menu;\n    }\n    getDateTimeString(ts) {\n        return moment.unix(ts).format(\"YYYY-MM-DD HH:mm\")\n    }\n    getElapsedTime(ts) {\n        return moment().unix() - ts;\n    }\n    //Show QR code function for show QR popup\n    showQR(wallet){\n        this.QrAddress = wallet.entries[0].address;\n        this.QrIsVisible = true;\n    }\n    //Hide QR code function for hide QR popup\n    hideQrPopup(){\n        this.QrIsVisible = false;\n    }\n\n    //Show wallet function for view New wallet popup\n    showNewWalletDialog(){\n        this.NewWalletIsVisible = true;\n        this.randomWords = this.getRandomWords();\n    }\n    //Hide wallet function for hide New wallet popup\n    hideWalletPopup(){\n        this.NewWalletIsVisible = false;\n    }\n    showNewDefaultConnectionDialog(){\n        this.NewDefaultConnectionIsVisible = true;\n    }\n    hideNewDefaultConnectionDialog(){\n        this.NewDefaultConnectionIsVisible = false;\n    }\n    showEditDefaultConnectionDialog(item){\n        this.oldConnection = item;\n        this.EditDefaultConnectionIsVisible = true;\n    }\n    hideEditDefaultConnectionDialog(){\n        this.EditDefaultConnectionIsVisible = false;\n    }\n    createDefaultConnection(connectionValue){\n        //console.log(\"new value\", connectionValue);\n        this.defaultConnections.push(connectionValue);\n        this.NewDefaultConnectionIsVisible = false;\n    }\n    updateDefaultConnection(connectionValue){\n        //console.log(\"old/new value\", this.oldConnection, connectionValue);\n        var idx = this.defaultConnections.indexOf(this.oldConnection);\n        this.defaultConnections.splice(idx, 1);\n        this.defaultConnections.splice(idx, 0, connectionValue);\n        this.EditDefaultConnectionIsVisible = false;\n    }\n    deleteDefaultConnection(item){\n        var idx = this.defaultConnections.indexOf(item);\n        this.defaultConnections.splice(idx, 1);\n    }\n    //Add new wallet function for generate new wallet in Skycoin\n    createNewWallet(label, seed, addressCount){\n        if(addressCount < 1) {\n          //alert(\"Please input correct address count\");\n            toastr.error('Please input correct address count');\n          return;\n        }\n\n        //check if label is duplicated\n        var old = _.find(this.wallets, function(o){\n          return (o.meta.label == label)\n        })\n\n        if(old) {\n            toastr.error('This wallet label is used already.');\n          //alert(\"This wallet label is used already\");\n          return;\n        }\n\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n        //Post method executed\n        var stringConvert = 'label='+label+'&seed='+seed;\n        this.http.post('/wallet/create', stringConvert, {headers: headers})\n            .map((res:Response) => res.json())\n            .subscribe(\n                response => {\n                  console.log(response)\n\n                  if(addressCount > 1) {\n                    var repeats = [];\n                    for(var i = 0; i < addressCount - 1 ; i++) {\n                      repeats.push(i)\n                    }\n\n                    async.map(repeats, (idx, callback) => {\n                        var stringConvert = 'id='+response.meta.filename;\n                        this.http.post('/wallet/newAddress', stringConvert, {headers: headers})\n                            .map((res:Response) => res.json())\n                            .subscribe(\n                                response => {\n                                  console.log(response)\n                                  callback(null, null)\n                                },\n                                err => {\n                                  callback(err, null)\n                                },\n                                () => {}\n                            );\n                    }, (err, ret) => {\n                      if(err) {\n                        console.log(err);\n                        return;\n                      }\n\n                      //Hide new wallet popup\n                      this.NewWalletIsVisible = false;\n                        toastr.info(\"New wallet created successfully\");\n                      //Load wallet for refresh list\n                      this.loadWallet();\n                    })\n                  } else {\n                    //Hide new wallet popup\n                    this.NewWalletIsVisible = false;\n                      toastr.info(\"New wallet created successfully\");\n                    //Load wallet for refresh list\n                    this.loadWallet();\n                  }\n                },\n                err => {\n                  console.log(err);\n                },\n                () => {}\n            );\n    }\n\n    //Edit existing wallet function\n    editWallet(wallet){\n        this.EditWalletIsVisible = true;\n        this.walletId = wallet.meta.filename;\n    }\n    addNewAddress(wallet) {\n      //Set http headers\n      var headers = new Headers();\n      headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n      //Post method executed\n      var stringConvert = 'id='+wallet.meta.filename;\n      this.http.post('/wallet/newAddress', stringConvert, {headers: headers})\n          .map((res:Response) => res.json())\n          .subscribe(\n              response => {\n              console.log(response)\n                  toastr.info(\"New address created successfully\");\n              //Load wallet for refresh list\n              this.loadWallet();\n              },\n              err => {\n                console.log(err);\n              },\n              () => {}\n          );\n    }\n    //Hide edit wallet function\n    hideEditWalletPopup(){\n        this.EditWalletIsVisible = false;\n    }\n\n    //Update wallet function for update wallet label\n    updateWallet(walletid, walletName){\n      console.log(\"update wallet\", walletid, walletName);\n        //check if label is duplicated\n        var old = _.find(this.wallets, function(o){\n          return (o.meta.label == walletName)\n        })\n\n        if(old) {\n            toastr.error(\"This wallet label is used already\");\n          return;\n        }\n\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var stringConvert = 'label='+walletName+'&id='+walletid;\n        //Post method executed\n        this.http.post('/wallet/update', stringConvert, {headers: headers})\n            .map((res:Response) => res.json())\n            .subscribe(\n                response => {\n                    //Hide new wallet popup\n                    this.EditWalletIsVisible = false;\n                    toastr.info(\"Wallet updated successfully\");\n                    //Load wallet for refresh list\n                    this.loadWallet();\n                },\n                err => console.log(\"Error on update wallet: \"+JSON.stringify(err)),\n                () => {\n                  //console.log('Update wallet done')\n                }\n            );\n    }\n\n    //Load wallet seed function\n    openLoadWallet(walletName, seed){\n        this.loadSeedIsVisible = true;\n    }\n    //Hide load wallet seed function\n    hideLoadSeedWalletPopup(){\n        this.loadSeedIsVisible = false;\n    }\n\n    //Load wallet seed function for create new wallet with name and seed\n    createWalletSeed(walletName, seed){\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var stringConvert = 'name='+walletName+'&seed='+seed;\n        //Post method executed\n        this.http.post('/wallet/create', stringConvert, {headers: headers})\n            .map((res:Response) => res.json())\n            .subscribe(\n                response => {\n                    //Hide load wallet seed popup\n                    this.loadSeedIsVisible = false;\n                    //Load wallet for refresh list\n                    this.loadWallet();\n                },\n                err => console.log(\"Error on create load wallet seed: \"+JSON.stringify(err)),\n                () => {\n                  //console.log('Load wallet seed done')\n                }\n            );\n    }\n\n    sortHistory(key) {\n      if(this.sortDir[key]==0)\n        this.sortDir[key] = 1;\n      else\n        this.sortDir[key] = this.sortDir[key] * (-1);\n\n      if(key == 'time'){\n        this.sortDir['address'] = 0;\n        this.sortDir['amount'] = 0;\n      } else if(key == 'amount') {\n        this.sortDir['time'] = 0;\n        this.sortDir['address'] = 0;\n      } else {\n        this.sortDir['time'] = 0;\n        this.sortDir['amount'] = 0;\n      }\n\n      var self = this;\n        if(key == 'time') {\n            this.historyTable = _.sortBy(this.historyTable, function(o){\n                return o.txn.timestamp;\n            });\n        } else if(key == 'amount') {\n            this.historyTable = _.sortBy(this.historyTable, function(o){\n                return Number(o[key]);\n            });\n        } else if(key == 'address') {\n            this.historyTable = _.sortBy(this.historyTable, function(o){\n                return o[key];\n            })\n        };\n\n        if(this.sortDir[key] == -1) {\n          this.historyTable = this.historyTable.reverse();\n        }\n\n            this.setHistoryPage(this.historyPager.currentPage);\n    }\n\n    filterHistory(address) {\n      console.log(\"filterHistory\", address);\n      this.filterAddressVal = address;\n    }\n\n    spend(spendid, spendaddress, spendamount){\n        var amount = Number(spendamount);\n        if(amount < 1) {\n            toastr.error('Cannot send values less than 1.');\n          return;\n        }\n\n        //this.historyTable.push({address:spendaddress, amount:spendamount, time:Date.now()/1000});\n        //localStorage.setItem('historyTable',JSON.stringify(this.historyTable));\n\n        var oldItem = _.find(this.addresses, function(o){\n          return o.address === spendaddress;\n        })\n\n        if(!oldItem) {\n          this.addresses.push({address:spendaddress, amount:spendamount});\n          localStorage.setItem('historyAddresses',JSON.stringify(this.addresses));\n        }\n\n        this.readyDisable = true;\n        this.sendDisable = true;\n        //Set http headers\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var stringConvert = 'id='+spendid+'&coins='+spendamount*1000000+\"&fee=1&hours=1&dst=\"+spendaddress;\n        //Post method executed\n        this.http.post('/wallet/spend', stringConvert, {headers: headers})\n            .map((res:Response) => res.json())\n            .subscribe(\n                response => {\n                    console.log(response);\n                    response.txn.time = Date.now()/1000;\n                    response.txn.address = spendaddress;\n                    response.txn.amount = spendamount;\n                    this.pendingTable.push(response);\n                    //Load wallet for refresh list\n                    this.loadWallet();\n                    this.readyDisable = false;\n                    this.sendDisable = true;\n                },\n                err => {\n                    this.readyDisable = false;\n                    this.sendDisable = true;\n                    var logBody = err._body;\n                    if(logBody == 'Invalid \"coins\" value') {\n                        toastr.error('Incorrect amount value.');\n                      return;\n                    } else if (logBody == 'Invalid connection') {\n                        toastr.error(logBody);\n                      return;\n                    } else {\n                      var logContent = JSON.parse(logBody.substring(logBody.indexOf(\"{\")));\n                        toastr.error(logContent.error);\n                    }\n\n                    //this.pendingTable.push({complete: 'Pending', address: spendaddress, amount: spendamount});\n                },\n                () => {\n                  //console.log('Spend successfully')\n                  $(\"#send_pay_to\").val(\"\");\n                  $(\"#send_amount\").val(0);\n                }\n            );\n    }\n\n    setHistoryPage(page: number) {\n        this.historyPager.totalPages = this.historyTable.length;\n\n        if (page < 1 || page > this.historyPager.totalPages) {\n            return;\n        }\n\n        // get pager object from service\n        this.historyPager = this.pagerService.getPager(this.historyTable.length, page);\n\n        console.log(\"this.historyPager\", this.historyPager );\n        // get current page of items\n        this.historyPagedItems = this.historyTable.slice(this.historyPager.startIndex, this.historyPager.endIndex + 1);\n        //console.log('this.pagedItems', this.historyTable, this.pagedItems);\n    }\n\n    setBlockPage(page: number) {\n        this.blockPager.totalPages = this.blockChain.length;\n\n        if (page < 1 || page > this.blockPager.totalPages) {\n            return;\n        }\n\n        // get pager object from service\n        this.blockPager = this.pagerService.getPager(this.blockChain.length, page);\n\n        // get current page of items\n        this.blockPagedItems = this.blockChain.slice(this.blockPager.startIndex, this.blockPager.endIndex + 1);\n        //console.log(\"this.blockPagedItems\", this.blockPagedItems);\n    }\n\n    searchHistory(searchKey){\n      console.log(searchKey);\n\n    }\n\n    searchBlockHistory(searchKey){\n      console.log(searchKey);\n\n    }\n\n    getRandomWords() {\n      var ret = [];\n      for(var i = 0 ; i < 11; i++) {\n        var length = Math.round(Math.random() * 10);\n        length = Math.max(length, 3);\n\n        ret.push(this.createRandomWord(length));\n      }\n\n      return ret.join(\" \");\n    }\n\n    createRandomWord(length) {\n      var consonants = 'bcdfghjklmnpqrstvwxyz',\n          vowels = 'aeiou',\n          rand = function(limit) {\n              return Math.floor(Math.random()*limit);\n          },\n          i, word='',\n          consonants2 = consonants.split(''),\n          vowels2 = vowels.split('');\n      for (i=0;i<length/2;i++) {\n          var randConsonant = consonants2[rand(consonants.length)],\n              randVowel = vowels2[rand(vowels.length)];\n          word += (i===0) ? randConsonant.toUpperCase() : randConsonant;\n          word += i*2<length-1 ? randVowel : '';\n      }\n      return word;\n    }\n\n    onSelectWallet(val) {\n      console.log(\"onSelectWallet\", val);\n      //this.selectedWallet = val;\n      this.spendid = val;\n      this.selectedWallet = _.find(this.wallets, function(o){\n        return o.meta.filename === val;\n      })\n    }\n\n    showBlockDetail(block) {\n      //change viewMode as blockDetail\n      this.blockViewMode = 'blockDetail';\n      this.selectedBlock = block;\n    }\n\n    showRecentBlock() {\n      this.blockViewMode = 'recentBlocks';\n    }\n\n    showBlockTransactionDetail(txns) {\n      this.blockViewMode = 'blockTransactionDetail';\n      this.selectedBlockTransaction = txns;\n    }\n\n    showTransactionDetail(txId) {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.get('/transaction?txid=' + txId, { headers: headers })\n            .map((res) => res.json())\n            .subscribe(\n                //Response from API\n                response => {\n                    console.log(response);\n                    this.blockViewMode = 'blockTransactionDetail';\n                    this.selectedBlockTransaction = response.txn;\n                }, err => {\n                    console.log(\"Error on load transaction: \" + err)\n                }, () => {\n                })\n    }\n\n    showBlockAddressDetail(address) {\n      this.blockViewMode = 'blockAddressDetail';\n      this.selectedBlockAddress = address;\n\n      var headers = new Headers();\n      headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var txList = [];\n        async.parallel([\n            (callback)=>{\n                this.http.get('/balance?addrs=' + address, { headers: headers })\n                    .map((res) => res.json())\n                    .subscribe(\n                        //Response from API\n                        response => {\n                            //console.log(response);\n                            this.selectedBlockAddressBalance = response.confirmed.coins/1000000;\n                            callback(null, null);\n                        }, err => {\n                            callback(err, null);\n                            //console.log(\"Error on load balance: \" + err)\n                        }, () => {\n                        })\n            },\n            (callback) => {\n                this.http.get('/address_in_uxouts?address=' + address, { headers: headers })\n                    .map((res) => res.json())\n                    .subscribe(\n                        //Response from API\n                        response => {\n                            console.log(\"address_in_uxouts\", response);\n                            _.map(response, (o)=>{\n                                o.type = 'in';\n                                txList.push(o)\n                            });\n                            callback(null, null);\n                        }, err => {\n                            callback(err, null);\n                            //console.log(\"Error on load balance: \" + err)\n                        }, () => {\n                        })\n            },\n            (callback) => {\n                this.http.get('/address_out_uxouts?address=' + address, { headers: headers })\n                    .map((res) => res.json())\n                    .subscribe(\n                        //Response from API\n                        response => {\n                            console.log(\"address_out_uxouts\", response);\n                            _.map(response, (o)=>{\n                                o.type = 'out';\n                                txList.push(o)\n                            });\n                            callback(null, null);\n                        }, err => {\n                            callback(err, null);\n                            //console.log(\"Error on load balance: \" + err)\n                        }, () => {\n                        })\n            }\n        ], (err, rets)=>{\n            console.log(err, rets);\n            this.selectedBlackAddressTxList = _.sortBy(txList, (o)=>{\n                return o.time;\n            })\n        })\n    }\n}\n\n//Set default enum value for tabs\nenum DisplayModeEnum {\n    first = 0,\n    second = 1,\n    third = 2,\n    fourth = 3,\n    fifth = 4\n}"]}