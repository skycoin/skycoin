{"version":3,"file":"ng_model.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/forms/directives/ng_model.ts"],"names":[],"mappings":"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","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {\n  OnChanges,\n  SimpleChange,\n  Directive,\n  forwardRef,\n  Provider,\n  Inject,\n  Optional,\n  Self\n} from '@angular/core';\nimport {EventEmitter, ObservableWrapper} from '../../../src/facade/async';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {Control} from '../model';\nimport {NG_VALIDATORS, NG_ASYNC_VALIDATORS} from '../validators';\nimport {\n  setUpControl,\n  isPropertyUpdated,\n  selectValueAccessor,\n  composeValidators,\n  composeAsyncValidators\n} from './shared';\nimport {ValidatorFn, AsyncValidatorFn} from './validators';\n\nexport const formControlBinding: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: NgControl,\n      useExisting: forwardRef(() => NgModel)\n    };\nexport class NgModel extends NgControl implements OnChanges {\n  /** @internal */\n  _control = new Control();\n  /** @internal */\n  _added = false;\n  update = new EventEmitter();\n  model: any;\n  viewModel: any;\n\n  constructor( private _validators: any[], private _asyncValidators: any[],\n              valueAccessors: ControlValueAccessor[]) {\n    super();\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    if (!this._added) {\n      setUpControl(this._control, this);\n      this._control.updateValueAndValidity({emitEvent: false});\n      this._added = true;\n    }\n\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._control.updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n\n  get control(): Control { return this._control; }\n\n  get path(): string[] { return []; }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n\n  viewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    ObservableWrapper.callEmit(this.update, newValue);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngModel]:not([ngControl]):not([ngFormControl])',\n  bindings: [formControlBinding],\n  inputs: ['model: ngModel'],\n  outputs: ['update: ngModelChange'],\n  exportAs: 'ngForm'\n}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\n}\n"]}