{"version":3,"file":"checkbox_value_accessor.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms/directives/checkbox_value_accessor.ts"],"names":[],"mappings":"OAIS,EAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAQ,UAAU,EAAW,MAAM,eAAe;OACpF,EAAC,iBAAiB,EAAuB,MAAM,0BAA0B;AAEhF,OAAO,MAAM,uBAAuB,GAA2B;IAC7D,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,4BAA4B,CAAC;IAC3D,KAAK,EAAE,IAAI;CACZ,CAAC;AACF;IAIE,YAAoB,SAAmB,EAAU,WAAuB;QAApD,cAAS,GAAT,SAAS,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAY;QAHxE,aAAQ,GAAG,CAAC,CAAM,OAAM,CAAC,CAAC;QAC1B,cAAS,GAAG,QAAO,CAAC,CAAC;IAEsD,CAAC;IAE5E,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACtF,CAAC;IACD,gBAAgB,CAAC,EAAkB,IAAU,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;IAClE,iBAAiB,CAAC,EAAY,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;AAahE,CAAC;AAZM,uCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EACJ,mGAAmG;gBACvG,IAAI,EAAE,EAAC,UAAU,EAAE,iCAAiC,EAAE,QAAQ,EAAE,aAAa,EAAC;gBAC9E,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC,EAAG,EAAE;CACL,CAAC;AACK,2CAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CACA","sourcesContent":["interface DecoratorInvocation {\n    type: Function;\n    args?: any[];\n  }\n  import {Directive, Renderer, ElementRef, Self, forwardRef, Provider} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from './control_value_accessor';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = /*@ts2dart_const*/ {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\nexport class CheckboxControlValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n  writeValue(value: any): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n  }\n  registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n  registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][ngControl],input[type=checkbox][ngFormControl],input[type=checkbox][ngModel]',\n  host: {'(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()'},\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n"]}